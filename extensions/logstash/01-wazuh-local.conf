# Wazuh - Logstash configuration file
## Local Wazuh Manager - JSON file input
input {
   file {
       type => "wazuh-alerts"
       path => "/var/ossec/logs/alerts/alerts.json"
       codec => "json"
   }
}
filter {
    if [data][srcip] {
        mutate {
            add_field => [ "@src_ip", "%{[data][srcip]}" ]
        }
    }
    # if AWS, add IP for Geo-Tagging
    if [data][aws][cloudtrail][event][sourceIPAddress] {
        mutate {
            add_field => [ "@src_ip", "%{[data][aws][cloudtrail][event][sourceIPAddress]}" ]
        }
    }
    # if AWS event with timestamp, use that for ES @timestamp instead of ossec timestamp
    if [data][aws][cloudtrail][event][eventTime] {
        # Copy timestamp to ossec.timestamp
        mutate {
            copy => { "timestamp" => "[data][aws][cloudtrail][ossec_timestamp]" }
        }
        # If AWS timestamp in correct format, overwrite ossec timestamp
        date {
            match => ["[data][aws][cloudtrail][event][eventTime]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss'Z'"]
            target => "@timestamp"
        }
    } else {
        date {
            match => ["timestamp", "ISO8601"]
            target => "@timestamp"
        }
    }
}
filter {
    geoip {
        source => "@src_ip"
        target => "GeoLocation"
        fields => ["city_name", "country_name", "region_name", "location"]
    }
    mutate {
        remove_field => [ "timestamp", "beat", "input_type", "tags", "count", "@version", "log", "offset", "type","@src_ip"]
    }
}
output {
    elasticsearch {
        hosts => ["localhost:9200"]
        index => "wazuh-alerts-3.x-%{+YYYY.MM.dd}"
        document_type => "wazuh"
    }
}