---
test_name: DELETE /security/roles/{role_id}

includes:
  - !include common.yaml

marks:
  - usefixtures:
      - security_tests

stages:

  # Authentication stage
  - type: ref
    id: login_get_token

  # DELETE /security/roles/{role_id}
  - name: Try to delete a existent role
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/2"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 200
      body:
        data:
          removed_roles: [2]

  # DELETE /security/roles/1
  - name: Try to delete the admin role of the system
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/1"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 400
      body: &error_spec
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  # DELETE /security/roles/{non-existent role}
  - name: Try to delete a non-existent role
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/999"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 200
      body:
        data:
          incorrect_roles: [999]
---
test_name: DELETE /security/policies/{policy_id}

includes:
  - !include common.yaml

stages:

  # Authentication stage
  - type: ref
    id: login_get_token

  # DELETE /security/policies/{role_id}
  - name: Try to delete a existent policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies/2"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 200
      body:
        data:
          removed_policies: [2]

  # DELETE /security/policies/1
  - name: Try to delete the admin policy of the system
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies/1"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 400
      body:
        <<: *error_spec

  # DELETE /security/roles/{non-existent role}
  - name: Try to delete an inexistent policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies/999"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 200
      body:
        data:
          incorrect_policies: [999]
---
test_name: DELETE /security/roles/{role_id}/policies/{policy_id}

stages:

  # DELETE /security/roles/{role_id}/policies/{policy_id}
  - name: Try to delete a existent role-policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/3/policies/3"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 200
      body:
        id: 3
        name: !anystr
        rule: !anything

  # DELETE /security/roles/{non-existent role_id}/policies/{non-existent policy_id}
  - name: Try to delete a non-existent role-policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/999/policies/999"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 400
      body: &error_response_role
        code: !anyint
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: "about:blank"

  # DELETE /security/roles/{non-existent role_id}/policies/{policy_id}
  - name: Try to delete a non-existent role-policy (role non-existent)
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/999/policies/3"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 400
      body:
        <<: *error_response_role

  # DELETE /security/roles/{role_id}/policies/{policy_id}
  - name: Try to delete a non-existent role-policy (policy non-existent)
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/3/policies/999"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
    response:
      status_code: 400
      body:
        <<: *error_response_role
---
test_name: DELETE /security/roles

stages:

  # DELETE /security/roles
  - name: Try to delete two existent roles
    request: &delete_all_roles_request
      url: "{protocol:s}://{host:s}:{port:d}/security/roles"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        list_roles: 3,4
    response:
      status_code: 200
      body:
        data:
          incorrect_roles: []
          removed_roles: [3, 4]

  # DELETE /security/roles
  - name: Try to delete all roles of the system
    request:
      <<: *delete_all_roles_request
    response:
      status_code: 200
      body:
        data:
          removed_roles: !anything

  # DELETE /security/roles
  - name: Try to delete the administrator role
    request:
      <<: *delete_all_roles_request
      params:
        list_roles: 1
    response:
      status_code: 400
      body:
        <<: *error_spec
---
test_name: DELETE /security/policies

stages:

  # DELETE /security/policies
  - name: Try to delete two existent policies
    request: &delete_all_policies_request
      url: "{protocol:s}://{host:s}:{port:d}/security/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        list_policies: 3,4
    response:
      status_code: 200
      body:
        data:
          incorrect_policies: []
          removed_policies: [3, 4]

  # DELETE /security/policies
  - name: Try to delete all policies of the system
    request:
      <<: *delete_all_policies_request
    response:
      status_code: 200
      body:
        data:
          removed_policies: !anything

  - name: Try to delete the administrator policy
    request:
      <<: *delete_all_policies_request
      params:
        list_policies: 1
    response:
      status_code: 400
      body:
        <<: *error_spec
