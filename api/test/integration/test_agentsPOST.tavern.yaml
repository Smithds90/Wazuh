---
test_name: POST /agents

marks:
  - usefixtures:
      - agents_test

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Post to an agent

    request: &agent_request
      url: "{protocol:s}://{host:s}:{port:d}/agents"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        code: 1750

  - name: Create new agent

    request:
      <<: *agent_request
      json:
        name: "NewAgentPost"
        ip: "any"

    response:
      status_code: 200
      body: &agent_create_response
        data:
          id: !anystr
          key: !anystr

  - name: Create agent with name already present

    request:
      <<: *agent_request
      json:
        name: "NewAgentPost"
        ip: "any"

    response:
      status_code: 400
      body:
        code: 1705

  - name: Missing field name

    request:
      <<: *agent_request
      json:
        ip: "any"

    response:
      status_code: 400
      body: &error_spec
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Invalid field

    request:
      <<: *agent_request
      json:
        extrafield: "invalid"
        name: "testagentpost"
        ip: "any"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Missing IP parameter

    request:
      <<: *agent_request
      json:
        name: "NewAgentPost2"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Create an agent with specified IP

    request:
      <<: *agent_request
      method: POST
      json:
        name: "NewAgentPost3"
        ip: "100.100.100.100"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Create an agent with duplicated IP

    request:
      <<: *agent_request
      method: POST
      json:
        name: "NewAgentPost4"
        ip: "100.100.100.100"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Create an agent with invalid IP

    request:
      <<: *agent_request
      json:
        name: "NewAgentPost5"
        ip: "A.B.C.D"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Create an agent with invalid IP 2

    request:
      <<: *agent_request
      json:
        name: "NewAgentPost5"
        ip: "333.333.333.333"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Create an agent with force time

    request:
      <<: *agent_request
      method: POST
      json:
        name: "NewAgentPost3"
        ip: "any"
        force_time: 1

    response:
      status_code: 200
      body:
        <<: *agent_create_response

---
test_name: POST /agents/groups/:group_id

marks:
  - usefixtures:
      - agents_test

stages:
  - name: Create a group called webserver

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/groups/webserver"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        message: !anystr

  - name: Create a group called webserver that exist

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/groups/webserver"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        code: 1711

  - name: Create a group called ;group (is not alphanumeric)

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/groups/;group"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        <<: *error_spec

---
test_name: POST /agents/insert

stages:
  - name: Create new agent without param

    request: &agent_insert_request
      url: http://localhost:55000/agents/insert
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        code: 1750

  - name: Create new agent with this fields

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert"
        ip: "any"
        id: "750"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Name already present

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert"
        ip: "any"
        id: "751"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 400
      body:
        code: 1705

  - name: ID already in use

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsertI"
        ip: "any"
        id: "750"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 400
      body:
        code: 1708

  - name: Invalid key

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert1"
        ip: "any"
        id: "752"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64EXTRA"

    response:
      status_code: 400
      body:
        <<: *error_spec

  - name: Missing fields

    request:
      <<: *agent_insert_request
      json:
        ip: "any"

    response:
      status_code: 400
      body:
        <<: *error_spec

  - name: Extra field

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsertExtra"
        ip: "any"
        id: "753"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"
        extra: "Nothing"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  #- name: Automatic IP

    #request:
      #<<: *agent_insert_request
      #json:
        #name: "NewAgentPostInsertNOIP"
        #id: "754"
        #key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    #response:
      #status_code: 200
      #body:
        #<<: *agent_create_response

  - name: Manual IP

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsertMIP"
        id: "755"
        ip: "120.130.140.150"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Duplicated ID

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsertDIP"
        id: "756"
        ip: "120.130.140.150"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Create new agent

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert4"
        id: "760"
        ip: "192.246.247.249"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 200
      body:
        <<: *agent_create_response

  - name: Bad IP

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert"
        id: "760"
        ip: "192.246.247.d"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Bad IP 2

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert"
        id: "760"
        ip: "333.333.333.333"
        key: "1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64"

    response:
      status_code: 400
      body:
        code: 1706

  - name: Create an agent with force time

    request:
      <<: *agent_insert_request
      json:
        name: "NewAgentPostInsert"
        ip: "any"
        force_time: 1

    response:
      status_code: 200
      body:
        <<: *agent_create_response

---
test_name: POST /agents/restart

marks:
  - usefixtures:
      - agents_test

stages:
  - name: Restart all agents

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/restart"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        message: !anystr

    delay_after: 30

---
test_name: POST /agents/:agent_name

marks:
  - usefixtures:
      - agents_test

stages:
  - name: Create new agent by name

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/test_agent"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          id: !anystr
          key: !anystr

  - name: Try create agent (invalid_character)

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/test_%_agent"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        <<: *error_spec

  - name: Try create exists agent

    request:
      url: "{protocol:s}://{host:s}:{port:d}/agents/test_agent"
      method: POST
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 400
      body:
        code: 1705