openapi: '3.0.0'
info:
  description: "The Wazuh API is an open source RESTful API that allows for interaction\
    \ with the Wazuh manager from a web browser, command line tool like cURL or any\
    \ script or program that can make web requests. The Wazuh Kibana app relies on\
    \ this heavily and Wazuhâ€™s goal is to accommodate complete remote management of\
    \ the Wazuh infrastructure via the Wazuh Kibana app. Use the API to easily perform\
    \ everyday actions like adding an agent, restarting the manager(s) or agent(s)\
    \ or looking up syscheck details.\n"
  version: 4.0.0
  title: "Wazuh API"
  license:
    name: GPL 2.0
    url: 'https://github.com/wazuh/wazuh/blob/master/LICENSE'

components:
  schemas:
    ## Common models
    ApiResponse:
      type: object
      required:
      - error
      properties:
        error:
          type: integer
          format: int32
        message:
          type: string

    ListMetadata:
      type: object
      properties:
        totalItems:
          type: integer
          format: int32

    ## Agents models
    Agent:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AgentStatus'
        configSum:
          type: string
        group:
          type: array
          items:
            type: string
        name:
          type: string
        mergedSum:
          type: string
        ip:
          type: string
        manager:
          type: string
        node_name:
          type: string
        dateAdd:
          type: string
        version:
          type: string
        lastKeepAlive:
          type: string
        os:
          type: object
          properties:
            major:
              type: string
            name:
              type: string
            uname:
              type: string
            platform:
              type: string
            version:
              type: string
            codename:
              type: string
            arch:
              type: string
            minor:
              type: string
        id:
          type: string

    AgentByName:
      type: object
      properties:
        ip:
          type: string
        status:
          $ref: '#/components/schemas/AgentStatus'
        dateAdd:
          type: string
        name:
          type: string
        registerIP:
          type: string
        node_name:
          type: string
        id:
          type: string

    AgentAffected:
      type: object
      properties:
        msg:
          type: string
        affected_agents:
          type: array
          items:
            type: integer

    AllAgentAffected:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AgentAffected'
      properties:
        older_than:
          type: string
        total_affected_agents:
          type: integer
          format: int32

    AgentGroup:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              count:
                type: integer
              name:
                type: string
              mergedSum:
                type: string
              configSum:
                type: string

    AgentGroupDeleted:
      type: object
      properties:
        msg:
          type: string
        ids:
          type: array
          items:
            type: string
        affected_agents:
          type: array
          items:
            type: integer

    AgentIdKey:
      type: object
      properties:
        id:
          type: string
        key:
          type: string

    AgentSimple:
      type: object
      properties:
        version:
          type: string
        id:
          type: string
        name:
          type: string

    AgentStatus:
      type: string
      enum:
      - active
      - pending
      - neverconnected
      - disconnected

    AgentConfiguration:
      type: object
      properties:
        configuration:
          type: array
          items:
            properties:
              file:
                type: string
              logformat:
                type: string
              command:
                type: string
              alias:
                type: string
              target:
                type: array
                items:
                  type: string
              frequency:
                type: integer

    GroupConfiguration:
      type: object
      properties:
        filter:
          type: object
          properties:
            os:
              type: string
        config:
          type: object
          properties:
            localfile:
              type: array
              items:
                properties:
                  location:
                    type: string
                  log_format:
                    type: string

    ## Cache models
    GroupCache:
      type: object
      properties:
        all:
          type: array
          items:
            type: string
        group:
          type: object

    GroupCacheComplete:
      type: object
      properties:
        all:
          type: array
          items:
            type: string
        group:
          type: object
          properties:
            agents:
              type: array
              items:
                type: string

    ## CisCat models
    CiscatResults:
      type: object
      properties:
        profile:
          type: string
        score:
          type: integer
        error:
          type: integer
        scan:
          type: object
          properties:
            id:
              type: integer
            time:
              type: string
        fail:
          type: integer
        benchmark:
          type: integer
        pass:
          type: integer
        notchecked:
          type: integer
        unknown:
          type: integer

    ## Cluster models
    ClusterNode:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - worker
          - master
        version:
          type: string
          format: \d+\.\d+\.\d+
        ip:
          type: string

    Healthcheck:
      type: object
      properties:
        name:
          type: string
        info:
          type: object
          properties:
            ip:
              type: string
            version:
              type: string
              format: \d+\.\d+\.\d+
            type:
              type: string
              enum:
              - worker
              - master
            totalActiveAgents:
              type: integer
        status:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - Agent status
                  - Extra valid
                  - Integrity
                  - Last keep alive
              date_start:
                type: string
                format: date-time
              date_end:
                type: string
                format: date-time
              synchronized_files:
                type: integer
              free:
                type: boolean

    DaemonStatus:
      type: string
      enum:
      - stopped
      - running

    # Cluster and manager models
    WazuhDaemonsStatus:
      type: object
      properties:
        ossec-agentlessd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-analysisd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-authd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-csyslogd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-dbd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-monitord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-execd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-integratord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-logcollector:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-maild:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-remoted:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-reportd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-syscheckd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-clusterd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-modulesd:
          $ref: '#/components/schemas/DaemonStatus'

    WazuhInfo:
      type: object
      properties:
        path:
          type: string
        version:
          type: string
        compilation_date:
          type: string
        type:
          type: string
        max_agents:
          type: integer
        openssl_support:
          type: string
          enum:
          - yes
          - no
        ruleset_version:
          type: string
        tz_offset:
          type: string
        tz_name:
          type: string

    WazuhConfiguration:
      type: object
      properties:
        active-response:
          type: object
        command:
          type: array
          items:
            type: object
        agentless:
          type: object
        localfile:
          type: array
          items:
            type: object
        remote:
          type: array
          items:
            type: object
        syslog_output:
          type: object
        integration:
          type: object
        alerts:
          type: object
        client:
          type: object
        database_output:
          type: object
        email_alerts:
          type: object
        reports:
          type: object
        global:
          type: object
        open-scap:
          type: object
        cis-cat:
          type: object
        syscollector:
          type: object
        rootcheck:
          type: object
        ruleset:
          type: object
        syscheck:
          type: object
        auth:
          type: object
        cluster:
          type: object
        vulnerability-detector:
          type: object
        osquery:
          type: object
        labels:
          type: object

    WazuhStats:
      type: array
      items:
        type: object
        properties:
          hour:
            type: integer
          alerts:
            type: array
            items:
              type: object
              properties:
                sigid:
                  type: integer
                level:
                  type: integer
                times:
                  type: integer
          totalAlerts:
            type: integer
          events:
            type: integer
          syscheck:
            type: integer
          firewall:
            type: integer

    WazuhHourlyStats:
      type: object
      properties:
        averages:
          type: array
          items:
            type: integer
          minItems: 24
          maxItems: 24
        iterations:
          type: integer

    WazuhWeeklyStats:
      type: object
      properties:
        Sun:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Mon:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Tue:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Wed:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Thu:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Fri:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Sat:
          $ref: '#/components/schemas/WazuhHourlyStats'

    WazuhAnalysisdStats:
      type: object
      properties:
        total_events_decoded:
          type: integer
        syscheck_events_decoded:
          type: integer
        syscheck_edps:
          type: integer
        syscollector_events_decoded:
          type: integer
        syscollector_edps:
          type: integer
        rootcheck_events_decoded:
          type: integer
        rootcheck_edps:
          type: integer
        sca_events_decoded:
          type: integer
        sca_edps:
          type: integer
        hostinfo_events_decoded:
          type: integer
        hostinfo_edps:
          type: integer
        winevt_events_decoded:
          type: integer
        winevt_edps:
          type: integer
        other_events_decoded:
          type: integer
        other_events_edps:
          type: integer
        events_processed:
          type: integer
        events_edps:
          type: integer
        events_received:
          type: integer
        events_dropped:
          type: integer
        alerts_written:
          type: integer
        firewall_written:
          type: integer
        fts_written:
          type: integer
        syscheck_queue_usage:
          type: integer
        syscheck_queue_size:
          type: integer
        syscollector_queue_usage:
          type: integer
        syscollector_queue_size:
          type: integer
        rootcheck_queue_usage:
          type: integer
        rootcheck_queue_size:
          type: integer
        sca_queue_usage:
          type: integer
        sca_queue_size:
          type: integer
        hostinfo_queue_usage:
          type: integer
        hostinfo_queue_size:
          type: integer
        winevt_queue_usage:
          type: integer
        winevt_queue_size:
          type: integer
        event_queue_usage:
          type: integer
        event_queue_size:
          type: integer
        rule_matching_queue_usage:
          type: integer
        rule_matching_queue_size:
          type: integer
        alerts_queue_usage:
          type: integer
        alerts_queue_size:
          type: integer
        firewall_queue_usage:
          type: integer
        firewall_queue_size:
          type: integer
        statistical_queue_usage:
          type: integer
        statistical_queue_size:
          type: integer
        archives_queue_usage:
          type: integer
        archives_queue_size:
          type: integer

    WazuhRemotedStats:
      type: object
      properties:
        queue_size:
          type: integer
        total_queue_size:
          type: integer
        tcp_sessions:
          type: integer
        evt_count:
          type: integer
        ctrl_msg_count:
          type: integer
        discarded_count:
          type: integer
        msg_sent:
          type: integer
        recv_bytes:
          type: integer

    WazuhLogs:
      type: object
      properties:
        timestamp:
          type: string
        tag:
          type: string
          enum:
          - ossec-analysisd
          - ossec-remoted
          - sca
          - ossec-authd
          - wazuh-db
          - ossec-execd
          - ossec-maild
          - ossec-monitord
          - ossec-logcollector
          - ossec-rootcheck
          - ossec-syscheckd
          - wazuh-modulesd
          - wazuh-modulesd:agent-key-polling
          - wazuh-modulesd:aws-s3
          - wazuh-modulesd:azure-logs
          - wazuh-modulesd:ciscat
          - wazuh-modulesd:command
          - wazuh-modulesd:database
          - wazuh-modulesd:docker-listener
          - wazuh-modulesd:download
          - wazuh-modulesd:oscap
          - wazuh-modulesd:osquery
          - wazuh-modulesd:syscollector
          - wazuh-modulesd:vulnerability-detector
          - ossec-agentlessd
          - ossec-testrule
          - ossec-csyslogd
          - ossec-dbd
          - ossec-integratord
          - ossec-reportd
        level:
          type: string
          enum:
          - error
          - info
          - warning
          - debug
          - debug2
          - critical
        description:
          type: string

    LogSummary:
      type: object
      properties:
        info:
          type: integer
        all:
          type: integer
        critical:
          type: integer
        error:
          type: integer
        debug:
          type: integer
        warning:
          type: integer

    WazuhLogsSummary:
      type: object
      properties:
          ossec-analysisd:
            $ref: '#/components/schemas/LogSummary'
          ossec-remoted:
            $ref: '#/components/schemas/LogSummary'
          sca:
            $ref: '#/components/schemas/LogSummary'
          ossec-authd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-db:
            $ref: '#/components/schemas/LogSummary'
          ossec-execd:
            $ref: '#/components/schemas/LogSummary'
          ossec-maild:
            $ref: '#/components/schemas/LogSummary'
          ossec-monitord:
            $ref: '#/components/schemas/LogSummary'
          ossec-logcollector:
            $ref: '#/components/schemas/LogSummary'
          ossec-rootcheck:
            $ref: '#/components/schemas/LogSummary'
          ossec-syscheckd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:agent-key-polling:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:aws-s3:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:azure-logs:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:ciscat:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:command:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:database:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:docker-listener:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:download:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:oscap:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:osquery:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:syscollector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:vulnerability-detector:
            $ref: '#/components/schemas/LogSummary'
          ossec-agentlessd:
            $ref: '#/components/schemas/LogSummary'
          ossec-testrule:
            $ref: '#/components/schemas/LogSummary'
          ossec-csyslogd:
            $ref: '#/components/schemas/LogSummary'
          ossec-dbd:
            $ref: '#/components/schemas/LogSummary'
          ossec-integratord:
            $ref: '#/components/schemas/LogSummary'
          ossec-reportd:
            $ref: '#/components/schemas/LogSummary'

    ConfigurationValidation:
      type: object
      properties:
        status:
          type: string
          enum:
          - OK
          - KO
        details:
          type: array
          items:
            type: string

    RulesFiles:
      type: object
      properties:
        file:
          type: string
        path:
          type: string
        status:
          type: string
          enum:
          - enabled
          - disabled

    Rules:
      allOf:
        - $ref: '#/components/schemas/RulesFiles'
        - type: object
          properties:
            id:
              type: integer
            level:
              type: integer
              minimum: 0
              maximum: 15
            description:
              type: string
            groups:
              type: array
              items:
                type: string
            pci:
              type: array
              items:
                type: string
            gdpr:
              type: array
              items:
                type: string
            details:
              type: object

    # SCA models
    SCAChecks:
      type: object
      properties:
        file:
          type: string
        policy_id:
          type: string
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        rationale:
          type: string
        remediation:
          type: string
        process:
          type: string
        directory:
          type: string
        registry:
          type: string
        references:
          type: string
        result:
          type: string
          enum:
            - "passed"
            - "failed"

    SCADatabase:
      type: object
      properties:
        policy_id:
          type: string
        name:
          type: string
        description:
          type: string
        references:
          type: string
        pass:
          type: integer
        fail:
          type: integer
        score:
          type: integer
        end_scan:
          type: string
        start_scan:
          type: string

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: "Intended method to get a token"
      x-basicInfoFunc: api.authentication.check_user
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.authentication.decode_token
  parameters:
    agent_id:
      in: path
      name: agent_id
      description: Agent ID
      required: true
      schema:
        type: integer
    agent_name:
      in: path
      name: agent_name
      description: Agent name.
      required: true
      schema:
        type: string
    benchmark:
      in: query
      name: benchmark
      description: Filters by benchmark.
      schema:
        type: string
    component:
      in: path
      name: component
      description: Selected agent's component.
      required: true
      schema:
        type: array
        items:
          type: string
          enum:
          - agent
          - agentless
          - analysis
          - auth
          - com
          - csyslog
          - integrator
          - logcollector
          - mail
          - monitor
          - request
          - syscheck
          - wmodules
    configuration:
      in: path
      name: configuration
      description: Selected agent's configuration to read
      required: true
      schema:
        type: array
        items:
          type: string
          enum:
          - client
          - buffer
          - labels
          - internal
          - agentless
          - global
          - active_response
          - alerts
          - command
          - rules
          - decoders
          - auth
          - active-response
          - cluster
          - csyslog
          - integration
          - localfile
          - socket
          - remote
          - syscheck
          - rootcheck
          - wmodules
    description:
      in: query
      name: description
      description: Filters by policy description.
      schema:
        type: string
    directory:
      in: query
      name: directory
      description: Filters by directory.
      schema:
        type: string
    error:
      in: query
      name: error
      description: Filters by encountered errors.
      schema:
        type: integer
    fail:
      in: query
      name: fail
      description: Filters by failed checks.
      schema:
        type: integer
    fields:
      in: query
      name: fields
      description: List of fields affecting the operation.
      schema:
        type: string
    file:
      in: query
      name: file
      description: Filters by filename.
      schema:
        type: integer
    file_name:
      in: path
      name: file_name
      description: Filename.
      required: true
      schema:
        type: string
    format:
      in: query
      name: fromat
      description: Optional. Output format (JSON, XML).
      schema:
        type: array
        items:
          type: string
          enum:
          - json
          - xml
    group_cache:
      in: path
      name: group
      description: Cache group.
      required: true
      schema:
        type: string
    group_id:
      in: path
      name: group_id
      description: Group ID.
      required: true
      schema:
        type: string
    hash:
      in: query
      name: hash
      description: Select algorithm to generate the sum.
      schema:
        type: string
    limit:
      in: query
      name: limit
      description: Maximum number of elements to return
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
    list_agents:
      in: query
      name: list_agents
      description: Array of agent's IDs
      required: true
      schema:
        type: array
        items:
          type: integer
    list_groups:
      in: query
      name: list_groups
      description: Array of group's IDs
      schema:
        type: array
        items:
          type: string
    name:
      in: query
      name: name
      description: Filters by agent name.
      schema:
        type: string
    notchecked:
      in: query
      name: notchecked
      description: Filters by not checked.
      schema:
        type: integer
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: |
        Filters out disconnected agents for longer than specified. Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never connected agents, uses the register date.
      schema:
        type: string
    pass:
      in: query
      name: pass
      description: Filters by passed checks.
      schema:
        type: integer
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    process:
      in: query
      name: process
      description: Filters by process name.
      schema:
        type: integer
    profile:
      in: query
      name: profile
      description: Filters by evaluated profile.
      schema:
        type: string
    policy_id:
      in: path
      name: policy_id
      description: Filters by policy id.
      required: True
      schema:
        type: integer
    purge:
      in: query
      name: purge
      description: Delete an agent from the key store
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=Active&quot;
      schema:
        type: string
    rationale:
      in: query
      name: rationale
      description: Filters by rationale.
      schema:
        type: string
    registry:
      in: query
      name: registry
      description: Filters by registry.
      schema:
        type: string
    references:
      in: query
      name: references
      description: Filters by references.
      schema:
        type: string
    remediation:
      in: query
      name: remediation
      description: Filters by remediation.
      schema:
        type: string
    result:
      in: query
      name: result
      description: Filters by result.
      schema:
        type: string
    score:
      in: query
      name: score
      description: Filters by final score.
      schema:
        type: integer
    search:
      in: query
      name: search
      description: Looks for elements with the specified string
      schema:
        type: string
    select:
      in: query
      name: select
      description: Select which fields to return (separated by comma)
      schema:
        type: array
        items:
          type: string
    # It'd be more appropriate to be an array of strings, and separate the ascending or descending order in another param
    sort:
      in: query
      name: sort
      description: |
            Sorts the collection by a field or fields (separated by comma). Use +/- at the beginning to list in ascending or descending order.
      schema:
        type: string
    statusParam:
      in: query
      name: status
      description: Filters by agent status. Use commas to enter multiple statuses.
      schema:
        type: array
        items:
          type: string
          enum:
          - active
          - pending
          - neverconnected
          - disconnected
    title:
      in: query
      name: title
      description: Filters by title.
      schema:
        type: string
    type:
      in: query
      name: type
      description: Type of file.
      schema:
        type: array
        items:
          type: string
          enum:
          - conf
          - rootkit_files
          - rootkit_trojans
          - rcl
    unknown:
      in: query
      name: unknown
      description: Filters by unknown results.
      schema:
        type: integer
    version:
      in: query
      name: version
      description: Filters by agents version.
      schema:
        type: string
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    node_type:
      in: query
      name: type
      description: Filters by node type.
      schema:
        type: string
        enum:
        - worker
        - master
    node_id:
      in: path
      name: node_id
      description: Cluster node name.
      required: True
      schema:
        type: string
    section:
      in: query
      name: section
      description: Indicates the wazuh configuration section
      schema:
        type: string
        enum:
        - active-response
        - command
        - agentless
        - localfile
        - remote
        - syslog_output
        - integration
        - alerts
        - client
        - database_output
        - email_alerts
        - reports
        - global
        - open-scap
        - cis-cat
        - syscollector
        - rootcheck
        - ruleset
        - syscheck
        - auth
        - cluster
        - vulnerability-detector
        - osquery
        - labels
    field:
      in: query
      name: field
      description: Indicates a section child, e.g, fields for rule section are include, decoder_dir, etc.
      schema:
        type: string
    date:
      in: query
      name: date
      description: Selects the date for getting the statistical information. Format YYYYMMDD.
      schema:
        type: string
    category:
      in: query
      name: category
      description: Filter by category of log.
      schema:
        type: string
        enum:
        - ossec-analysisd
        - ossec-remoted
        - sca
        - ossec-authd
        - wazuh-db
        - ossec-execd
        - ossec-maild
        - ossec-monitord
        - ossec-logcollector
        - ossec-rootcheck
        - ossec-syscheckd
        - wazuh-modulesd
        - wazuh-modulesd:agent-key-polling
        - wazuh-modulesd:aws-s3
        - wazuh-modulesd:azure-logs
        - wazuh-modulesd:ciscat
        - wazuh-modulesd:command
        - wazuh-modulesd:database
        - wazuh-modulesd:docker-listener
        - wazuh-modulesd:download
        - wazuh-modulesd:oscap
        - wazuh-modulesd:osquery
        - wazuh-modulesd:syscollector
        - wazuh-modulesd:vulnerability-detector
        - ossec-agentlessd
        - ossec-testrule
        - ossec-csyslogd
        - ossec-dbd
        - ossec-integratord
        - ossec-reportd
    type_log:
      in: query
      name: type_log
      description: Filters by log level.
      schema:
        type: string
        enum:
          - all
          - error
          - warning
          - info
          - debug
          - debug2
          - critical
    path:
      in: query
      name: path
      description: Filepath to return.
      required: true
      schema:
        type: string
    overwrite:
      in: query
      name: overwrite
      description: If set to false, an exception will be raised when updating contents of an already existing filename.
      schema:
        type: boolean
    group:
      in: query
      name: group
      description: Filters by rule group.
      schema:
        type: string
    level:
      in: query
      name: level
      description: Filters by rule level. Can be a single level (4) or an interval (2-4)
      schema:
        type: string
        format: \d(?>-\d)?  # 4 or 4-5
    rule_path:
      in: query
      name: path
      description: Filters by rule path.
      schema:
        type: string
    rulestatus:
      in: query
      name: status
      description: Filters by rule status.
      schema:
        type: string
        enum:
        - enabled
        - disabled
        - all
    pci:
      in: query
      name: pci
      description: Filters by PCI requirement name.
      schema:
        type: string
    gdpr:
      in: query
      name: gdpr
      description: Filters by GDPR requirement.
      schema:
        type: string
    download:
      in: query
      name: download
      description: Downloads the specified file.
      schema:
        type: string
    rule_id:
      in: path
      name: rule_id
      description: Filters by rule ID.
      required: true
      schema:
        type: integer

tags:
  - name: active-response
    description: 'Agents Active Response'
  - name: agents
    description: 'Agents management related operations'
  - name: cache
    description: 'API cache management'
  - name: ciscat
    description: ''
  - name: cluster
    description: 'Wazuh cluster and nodes management'
  - name: sca
    description: 'Policy monitoring'
  - name: decoders
    description: ''
  - name: experimental
    description: ''
  - name: lists
    description: ''
  - name: login
    description: 'User authentication'
  - name: manager
    description: 'Wazuh manager information, status and logs'
  - name: rootcheck
    description: ''
  - name: rules
    description: 'Wazuh ruleset management'
  - name: syscheck
    description: ''
  - name: syscollector
    description: ''

security:
    - jwt: []

paths:
  /active-response/{agent_id}:
    put:
      tags:
        - active-response
      summary: 'Run an AR command in the agent'
      description: 'Runs an Active Response command on a specified agent'
      operationId: api.controllers.active_response_controller.active_response
      parameters:
        - $ref: '#/components/parameters/agent_id'

      requestBody:
        content:
          application/json:
              schema:
                properties:
                  command:
                    description: Command running in the agent.
                    type: string

                  custom:
                    description: Custom.
                    type: boolean
                    default: false

                  arguments:
                    description: Command arguments.
                    type: array
                    items:
                      type: string
                required:
                  - command
      responses:
        '200':
          description: 'Command send to agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
                example:
                  data: "Command sent."
                  error: 0

  /agents:
    delete:
      tags:
      - agents
      summary: Delete agents
      description: |
        Removes agents, using a list of them or a criterion based on the status or time of the last connection. The Wazuh API must be restarted after removing an agent.
      operationId: api.controllers.agents_controller.delete_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/purge'
        - $ref: '#/components/parameters/statusParam'
        - $ref: '#/components/parameters/olderThanParam'
      responses:
        '200':
          description: Delete agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllAgentAffected'
              example:
                error: 0
                data:
                  msg: All selected agents were removed
                  affected_agents:
                  - '003'
                  - '005'
                  older_than: 10s
                  total_affected_agents: 2
    get:
      tags:
      - agents
      summary: 'Get all agents'
      description: 'Returns a list with the available agents.'
      operationId: api.controllers.agents_controller.get_all_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusParam'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/olderThanParam'
        - in: query
          name: os.platform
          description: Filters by OS platform.
          schema:
            type: string
        - in: query
          name: os.version
          description: Filters by OS version.
          schema:
            type: string
        - in: query
          name: os.name
          description: Filters by OS name.
          schema:
            type: string
        - in: query
          name: manager
          description: Filters by manager hostname to which agents are connected.
          schema:
            type: string
        - $ref: '#/components/parameters/version'
        - in: query
          name: group
          description: Filters by group of agents.
          schema:
            type: string
        - in: query
          name: node_name
          description: Filters by node name.
          schema:
            type: string
        - $ref: '#/components/parameters/name'
        - in: query
          name: ip
          description: Filters by agent IP
          schema:
            type: string
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Agent'
              example:
                error: 0
                data:
                  totalItems: 7
                  items:
                  - status: Active
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    group:
                    - default
                    name: agent1
                    mergedSum: f1a9e24e02ba4cc5ea80a9d3feb3bb9a
                    ip: 192.168.185.7
                    manager: manager
                    node_name: node02
                    dateAdd: '2018-10-11 09:38:47'
                    version: Wazuh v3.8.0
                    lastKeepAlive: '2018-10-11 13:58:08'
                    os:
                      major: '16'
                      name: Ubuntu
                      uname: Linux |ubuntu |4.4.0-135-generic |#161-Ubuntu SMP Mon Aug 27 10:45:01
                        UTC 2018 |x86_64
                      platform: ubuntu
                      version: 16.04.5 LTS
                      codename: Xenial Xerus
                      arch: x86_64
                      minor: '04'
                    id: '001'
                  - status: Active
                    name: manager
                    ip: 127.0.0.1
                    manager: manager
                    node_name: node01
                    dateAdd: '2018-10-11 09:37:23'
                    version: Wazuh v3.8.0
                    lastKeepAlive: '9999-12-31 23:59:59'
                    os:
                      major: '18'
                      name: Ubuntu
                      uname: Linux |manager |4.15.0-36-generic |#39-Ubuntu SMP Mon Sep 24 16:19:09
                        UTC 2018 |x86_64
                      platform: ubuntu
                      version: 18.04.1 LTS
                      codename: Bionic Beaver
                      arch: x86_64
                      minor: '04'
                    id: '000'
                  - status: Never connected
                    dateAdd: '2018-10-11 13:58:23'
                    name: NewHost_2
                    ip: 10.0.10.10
                    id: '123'
                    node_name: unknown
                  - status: Never connected
                    dateAdd: '2018-10-11 13:58:22'
                    name: NewHost
                    ip: 10.0.0.9
                    id: '007'
                    node_name: unknown
                  - status: Never connected
                    dateAdd: '2018-10-11 13:58:10'
                    group:
                    - default
                    name: server001
                    ip: 10.0.0.62
                    id: '002'
                    node_name: unknown
    post:
      tags:
      - agents
      summary: 'Add agent'
      description: 'Add a new agent.'
      operationId: api.controllers.agents_controller.add_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'

      requestBody:
        content:
          application/json:
              schema:
                properties:
                  name:
                    description: Agent name.
                    type: string
                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option config.BehindProxyServer to yes at config.js. Allowed values: IP, IP/NET, ANY"
                    type: string
                  force_time:
                    description: Remove the old agent with the same IP if disconnected since <force_time> seconds.
                    type: integer
                    minimum: 1
                required:
                - name
                - ip
      responses:
        '200':
          description: 'Add an agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                error: 0
                data:
                  id: "007"
                  key: MDA3IE5ld0hvc3QgMTAuMC4wLjkgZTk5MDE2ZTkzMjMyZDBjZDYyMGIyZTZmMTM2ZjMzMDQxMjY3M2E0NGRmOTNmODk1NzFjMGQyYzczY2VlYzRhZQ==
  /agents/{agent_id}:
    delete:
      tags:
        - agents
      summary: 'Delete an agent'
      description: 'Removes an agent.'
      operationId: api.controllers.agents_controller.delete_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/purge'
      responses:
        '200':
          description: 'Delete agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentAffected'
              example:
                error: 0
                data:
                  msg: All selected agents were removed
                  affected_agents:
                  - '008'
    get:
      tags:
        - agents
      summary: 'Get an agent'
      description: 'Returns various information from an agent.'
      operationId: api.controllers.agents_controller.get_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/Agent'
              example:
                error: 0
                data:
                    lastKeepAlive: '9999-12-31 23:59:59'
                    ip: 127.0.0.1
                    manager: manager
                    os:
                      arch: x86_64
                      codename: Bionic Beaver
                      major: '18'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |manager |4.15.0-36-generic |#39-Ubuntu SMP Mon Sep 24 16:19:09
                        UTC 2018 |x86_64
                      version: 18.04.1 LTS
                    status: Active
                    version: Wazuh v3.8.0
                    dateAdd: '2018-10-11 09:37:23'
                    name: manager
                    node_name: node01
                    id: '000'
  /agents/{agent_id}/config/{component}/{configuration}:
    get:
      tags:
        - agents
      summary: 'Get active configuration'
      description: 'Returns the active configuration in JSON format.'
      operationId: api.controllers.agents_controller.get_agent_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'
      responses:
        '200':
          description: 'Get agent configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AgentConfiguration'
              example:
                error: 0
                data:
                    localfile:
                      - logformat: command
                        command: df -P
                        alias: df -P
                        target:
                          - agent
                        frequency: 360
                      - logformat: full_command
                        command: netstat -tulpn | sed 's/\\([[:alnum:]]\\+\\)\\ \\+[[:digit:]]\\+\\ \\+[[:digit:]]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\)\\ \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[[:alnum:]\\-]*\\).*/\\1 \\2 == \\3 == \\4 \\5/' | sort -k 4 -g | sed 's/ == \\(.*\\) ==/:\\1/' | sed 1,2d
                        alias: netstat listening ports
                        target:
                          - agent
                        frequency: 360
                      - logformat: full_command
                        command: last -n 20
                        alias: last -n 20
                        target:
                          - agent
                        frequency: 360
                      - file: /var/ossec/logs/active-responses.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/auth.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/syslog
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/dpkg.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/kern.log
                        logformat: syslog
                        target:
                          - agent
  /agents/{agent_id}/group:
    delete:
      tags:
        - agents
      summary: 'Remove all agent groups.'
      description: 'Removes the group of the agent. The agent will automatically revert to the "default" group.'
      operationId: api.controllers.agents_controller.delete_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Remove the group of the agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
                example:
                  error: 0
                  data: "Group unset for agent '004'."
  /agents/{agent_id}/group/is_sync:
    get:
      tags:
        - agents
      summary: 'Get sync status of agent'
      description: 'Returns the sync status in JSON format.'
      operationId: api.controllers.agents_controller.get_sync_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent sync'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        properties:
                          syncef:
                            type: boolean

              example:
                error: 0
                data:
                    synced: false
  /agents/{agent_id}/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove a single group of an agent'
      description: 'Remove the group of the agent but will leave the rest of its group if it belongs to a multigroup.'
      operationId: api.controllers.agents_controller.delete_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove the group of the agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
                example:
                  error: 0
                  data: "Group 'dmz' unset for agent '004'."
    put:
      tags:
        - agents
      summary: 'Add agent group'
      description: 'Adds an agent to the specified group.'
      operationId: api.controllers.agents_controller.put_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
        - in: query
          name: force_single_group
          description: Wheter to append new group to current agent's group or replace it.
          schema:
            type: boolean
      responses:
        '200':
          description: 'Add agent to group'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string
                example:
                  error: 0
                  data: "Group '004' already belongs to group 'dmz'."
  /agents/{agent_id}/key:
    get:
      tags:
        - agents
      summary: 'Get agent key'
      description: 'Returns the key of an agent.'
      operationId: api.controllers.agents_controller.get_agent_key
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent key'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string

              example:
                error: 0
                data: MDA0IG1haW5fZGF0YWJhc2UgMTAuMC4wLjE1IDIzNGM1Y2MzZjhhNzA2OWY2ZGRjN2I0NDc1MWZmNmE1Zjg3MjExMTJiZWJhNmFhMWUyMDIzNWI4MTBjYWNiM2I=
  /agents/{agent_id}/restart:
    put:
      tags:
        - agents
      summary: 'Restart an agent'
      description: 'Restarts the specified agent.'
      operationId: api.controllers.agents_controller.put_restart_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Agent restarted'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentAffected'
                example:
                  error: 0
                  data:
                    msg: All selected agents were restarted
                    affected_agents:
                      - "007"
  /agents/{agent_id}/upgrade:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using online repository'
      description: 'Upgrade the agent using a WPK file from online repository.'
      operationId: api.controllers.agents_controller.put_upgrade_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: wpk_repo
          description: WPK repository.
          schema:
            type: string
        - $ref: '#/components/parameters/version'
        - in: query
          name: use_http
          description: Use protocol http. If it's false use https. By default the value is set to false.
          schema:
            type: boolean
        - in: query
          name: force
          description: Force upgrade.
          schema:
            type: integer
            enum:
              - "0"
              - "1"
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string
              example:
                error: 0
                data: "Upgrade procedure started"
  /agents/{agent_id}/upgrade_custom:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using online repository'
      description: 'Upgrade the agent using a WPK file from online repository.'
      operationId: api.controllers.agents_controller.put_upgrade_custom_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: file_path
          description: Path to the WPK file. The file must be on a folder on the Wazuh's installation directory (by default, <code>/var/ossec</code>).
          schema:
            type: string
        - in: query
          name: installer
          description: Installation script.
          schema:
            type: string
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string
              example:
                error: 0
                data: "Installation started"
  /agents/{agent_name}:
    put:
      tags:
        - agents
      summary: 'Add agent (quick method)'
      description: 'Adds a new agent with name :agent_name. This agent will use ANY as IP.'
      operationId: api.controllers.agents_controller.put_new_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
      responses:
        '200':
          description: 'Agent added'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                error: 0
                data:
                  id: "008"
                  key: MDA4IG15TmV3QWdlbnQgYW55IDIyNGVmNmI4NjYyMDk5OTc5NzdiZWJhNDRmZTAyNDI0NjU2ZDM1NjhjNWJiZWI4Njk0M2JkMzdjZjA5YjZlM2M=
  /agents/{agent_id}/upgrade_result:
    get:
      tags:
        - agents
      summary: 'Get upgrade result from agent'
      description: 'Returns the upgrade result from an agent.'
      operationId: api.controllers.agents_controller.get_agent_upgrade
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: timeout
          description: Seconds to wait for the agent to respond.
          schema:
            type: integer

      responses:
        '200':
          description: 'Get agent upgrade result'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string

              example:
                error: 0
                data: Agent upgraded successfully
  /agents/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove a single group of multiple agents'
      description: 'Remove a list of agents of a group.'
      operationId: api.controllers.agents_controller.delete_multiple_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove the group of multiple agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentAffected'
              example:
                error: 0
                data:
                  msg: All selected agents were removed to group dmz
                  affected_agents:
                  - '001'
                  - '002'
    post:
      tags:
        - agents
      summary: 'Add a list of agents to a group'
      description: 'Adds a list of agents to the specified group.'
      operationId: api.controllers.agents_controller.post_multiple_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'

      requestBody:
        content:
          application/json:
            schema:
              properties:
                agent_id_list:
                  description: List of agents ID.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: 'Add multiple agents to a group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentAffected'
              example:
                error: 0
                data:
                  msg: All selected agents assigned to group dmz
                  affected_agents:
                  - '001'
                  - '002'
  /agents/groups:
    delete:
      tags:
        - agents
      summary: 'Delete a list of groups'
      operationId: api.controllers.agents_controller.delete_list_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_groups'
      responses:
        '200':
          description: 'Remove multiple group of multiple agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                error: 0
                data:
                  msg: All selected groups were removed
                  affected_groups:
                  - 'webserver'
                  - 'dataserver'
                  affected_agents:
                  - '002'
                  - '005'
                  - '003'
    get:
      tags:
        - agents
      summary: 'Get groups'
      description: 'Returns the list of existing agent groups.'
      operationId: api.controllers.agents_controller.get_list_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'List all groups'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentGroup'
              example:
                error: 0
                data:
                  item:
                  - count: 2
                    name: default
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  - count: 3
                    name: dmz
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                  - count: 0
                    name: pciserver
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: ab73af41699f13fdd81903b5f23d8d00

  /agents/groups/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove group'
      description: 'Removes the group. Agents that were assigned to the removed group will automatically revert to the "default" group.'
      operationId: api.controllers.agents_controller.delete_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove a group and revert agents to default group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                error: 0
                data:
                  msg: All selected groups were removed
                  affected_groups:
                  - 'dmz'
                  affected_agents:
    get:
      tags:
        - agents
      summary: 'Get agents in a group'
      description: 'Returns the list of agents in a group.'
      operationId: api.controllers.agents_controller.get_agent_in_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusParam'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Agent'
              example:
                error: 0
                data:
                  totalItems: 3
                  items:
                  - os:
                      arch: x86_64
                      codename: Bionic Beaver
                      major: '18'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |agent-1 |4.15.0-43-generic |#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018 |x86_64
                      version: 18.04.1 LTS
                    group:
                      - default
                      - dmz
                    lastKeepAlive: '2019-02-19 10:31:09'
                    ip: 172.17.0.201
                    manager: manager
                    status: Active
                    version: Wazuh v3.8.2
                    dateAdd: '2019-02-19 10:25:42'
                    name: agent-1
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    registerIP: 172.17.0.201
                    node_name: node01
                    id: '001'
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                  - group:
                    - default
                    - dmz
                    lastKeepAlive: '10.0.0.62'
                    status: Never connected
                    dateAdd: '2019-02-19 10:30:59'
                    name: server001
                    registerIP: 10.0.0.62
                    node_name: unknown
                    id: '002'
                  - group:
                    - dmz
                    lastKeepAlive: '10.0.0.15'
                    status: Never connected
                    dateAdd: '2019-02-19 10:31:00'
                    name: main_database
                    registerIP: 10.0.0.15
                    node_name: unknown
                    id: '004'
    put:
      tags:
        - agents
      summary: 'Create a group'
      description: 'Creates a new group.'
      operationId: api.controllers.agents_controller.put_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Add new agent'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: string
              example:
                error: 0
                data: "Group 'pciserver' created"
  /agents/groups/{group_id}/configuration:
    get:
      tags:
        - agents
      summary: 'Get group configuration'
      description: 'Returns the group configuration (agent.conf).'
      operationId: api.controllers.agents_controller.get_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'Get group configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/GroupConfiguration'
              example:
                error: 0
                data:
                  totalItems: 1
                  items:
                  - filters:
                      os: Linux
                  - config:
                      localfile:
                      - location: /var/log/linux.log
                      - log_format: syslog
    post:
      tags:
        - agents
      summary: 'Put configuration file (agent.conf) into a group'
      description: 'Upload the group configuration (agent.conf).'
      operationId: api.controllers.agents_controller.post_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'

      requestBody:
        content:
          application/xml:
            schema:
              properties:
                file_name:
                  description: Updated file
                  type: string

      responses:
        '200':
          description: 'Upload configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: Agent configuration was updated successfully
  /agents/groups/{group_id}/files:
    get:
      tags:
        - agents
      summary: 'Get group files'
      description: 'Returns the files belonging to the group.'
      operationId: api.controllers.agents_controller.get_group_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'Get group files'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                properties:
                                  filename:
                                    type: string
                                  hash:
                                    type: string
              example:
                error: 0
                data:
                  totalItems: 24
                  items:
                    - filename: agent.conf
                      hash: ab73af41699f13fdd81903b5f23d8d00
                    - filename: ar.conf
                      hash: 76d8be9b97d8eae4c239e530ee7e71c8
                    - filename: cis_apache2224_rcl.txt
                      hash: 3c2469443a08b01c454ca35558cb9fa6
                    - filename: cis_debian_linux_rcl.txt
                      hash: cc12fdba595817758f308024f61acb71
                    - filename: cis_mysql5-6_community_rcl.txt
                      hash: f5f770160baf596373e4f77f987cc422
                    - filename: cis_mysql5-6_enterprise_rcl.txt
                      hash: de9865c809f1555d537e5a49872eaf4c
                    - filename: cis_rhel5_linux_rcl.txt
                      hash: a3af38b3f81a48332c7bcd9cf8aa6eff
                    - filename: cis_rhel6_linux_rcl.txt
                      hash: bdcfa3ab90b553f8e5c84cfa9fd90289
                    - filename: cis_rhel7_linux_rcl.txt
                      hash: 039e579029e3edcf8241fb391f46b12f
                    - filename: cis_rhel_linux_rcl.txt
                      hash: 569cd8a2cc7527cc75f81f77098de461
                    - filename: cis_sles11_linux_rcl.txt,
                      hash: d86ee36d384930293cbcc83c8fb57c93
                    - filename: cis_sles12_linux_rcl.txt
                      hash: 6f58710fa8eef659dc782a3fa4699e33
                    - filename: cis_win2012r2_domainL1_rcl.txt
                      hash: 8819dfa3523933b113e27a85fc9e568d
                    - filename: cis_win2012r2_domainL2_rcl.txt
                      hash: e8a2c7ab57bc8102b237f061b8f82dce
                    - filename: cis_win2012r2_memberL1_rcl.txt
                      hash: 38c88156d03af9372efd620e6e57d473
                    - filename: cis_win2012r2_memberL2_rcl.txt
                      hash: c4b62b3e01b5f5634a9719eb8a104028
                    - filename: merged.mg
                      hash: f8d49771911ed9d5c45b03a40babd065
                    - filename: rootkit_files.txt
                      hash: e5ddcac443143cef6237d5f9b8d48585
                    - filename:  rootkit_trojans.txt
                      hash: 6bcf7016d3e6b4c7faa62cf265c24dcc
                    - filename: system_audit_rcl.txt
                      hash: be69b84dd5ee73200bb903a46270e18c
                    - filename: system_audit_ssh.txt
                      hash: 407c1f5e103f0cb58249eb7252a84797
                    - filename: win_applications_rcl.txt
                      hash: 0a4ad12c8145aca8a28d31de5c448b48
                    - filename: win_audit_rcl.txt
                      hash: 92d8011facc8b921ece301ea4ce6a616
                    - filename: win_malware_rcl.txt
                      hash: 6a8d3c63a0e77dea35aaed3ee2cca3a1
  /agents/groups/{group_id}/files/{file_name}:
    get:
      tags:
        - agents
      summary: 'Get a file in group'
      description: 'Returns the specified file belonging to the group parsed to JSON.'
      operationId: api.controllers.agents_controller.get_group_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: 'Get group file'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            controls:
                              type: array
                              items:
                                properties:
                                  condition:
                                    type: string
                                  name:
                                    type: string
                                  reference:
                                    type: string
                                  checks:
                                    type: array
                                    items:
                                      type: string
              example:
                error: 0
                data:
                  controls:
                    - ...: ...
                    - condition: all required
                      name: CIS - Testing against the CIS Debian Linux Benchmark v1
                      reference: CIS_Debian_Benchmark_v1.0pdf
                      checks:
                        - f:/etc/debian_version
    post:
      tags:
        - agents
      summary: 'Upload file into a group'
      operationId: api.controllers.agents_controller.post_group_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'

      requestBody:
        content:
          application/xml:
            schema:
              properties:
                file_name:
                  description: Updated file
                  type: string

      responses:
        '200':
          description: 'Post group file'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: Agent configuration was updated successfully
  /agents/groups/insert:
    post:
      tags:
        - agents
      summary: 'Get a file in group'
      description: 'Returns the specified file belonging to the group parsed to JSON.'
      operationId: api.controllers.agents_controller.insert_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
              schema:
                properties:
                  name:
                    description: Agent name.
                    type: string

                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option config.BehindProxyServer to yes at config.js. Allowed values: IP, IP/NET, ANY"
                    type: string

                  id:
                    description: Agent ID.
                    type: string

                  key:
                    description: "Agent key. Minimum length: 64 characters. Allowed values: ^[a-zA-Z0-9]+$"
                    type: string

                  force:
                    description: Remove the old agent with the same IP if disconnected since <force> seconds.
                    type: integer
      responses:
        '200':
          description: 'Get group file'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                error: 0
                data:
                  id: 123
                  key: MTIzIE5ld0hvc3RfMiAxMC4wLjEwLjEwIDFhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5emFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6YWJjZGVmZ2hpNjQ=
  /agents/name/{agent_name}:
    get:
      tags:
        - agents
      summary: 'Get an agent by its name'
      description: 'Returns various information from an agent called :agent_name.'
      operationId: api.controllers.agents_controller.get_agent_by_name
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AgentByName'
              example:
                error: 0
                data:
                  ip: 10.0.0.9
                  status: Never connected
                  dateAdd: "2019-02-19 10:31:12"
                  name: NewHost
                  registerIP: 10.0.0.9
                  node_name: unknown
                  id: "007"
  /agents/no_group:
    get:
      tags:
        - agents
      summary: 'Get agents without group'
      description: 'Returns a list with the available agents without group.'
      operationId: api.controllers.agents_controller.get_agent_no_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get agents without group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/AgentByName'
              example:
                error: 0
                data:
                  totalItems: 3
                  items:
                    - ip: 10.0.0.20
                      status: Never connected
                      dateAdd: "2019-02-19 10:31:00"
                      name: server002
                      registerIP: 10.0.0.20
                      node_name: unknown
                      id: "006"
                    - ip: 10.0.0.9
                      status: Never connected
                      dateAdd: "2019-02-19 10:31:12"
                      name: NewHost
                      registerIP: 10.0.0.9
                      node_name: unknown
                      id: "007"
                    - ip: 10.0.10.10
                      status: Never connected
                      dateAdd: "2019-02-19 10:31:13"
                      name: NewHost_2
                      registerIP: 10.0.10.10
                      node_name: unknown
                      id: "123"
  /agents/outdated:
    get:
      tags:
        - agents
      summary: 'Get outdated agents'
      description: 'Returns the list of outdated agents.'
      operationId: api.controllers.agents_controller.get_agent_outdated
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get outdated agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/AgentSimple'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                    - version: Wazuh v3.0.0
                      id: "003"
                      name: main_database
                    - version: Wazuh v3.0.0
                      id: "004"
                      name: dmz002
  /agents/restart:
    post:
      tags:
      - agents
      summary: 'Restart a list of agents'
      operationId: api.controllers.agents_controller.restart_list_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'

      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  description: Array of agent ID's.
                  type: array
                  items:
                    type: string

      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentAffected'
                example:
                  error: 0
                  data:
                    msg: All selected agents were restarted
                    affected_agents:
                    - '002'
                    - '004'
    put:
      tags:
      - agents
      summary: 'Restarts all agents'
      operationId: api.controllers.agents_controller.restart_all_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                example:
                  error: 0
                  data: "Restarting all agents"
  /agents/stats/distinct:
    get:
      tags:
        - agents
      summary: 'Get distinct fields in agents'
      description: 'Returns all the different combinations that agents have for the selected fields. It also indicates the total number of agents that have each combination.'
      operationId: api.controllers.agents_controller.get_agent_fields
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get fields in agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                properties:
                                  os:
                                    properties:
                                      platform:
                                        type: string
                                        nullable: true
                                      version:
                                        type: string
                                        nullable: true
                                      name:
                                        type: string
                                        nullable: true
                                  count:
                                    type: integer
              example:
                error: 0
                data:
                  totalItems: 7
                  items:
                    - os:
                        platform: ubuntu
                      count: 2
                    - count: 5
  /agents/summary:
    get:
      tags:
        - agents
      summary: 'Get agents summary'
      description: 'Returns a summary of the available agents.'
      operationId: api.controllers.agents_controller.get_agent_summary
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Get summary of agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        Total:
                          type: integer
                        Active:
                          type: integer
                        Disconnected:
                          type: integer
                        Never connected:
                          type: integer
                        Pending:
                          type: integer
              example:
                error: 0
                data:
                  Total: 7
                  Active: 2
                  Disconnected: 0
                  Never connected: 5
                  Pending: 0
  /agents/summary/os:
    get:
      tags:
        - agents
      summary: 'Get OS summary'
      description: 'Returns a summary of the OS.'
      operationId: api.controllers.agents_controller.get_agent_summary_os
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get summary of agents OS'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                error: 0
                data:
                  totalItems: 1
                  items:
                    - ubuntu

  /cache/:
    delete:
      tags:
        - cache
      summary: 'Clear entire cache'
      description: 'Clears entire cache'
      operationId: api.controllers.cache_controller.delete_cache
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cache delete'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/GroupCache'
              example:
                error: 0
                data:
                  all:
                    -
                  groups:
    get:
      tags:
        - cache
      summary: 'Get cache index'
      description: 'Returns current cache index.'
      operationId: api.controllers.cache_controller.get_cache
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cache index'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/GroupCache'
              example:
                error: 0
                data:
                  all:
                    -
                  groups:

  /cache/{group}:
    delete:
      tags:
        - cache
      summary: 'Clear group cache'
      description: 'Clears cache of the specified group.'
      operationId: api.controllers.cache_controller.delete_cache_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_cache'
      responses:
        '200':
          description: 'Cache group delete'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/GroupCacheComplete'
              example:
                error: 0
                data:
                  all:
                    - /agents/stats/distinct?pretty&fields=os.platform
                  groups:
                    agents:
                      - /agents/stats/distinct?pretty&fields=os.platform

  /cache/config:
    get:
      tags:
        - cache
      summary: 'Return cache configuration.'
      description: 'Returns cache configuration.'
      operationId: api.controllers.cache_controller.get_cache_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cache index'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        debug:
                          type: boolean
                        defaultDuration:
                          type: integer
                        enabled:
                          type: boolean
                        appendKey:
                          type: array
                          items:
                            type: string
                        jsonp:
                          type: boolean
                        redisClient:
                          type: boolean
              example:
                error: 0
                data:
                  debug: false
                  defaultDuration: 750
                  enabled: false
                  appendKey:
                    -
                  jsonp: false
                  redisClient: false

  /ciscat/{agent_id}/results:
    get:
      tags:
      - ciscat
      summary: 'Get CIS-CAT results from an agent'
      description: "Returns the agent's ciscat results info."
      operationId: api.controllers.ciscat_controller.get_agents_cistat_results
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/benchmark'
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/pass'
        - $ref: '#/components/parameters/fail'
        - $ref: '#/components/parameters/error'
        - $ref: '#/components/parameters/notchecked'
        - $ref: '#/components/parameters/unknown'
        - $ref: '#/components/parameters/score'

      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/CiscatResults'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    score: 57
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:15.632-07:00"
                    fail: 79
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 104
                    notchecked: 36
                    unknown: 1
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_1_-_Workstation
                    score: 64
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:52.630-07:00"
                    fail: 53
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 96
                    notchecked: 71
                    unknown: 0

  /cluster/node:
    get:
      tags:
      - cluster
      summary: Get information about the local node.
      description: Returns basic information about the cluster node receiving the request.
      operationId: api.controllers.cluster_controller.get_cluster_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Node basic information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        node:
                          type: string
                        cluster:
                          type: string
                        type:
                          type: string
              example:
                error: 0
                data:
                  node: "node02"
                  cluster: "wazuh"
                  type: "worker"

  /cluster/nodes:
    get:
      tags:
      - cluster
      summary: Get information about all nodes in the cluster.
      description: Returns a list containing all connected nodes in the cluster.
      operationId: api.controllers.cluster_controller.get_cluster_nodes
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_type'
      responses:
        '200':
          description: 'List of connected nodes'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/ClusterNode'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                    - name: "node02"
                      type: "worker"
                      version: "3.9.0"
                      ip: "172.17.0.101"
                    - name: "node01"
                      type: "master"
                      version: "3.9.0"
                      ip: "172.17.0.100"

  /cluster/nodes/{node_id}:
    get:
      tags:
      - cluster
      summary: Get information about a specified node.
      description: Returns information about a specified node in the cluster.
      operationId: api.controllers.cluster_controller.get_cluster_node_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ClusterNode'
              example:
                error: 0
                data:
                  name: "node02"
                  type: "worker"
                  version: "3.9.0"
                  ip: "172.17.0.101"

  /cluster/healthcheck:
    get:
      tags:
      - cluster
      summary: Show cluster healthcheck
      description: Returns cluster healthcheck information such as last keep alive, last synchronization time and number of agents reporting on each node.
      operationId: api.controllers.cluster_controller.get_healthcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Health information
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Healthcheck'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                    - name: "node01"
                      info:
                        ip: "172.17.0.100"
                        version: "3.9.0"
                        type: "master"
                        totalActiveAgents: 2
                    - name: "node02"
                      info:
                        ip: "172.17.0.101"
                        version: "3.9.0"
                        type: "worker"
                        totalActiveAgents: 5
                      status:
                        - type: "Agent status"
                          date_start: "2019-01-11 18:52:57.72"
                          date_end: "2019-01-11 18:52:57.73"
                          synchronized_files: 4
                          free: true
                        - type: "Extra valid"
                          date_start: "2019-01-11 18:52:57.72"
                          date_end: "2019-01-11 18:52:57.73"
                          synchronized_files: 4
                          free: true
                        - type: "Integrity"
                          date_start: "2019-01-11 18:52:57.72"
                          date_end: "2019-01-11 18:52:57.73"
                          synchronized_files:
                            shared: 5
                            missing: 4
                            extra_valid: 0
                            extra: 0
                          free: true
                        - type: "Last keep alive"
                          date_start: "2019-01-11 18:52:57.72"
                          date_end: "2019-01-11 18:52:57.73"

  /cluster/healthcheck/{node_id}:
    get:
      tags:
      - cluster
      summary: Show a specified node's healthcheck information
      description: Returns cluster healthcheck information of an specified node.
      operationId: api.controllers.cluster_controller.get_healthcheck_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: Node health information
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/Healthcheck'
              example:
                error: 0
                data:
                  info:
                    ip: "172.17.0.101"
                    version: "3.9.0"
                    type: "worker"
                    totalActiveAgents: 5
                  status:
                    - type: "Agent status"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files: 4
                      free: true
                    - type: "Extra valid"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files: 4
                      free: true
                    - type: "Integrity"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files:
                        shared: 5
                        missing: 4
                        extra_valid: 0
                        extra: 0
                      free: true
                    - type: "Last keep alive"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"

  /cluster/status:
    get:
      tags:
      - cluster
      summary: Get cluster status
      description: Returns information about the cluster status.
      operationId: api.controllers.cluster_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cluster status'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        enabled:
                          type: string
                          enum:
                          - yes
                          - no
                        running:
                          type: string
                          enum:
                          - yes
                          - no
              example:
                error: 0
                data:
                  enabled: yes
                  running: yes

  /cluster/config:
    get:
      tags:
      - cluster
      summary: Get cluster configuration
      description: Returns the current cluster configuration
      operationId: api.controllers.cluster_controller.get_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Cluster configuration
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        name:
                          type: string
                        node_name:
                          type: string
                        node_type:
                          type: string
                          enum:
                          - master
                          - worker
                        key:
                          type: string
                        port:
                          type: integer
                        bind_addr:
                          type: string
                        nodes:
                          type: array
                          items:
                            type: string
                        hidden:
                          type: string
                        disabled:
                          type: boolean
              example:
                error: 0
                data:
                  name: wazuh
                  node_name: node02
                  node_type: worker
                  key: 9d273b53510fef702b54a92e9cffc82e
                  port: 1516
                  bind_addr: 0.0.0.0
                  nodes:
                    - 172.17.0.100
                  hidden: no
                  disabled: false

  /cluster/{node_id}/status:
    get:
      tags:
      - cluster
      summary: Get a specified node's status
      description: Returns the status of all Wazuh daemons in node node_id
      operationId: api.controllers.cluster_controller.get_status_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node wazuh daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                error: 0
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-monitord: running
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-clusterd: running
                  wazuh-modulesd: running

  /cluster/{node_id}/info:
    get:
      tags:
      - cluster
      summary: Get a specified node's information
      description: Returns basic information about a specified node such as version, compilation date, installation path.
      operationId: api.controllers.cluster_controller.get_info_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhInfo'
              example:
                error: 0
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: Wed Mar  6 11:42:59 UTC 2019
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC

  /cluster/{node_id}/configuration:
    get:
      tags:
      - cluster
      summary: Get a specified node's configuration
      description: Returns wazuh configuration used in node {node_id}
      operationId: api.controllers.cluster_controller.get_configuration_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Node configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhConfiguration'
              example:
                error: 0
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh

  /cluster/{node_id}/stats:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats.
      description: Returns Wazuh statistical information in node {node_id} for the current or specified date.
      operationId: api.controllers.cluster_controller.get_stats_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh node stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhStats'
              example:
                error: 0
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0

  /cluster/{node_id}/stats/hourly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by hour.
      description: Returns Wazuh statistical information in node {node_id} per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.cluster_controller.get_stats_hourly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                error: 0
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0

  /cluster/{node_id}/stats/weekly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by week.
      description: Returns Wazuh statistical information in node {node_id} per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.cluster_controller.get_stats_weekly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                error: 0
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0

  /cluster/{node_id}/stats/analysisd:
    get:
      tags:
      - cluster
      summary: Get a specified node's analysisd stats.
      description: Returns Wazuh analysisd statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_analysisd_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                error: 0
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384

  /cluster/{node_id}/stats/remoted:
    get:
      tags:
      - cluster
      summary: Get a specified node's remoted stats.
      description: Returns Wazuh remoted statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_remoted_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                error: 0
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0

  /cluster/{node_id}/logs:
    get:
      tags:
      - cluster
      summary: Get a specified node's wazuh logs.
      description: Returns the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh node logs'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/WazuhLogs'
              example:
                error: 0
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.

  /cluster/{node_id}/logs/summary:
    get:
      tags:
      - cluster
      summary: Get a summary of a specified node's wazuh logs.
      description: Returns a summary of the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_summary_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                error: 0
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0

  /cluster/{node_id}/files:
    get:
      tags:
      - cluster
      summary: Get file contents from a specified node in the cluster.
      description: Returns file contents from any file in cluster node {node_id}.
      operationId: api.controllers.cluster_controller.get_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
    post:
      tags:
      - cluster
      summary: Updates file contents in a specified cluster node.
      description: Replaces file contents with the data contained in the API request in a specified cluster node.
      operationId: api.controllers.cluster_controller.post_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/overwrite'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: File updated successfully.
    delete:
      tags:
      - cluster
      summary: Removes a file in a specified cluster node.
      description: Removes a specified file in the node {node-id}.
      operationId: api.controllers.cluster_controller.delete_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: File was deleted.

  /cluster/restart:
    put:
      tags:
      - cluster
      summary: Restarts all nodes in cluster.
      description: Restarts all nodes in cluster.
      operationId: api.controllers.cluster_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: Restarting cluster.

  /cluster/{node_id}/restart:
    put:
      tags:
      - cluster
      summary: Restarts a specific node in cluster.
      description: Restarts a specific node in cluster.
      operationId: api.controllers.cluster_controller.put_restart_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: Restarting manager.

  /cluster/configuration/validation:
    get:
      tags:
      - cluster
      summary: Check Wazuh configuration in all cluster nodes.
      description: Returns wether the Wazuh configuration in all cluster nodes is correct.
      operationId: api.controllers.cluster_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ConfigurationValidation'
              example:
                error: 0
                data:
                  status: KO
                  details:
                    - "(1230): Invalid element in the configuration: 'hello'."
                    - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."

  /cluster/{node_id}/configuration/validation:
    get:
      tags:
      - cluster
      summary: Check Wazuh configuration in a cluster node
      description: Returns wether the Wazuh configuration in node {node_id} is correct.
      operationId: api.controllers.cluster_controller.get_conf_validation_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ConfigurationValidation'
              example:
                error: 0
                data:
                  status: KO
                  details:
                    - "(1230): Invalid element in the configuration: 'hello'."
                    - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."

  /manager/status:
    get:
      tags:
      - manager
      summary: Get the Wazuh manager status
      description: Returns the status of all Wazuh daemons
      operationId: api.controllers.manager_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh manager daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                error: 0
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-monitord: running
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-clusterd: running
                  wazuh-modulesd: running

  /manager/info:
    get:
      tags:
      - manager
      summary: Get Wazuh manager information
      description: Returns basic information such as version, compilation date, installation path.
      operationId: api.controllers.manager_controller.get_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Manager information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhInfo'
              example:
                error: 0
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: Wed Mar  6 11:42:59 UTC 2019
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC

  /manager/configuration:
    get:
      tags:
      - manager
      summary: Get configuration
      description: Returns wazuh configuration used
      operationId: api.controllers.manager_controller.get_configuration
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Wazuh configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhConfiguration'
              example:
                error: 0
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh

  /manager/stats:
    get:
      tags:
      - manager
      summary: Get stats.
      description: Returns Wazuh statistical information for the current or specified date.
      operationId: api.controllers.manager_controller.get_stats
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhStats'
              example:
                error: 0
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0

  /manager/stats/hourly:
    get:
      tags:
      - manager
      summary: Get stats by hour.
      description: Returns Wazuh statistical information per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.manager_controller.get_stats_hourly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                error: 0
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0

  /manager/stats/weekly:
    get:
      tags:
      - manager
      summary: Get stats by week.
      description: Returns Wazuh statistical information per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.manager_controller.get_stats_weekly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                error: 0
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0

  /manager/stats/analysisd:
    get:
      tags:
      - manager
      summary: Get a analysisd stats.
      description: Returns Wazuh analysisd statistical information.
      operationId: api.controllers.manager_controller.get_stats_analysisd
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                error: 0
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384

  /manager/stats/remoted:
    get:
      tags:
      - manager
      summary: Get remoted stats.
      description: Returns Wazuh remoted statistical information.
      operationId: api.controllers.manager_controller.get_stats_remoted
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                error: 0
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0

  /manager/logs:
    get:
      tags:
      - manager
      summary: Get the wazuh manager logs.
      description: Returns the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh logs'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/WazuhLogs'
              example:
                error: 0
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.

  /manager/logs/summary:
    get:
      tags:
      - manager
      summary: Get a summary of the wazuh manager logs.
      description: Returns a summary of the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log_summary
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                error: 0
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0

  /manager/files:
    get:
      tags:
      - manager
      summary: Get file contents.
      description: Returns file contents from any file.
      operationId: api.controllers.manager_controller.get_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
    post:
      tags:
      - manager
      summary: Updates file contents.
      description: Replaces file contents with the data contained in the API request.
      operationId: api.controllers.manager_controller.post_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/overwrite'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: File updated successfully.
    delete:
      tags:
      - manager
      summary: Removes a file.
      description: Removes a specified file.
      operationId: api.controllers.manager_controller.delete_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: File was deleted.

  /manager/restart:
    put:
      tags:
      - manager
      summary: Restarts the wazuh manager.
      description: Restarts the wazuh manager.
      operationId: api.controllers.manager_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: string
              example:
                error: 0
                data: Restarting manager.

  /manager/configuration/validation:
    get:
      tags:
      - manager
      summary: Check Wazuh configuration.
      description: Returns wether the Wazuh configuration is correct.
      operationId: api.controllers.manager_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ConfigurationValidation'
              example:
                error: 0
                data:
                  status: KO
                  details:
                    - "(1230): Invalid element in the configuration: 'hello'."
                    - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."

  /rules:
    get:
      tags:
      - rules
      summary: Get information about all Wazuh rules.
      description: Returns a list containing information about each rule such as file where it's defined, description, rule group, status, etc.
      operationId: api.controllers.rules_controllers.get_rules
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/group'
        - $ref: '#/components/parameters/level'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/rule_path'
        - $ref: '#/components/parameters/rulestatus'
        - $ref: '#/components/parameters/pci'
        - $ref: '#/components/parameters/gdpr'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Rules'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                    - file: 0016-wazuh_rules.xml
                      path: ruleset/rules
                      id: 203
                      level: 9
                      description: Agent event queue is full. Events may be lost.
                      status: enabled
                      groups:
                      - agent_flooding
                      - wazuh
                      pci:
                      -
                      gdpr:
                      - IV_35.7.d
                      details:
                        if_sid: "201"
                        level: "full"
                    - file: 0015-ossec_rules.xml
                      path: ruleset/rules
                      id: 513
                      level: 9
                      description: Windows malware detected.
                      status: enabled
                      groups:
                      - rootcheck
                      - gpg13_4.2
                      - ossec
                      pci:
                      -
                      gdpr:
                      - IV_35.7.d
                      details:
                        if_sid: "510"
                        match: "^Windows Malware"

  /rules/{rule_id}:
    get:
      tags:
      - rules
      summary: Filters rules by ID.
      description: Filters results of /rules endpoint filtering by ID.
      operationId: api.controllers.rules_controllers.get_rules_id
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Rules'
              example:
                error: 0
                data:
                  totalItems: 1
                  items:
                    - file: 0225-mcafee_av_rules.xml
                      path: ruleset/rules
                      id: 7514
                      level: 5
                      description: McAfee Windows AV - EICAR test file detected.
                      status: enabled
                      groups:
                      - mcafee
                      pci:
                      -
                      gdpr:
                      -
                      details:
                        if_sid: "7505"
                        match: contains the EICAR test file
                        options: alert_by_email

  /rules/groups:
    get:
      tags:
      - rules
      summary: Get all rule groups names.
      description: Returns a list containing all rule groups names.
      operationId: api.controllers.rules_controllers.get_rules_groups
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'Rule groups names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                error: 0
                data:
                  totalItems: 4
                  items:
                    - access_control
                    - access_denied
                    - accesslog
                    - account_changed

  /rules/pci:
    get:
      tags:
      - rules
      summary: Get all PCI requirements.
      description: Returns all PCI requirements names defined in the Wazuh ruleset.
      operationId: api.controllers.rules_controllers.get_rules_pci
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'PCI requirements names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                error: 0
                data:
                  totalItems: 4
                  items:
                    - "1.1.1"
                    - "1.3.4"
                    - "1.4"
                    - "10.1"

  /rules/gdpr:
    get:
      tags:
      - rules
      summary: Get all GDPR requirements.
      description: Returns all PCI requirements names defined in the Wazuh ruleset.
      operationId: api.controllers.rules_controllers.get_rules_gdpr
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'PCI requirements names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                error: 0
                data:
                  totalItems: 4
                  items:
                    - "II_5.1.f"
                    - "IV_30.1.g"
                    - "IV_32.2"
                    - "IV_35.7.d"

  /rules/files:
    get:
      tags:
      - rules
      summary: Get all files which defines rules.
      description: Returns a list containing all files used to define rules and their status.
      operationId: api.controllers.rules_controllers.get_rules_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/rule_path'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/rulestatus'
        - $ref: '#/components/parameters/download'
      responses:
        '200':
          description: 'SCA database elements'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/RulesFiles'
              example:
                error: 0
                data:
                  totalItems: 4
                  items:
                    - file: 0010-rules_config.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0015-ossec_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0016-wazuh_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0020-syslog_rules.xml
                      path: ruleset/rules
                      status: enabled

  /sca/{agent_id}:
    get:
      tags:
      - sca
      summary: 'Get security configuration assessment (SCA) database'
      description: 'Returns the security SCA database of an agent.'
      operationId: api.controllers.sca_controller.get_sca_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'SCA database elements'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SCADatabase'
              example:
               error: 0
               data:
                totalItems: 2
                items:
                - name: "System audit for SSH hardening"
                  pass: 3
                  score: 33
                  references: "https://www.ssh.com/ssh/"
                  fail: 6
                  description: "Guidance for establishing a secure configuration for SSH service vulnerabilities."
                  policy_id: "system_audit_ssh"
                  end_scan: "2019-03-06 10:12:02"
                  start_scan: "2019-03-06 10:12:02"
                - name: "CIS benchmark for Debian/Linux"
                  pass: 36
                  score: 87
                  references: "https://www.cisecurity.org/cis-benchmarks/"
                  fail: 5
                  description: "This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux systems running on x86 and x64 platforms. Many lists are included including filesystem types, services, clients, and network protocols. Not all items in these lists are guaranteed to exist on all distributions and additional similar items may exist which should be considered in addition to those explicitly mentioned."
                  policy_id: "cis_debian"
                  end_scan: "2019-03-06 10:11:53"
                  start_scan: "2019-03-06 10:11:53"

  /sca/{agent_id}/checks/{policy_id}:
    get:
      tags:
      - sca
      summary: 'Get policy monitoring alerts for a given policy'
      description: 'Returns the policy monitoring alerts for a given policy'
      operationId: api.controllers.sca_controller.get_sca_checks
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/policy_id'
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/rationale'
        - $ref: '#/components/parameters/remediation'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/process'
        - $ref: '#/components/parameters/directory'
        - $ref: '#/components/parameters/registry'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/result'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of SCA Checks for a given policy ID'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SCAChecks'
              example:
                error: 0
                data:
                  totalItems: 2
                  items:
                  - result: "passed"
                    title: "Web exploits (uncommon file name inside htdocs) - Possible compromise"
                    directory:  "/var/www,/var/htdocs,/home/httpd,/usr/local/apache,/usr/local/apache2,/usr/local/www"
                    id: 1008
                    policy_id: "system_audit"
                    compliance:
                    - key: "pci_dss"
                      value: "6.5, 6.6, 11.4"
                  - file: "/etc/php.ini"
                    result: "passed"
                    title: "PHP - Displaying of errors is enabled"
                    id: 1003
                    policy_id: "system_audit"
                    compliance:
                    -

  /security/user/authenticate:
    get:
      tags:
      - login
      summary: 'User/password authentication to get an access token'
      description: 'This method should be called to get an API token. This token will expire at some time.'
      operationId: api.controllers.login_controller.login_user
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: 'Access unauthorized'

externalDocs:
  description: Find more about Wazuh API usage
  url: 'https://documentation.wazuh.com/current/user-manual/api/index.html'

