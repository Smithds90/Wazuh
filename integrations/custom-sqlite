#!/usr/bin/env python3
 
import sys
import json
import sqlite3
import os
import shutil

# Variables
db_dir = '/var/ossec/var/db/integrations/'
db_file = 'alerts.db'
db_name = (db_dir + db_file)
alert_file = open(sys.argv[1], mode='r') 

# Read the alert file
alert_json = json.loads(alert_file.read())
alert_file.close()

# Extract info
alert_id = alert_json['id']
alert_time =  alert_json['timestamp']
alert_agent = alert_json['agent']['name']
alert_level = alert_json['rule']['level']
alert_description = alert_json['rule']['description']

# Tuple for the database insert
alert_tuple = (alert_id, alert_level, alert_description, alert_time, alert_agent)

# Database 
try:
    os.mkdir(db_dir)
except FileExistsError:
    pass

os.chmod(db_dir, 0o775)
shutil.chown(db_dir, group='ossec')
# Make the file writable by operators in the ossec group
# so they can use the review menu
# TODO: check the mode rather than running this every time
os.chmod(db_name, 0o664)

conn = sqlite3.connect(db_name)

cur = conn.cursor()

cur.execute('''CREATE TABLE IF NOT EXISTS alert
    (
    id              INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    alert_id        VARCHAR(30) NOT NULL,
    alert_level     TINYINT NOT NULL,
    alert_desc      TEXT NOT NULL,
    alert_time      TEXT NOT NULL,
    agent_name      VARCHAR(64) NOT NULL,
    classification  TEXT
    )''')

cur.execute('INSERT INTO alert (alert_id,alert_level,alert_desc,alert_time,agent_name) VALUES (?,?,?,?,?)', alert_tuple)

conn.commit()
conn.close()

sys.exit(0)
