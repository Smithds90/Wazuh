/*
 * Wazuh Vulnerability Scanner - Unit Tests
 * Copyright (C) 2015, Wazuh Inc.
 * September 21, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "osScanner_test.hpp"
#include "scanOrchestrator/osScanner.hpp"
#include "scanOrchestrator/scanContext.hpp"
#include <algorithm>
#include <memory>
#include <string>
#include <vector>

/*
 * @brief Test instantion of the OsScanner class.
 */
TEST_F(OsScannerTest, TestInstantionOfTheOsScannerClass)
{
    // Instantion of the OsScanner class.
    EXPECT_NO_THROW(std::make_shared<OsScanner>());
}

/*
 * @brief Test handleRequest of the OsScanner class.
 */
TEST_F(OsScannerTest, TestHandleRequest)
{
    std::string data {R"({"type":"dbsync_packages"})"};
    std::vector<char> message(50, ' ');
    std::copy(data.begin(), data.end(), message.begin() + 15);

    std::shared_ptr<ScanContext> scanContext;

    // Instantion of the ScanContext struct.
    EXPECT_NO_THROW(scanContext = std::make_shared<ScanContext>());

    // TODO: Remove the comment below once the implementation of ScanContext is completed
    // EXPECT_NO_THROW(scanContext->build(message));

    std::shared_ptr<OsScanner> osScanner;

    // Instantion of the OsScanner class.
    EXPECT_NO_THROW(osScanner = std::make_shared<OsScanner>());

    // HandleRequest
    EXPECT_NO_THROW(osScanner->handleRequest(scanContext));
}
