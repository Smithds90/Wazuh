/*
 * Wazuh vulnerability scanner - Policy Manager
 * Copyright (C) 2015, Wazuh Inc.
 * November 22, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _VULNERABILITY_REPORT_HPP
#define _VULNERABILITY_REPORT_HPP

#include "json.hpp"
#include "socketClient.hpp"
#include "vulnerabilityScanner.hpp"

// This can be modified according to requirements.
const std::string LOCALFILE_MQ {"1"};
const std::string PATH {"/var/ossec/queue/sockets/queue"};

/**
 * @brief Class in charge to send vulnerability reports.
 *
 */
class VulnerabilityReport
{
public:
    /**
     * @brief Sends a formatted report through specified socket.
     *
     * @param socketClient Socket FD.
     * @param report JSON object with vulnerability report.
     * @param agentID Agent ID.
     * @param agentIP Agent IP.
     * @param agentName Agent name.
     */
    static void sendReport(SocketClient<Socket<OSPrimitives, NoHeaderProtocol>, EpollWrapper>& socketClient,
                           const nlohmann::json& report,
                           const std::string& agentID,
                           const std::string& agentIP,
                           const std::string& agentName)
    {
        try
        {
            std::ostringstream oss;

            // Header [001] (agent_name) ip->location:
            oss << LOCALFILE_MQ << ":"
                << "[" << agentID << "] (" << agentName << ") " << agentIP << "->" << VS_WM_NAME
                << ":"
                // Vulnerability report
                << report.dump();

            const std::string message = oss.str();
            socketClient.send(message.c_str(), message.size());
        }
        catch (...)
        {
            throw std::runtime_error("Couldn't send JSON report.");
        }
    }
};

#endif // _VULNERABILITY_REPORT_HPP
