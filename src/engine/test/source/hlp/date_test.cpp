#include <gtest/gtest.h>

#include "hlp_test.hpp"

auto constexpr NAME = "dateParser";
auto constexpr TARGET = "TargetField";
auto BUILD_YEAR = std::string(__DATE__).substr(7);

INSTANTIATE_TEST_SUITE_P(
    DateBuild,
    HlpBuildTest,
    ::testing::Values(BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"not_match"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00Z"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00.000Z"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00Z"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00.000Z"}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"01/01/22"}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"02/02/22"}}),
                     //  BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"2020-01-01 00:00:00.000 this_should_fail"}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"2020-01-01T00:00:00Z asd"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00Z", "en_US.UTF-8"}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"2020-01-01T01:00:00Z", "wrong_locale"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"%d %b %y %R %z"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"we dont verify the format string %"}}),
                      BuildT(SUCCESS, getDateParser, {NAME, TARGET, {}, {"%d %b %y %R %z", "en_US.UTF-8"}}),
                      BuildT(FAILURE, getDateParser, {NAME, TARGET, {}, {"%d %b %y %R %z", "wrong_locale"}})));

INSTANTIATE_TEST_SUITE_P(
    DateParse,
    HlpParseTest,
    ::testing::Values(
        ParseT(SUCCESS,
               "Monday, 02-Jan-06 15:04:05 MST ###123",
               j(fmt::format(R"({{"{}": "2006-01-02T08:04:05.000Z"}})", TARGET)),
               30,
               getDateParser,
               {NAME, TARGET, {}, {"%A, %d-%b-%y %T %Z", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Jun 14 15:16:01",
               j(fmt::format(R"({{"{}": "{}-06-14T15:16:01.000Z"}})", TARGET, BUILD_YEAR)),
               15,
               getDateParser,
               {NAME, TARGET, {}, {"%b %d %T", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "June 14 15:16:01",
               j(fmt::format(R"({{"{}": "{}-06-14T15:16:01.000Z"}})", TARGET, BUILD_YEAR)),
               16,
               getDateParser,
               {NAME, TARGET, {}, {"%B %d %T", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2019-12-12",
               j(fmt::format(R"({{"{}": "2019-12-12T00:00:00.000Z"}})", TARGET)),
               10,
               getDateParser,
               {NAME, TARGET, {}, {"%F", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2019-12-12 ABC",
               j(fmt::format(R"({{"{}": "2019-12-12T00:00:00.000Z"}})", TARGET)),
               10,
               getDateParser,
               {NAME, TARGET, {}, {"%F", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2019-12-12ABC",
               j(fmt::format(R"({{"{}": "2019-12-12T00:00:00.000Z"}})", TARGET)),
               10,
               getDateParser,
               {NAME, TARGET, {}, {"%F", "en_US.UTF-8"}}),
        ParseT(FAILURE, "ABC2019-12-12", {}, 0, getDateParser, {NAME, TARGET, {}, {"%F", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T16:15:55.000Z"}})", TARGET)),
               24,
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %Y", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55.103786 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T16:15:55.103Z"}})", TARGET)),
               31,
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %Y", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55.103786 2016 #####",
               j(fmt::format(R"({{"{}": "2016-12-26T16:15:55.103Z"}})", TARGET)),
               31,
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %Y", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55.103 MST 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T09:15:55.103Z"}})", TARGET)),
               32,
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %Z %Y", "en_US.UTF-8"}}),
        ParseT(FAILURE,
               "Mon Dec 26 16:15:55.103 MST 2016",
               {},
               0,
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %z %Y", "en_US.UTF-8"}}),
        //         ISO8601 no time zone and time zone needs two different formats
        ParseT(SUCCESS,
               "2018-08-14T14:30:02.203151+02:00",
               j(fmt::format(R"({{"{}": "2018-08-14T12:30:02.203Z"}})", TARGET)),
               32,
               getDateParser,
               {NAME, TARGET, {}, {"%FT%T%Ez", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2018-08-14T14:30:02.203151Z",
               j(fmt::format(R"({{"{}": "2018-08-14T14:30:02.203Z"}})", TARGET)),
               27,
               getDateParser,
               {NAME, TARGET, {}, {"%FT%TZ", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2018-08-14T14:30:02.203151Z other things",
               j(fmt::format(R"({{"{}": "2018-08-14T14:30:02.203Z"}})", TARGET)),
               27,
               getDateParser,
               {NAME, TARGET, {}, {"%FT%TZ", "en_US.UTF-8"}}),
        // timezone offsets
        ParseT(SUCCESS,
               "2018-08-14T14:30:02.203151-02:00",
               j(fmt::format(R"({{"{}": "2018-08-14T16:30:02.203Z"}})", TARGET)),
               32,
               getDateParser,
               {NAME, TARGET, {}, {"%FT%T%Ez", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "2018-08-14T14:30:02.203151-02:00 QWERTY",
               j(fmt::format(R"({{"{}": "2018-08-14T16:30:02.203Z"}})", TARGET)),
               32,
               getDateParser,
               {NAME, TARGET, {}, {"%FT%T%Ez", "en_US.UTF-8"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55 -0000 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T16:15:55.000Z"}})", TARGET)),
               strlen("Mon Dec 26 16:15:55 -0000 2016"),
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %z %Y"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:15:55 -0700 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T23:15:55.000Z"}})", TARGET)),
               strlen("Mon Dec 26 16:15:55 -0700 2016"),
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %T %z %Y"}}),
        ParseT(SUCCESS,
               "26 Dec 16 23:15 MST",
               j(fmt::format(R"({{"{}": "2016-12-26T16:15:00.000Z"}})", TARGET)),
               strlen("26 Dec 16 23:15 MST"),
               getDateParser,
               {NAME, TARGET, {}, {"%d %b %y %R %Z"}}),
        ParseT(FAILURE, "26 Dec 16 23:15 -0000", {}, 21, getDateParser, {NAME, TARGET, {}, {"%d %b %y %R %Z"}}),
        ParseT(SUCCESS,
               "26 Dec 16 23:15 -0000",
               j(fmt::format(R"({{"{}": "2016-12-26T23:15:00.000Z"}})", TARGET)),
               strlen("26 Dec 16 23:15 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%d %b %y %R %z"}}),
        ParseT(FAILURE, "26 Dec 16 23:15 -0000", {}, 21, getDateParser, {NAME, TARGET, {}, {"%d %b %y %R %Z"}}),
        ParseT(SUCCESS,
               "Monday, 26-Dec-16 16:16:55 MST",
               j(fmt::format(R"({{"{}": "2016-12-26T09:16:55.000Z"}})", TARGET)),
               strlen("Monday, 26-Dec-16 16:16:55 MST"),
               getDateParser,
               {NAME, TARGET, {}, {"%A, %d-%b-%y %T %Z"}}),
        ParseT(FAILURE,
               "Monday, 26-Dec-16 16:16:55 -0000",
               {},
               32,
               getDateParser,
               {NAME, TARGET, {}, {"%A, %d-%b-%y %T %Z"}}),
        ParseT(SUCCESS,
               "Monday, 26-Dec-16 16:16:55 -0000",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
               strlen("Monday, 26-Dec-16 16:16:55 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%A, %d-%b-%y %T %z"}}),
        ParseT(FAILURE,
               "Monday, 26-Dec-16 16:16:55 MST",
               {},
               0,
               getDateParser,
               {NAME, TARGET, {}, {"%A, %d-%b-%y %T %z"}}),
        ParseT(SUCCESS,
               "Mon, 26-Dec-16 16:16:55 MST",
               j(fmt::format(R"({{"{}": "2016-12-26T09:16:55.000Z"}})", TARGET)),
               strlen("Mon, 26-Dec-16 16:16:55 MST"),
               getDateParser,
               {NAME, TARGET, {}, {"%a, %d-%b-%y %T %Z"}}),
        ParseT(FAILURE,
               "Mon, 26-Dec-16 16:16:55 -0000",
               {},
               29,
               getDateParser,
               {NAME, TARGET, {}, {"%a, %d-%b-%y %T %Z"}}),
        ParseT(SUCCESS,
               "Mon, 26-Dec-16 16:16:55 -0000",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
               strlen("Mon, 26-Dec-16 16:16:55 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%a, %d-%b-%y %T %z"}}),
        ParseT(
            FAILURE, "Mon, 26-Dec-16 16:16:55 MST", {}, 0, getDateParser, {NAME, TARGET, {}, {"%a, %d-%b-%y %T %z"}}),
        ParseT(SUCCESS,
               "2016-12-26T16:16:55Z00:00",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
               strlen("2016-12-26T16:16:55Z00:00"),
               getDateParser,
               {NAME, TARGET, {}, {"%FT%TZ%Ez"}}),
        ParseT(SUCCESS,
               "2016-12-26T16:16:55Z07:00",
               j(fmt::format(R"({{"{}": "2016-12-26T09:16:55.000Z"}})", TARGET)),
               strlen("2016-12-26T16:16:55Z07:00"),
               getDateParser,
               {NAME, TARGET, {}, {"%FT%TZ%Ez"}}),
        ParseT(SUCCESS,
               "December 26 16:16:55.123 UTC",
               j(fmt::format(R"({{"{}": "{}-12-26T16:16:55.123Z"}})", TARGET, BUILD_YEAR)),
               strlen("December 26 16:16:55.123 UTC"),
               getDateParser,
               {NAME, TARGET, {}, {"%B %d %R:%6S %Z"}}),
        ParseT(SUCCESS,
               "December 26 16:16:55.123 -0000",
               j(fmt::format(R"({{"{}": "{}-12-26T16:16:55.123Z"}})", TARGET, BUILD_YEAR)),
               strlen("December 26 16:16:55.123 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%B %d %R:%6S %z"}}),
        ParseT(SUCCESS,
               "Dec 26 16:16:55.123 UTC",
               j(fmt::format(R"({{"{}": "{}-12-26T16:16:55.123Z"}})", TARGET, BUILD_YEAR)),
               strlen("Dec 26 16:16:55.123 UTC"),
               getDateParser,
               {NAME, TARGET, {}, {"%b %d %R:%6S %Z"}}),
        ParseT(SUCCESS,
               "Dec 26 16:16:55.123 -0000",
               j(fmt::format(R"({{"{}": "{}-12-26T16:16:55.123Z"}})", TARGET, BUILD_YEAR)),
               strlen("Dec 26 16:16:55.123 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%b %d %R:%6S %z"}}),
        ParseT(SUCCESS,
               "26/Dec/2016:16:16:55 -0000",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
               strlen("26/Dec/2016:16:16:55 -0000"),
               getDateParser,
               {NAME, TARGET, {}, {"%d/%b/%Y:%T %z"}}),
        // TODO: this is not working
        //  ParseT(SUCCESS,
        //         "2016/12/26 16:16:55",
        //         j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
        //         strlen("2016/12/26 16:16:55"),
        //         getDateParser,
        //         {NAME, TARGET, {}, {"%D %T"}}),
        ParseT(SUCCESS,
               "Mon Dec 26 16:16:55.103786 2016",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.103Z"}})", TARGET)),
               strlen("Mon Dec 26 16:16:55.103786 2016"),
               getDateParser,
               {NAME, TARGET, {}, {"%a %b %d %H:%M:%9S %Y"}}),
        ParseT(SUCCESS,
               "2016-12-26 16:16:55 UTC",
               j(fmt::format(R"({{"{}": "2016-12-26T16:16:55.000Z"}})", TARGET)),
               strlen("2016-12-26 16:16:55 UTC"),
               getDateParser,
               {NAME, TARGET, {}, {"%F %H:%M:%6S %Z"}})));
