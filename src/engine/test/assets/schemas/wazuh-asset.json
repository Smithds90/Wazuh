{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "wazuh-asset.json",
    "title": "Schema for Wazuh assets",
    "type": "object",
    "description": "Schema for Wazuh assets",
    "additionalProperties": false,
    "required": [
        "name"
    ],
    "anyOf": [
        {
            "required": [
                "check"
            ],
            "not": {
                "required": [
                    "allow"
                ]
            },
            "anyOf": [
                {
                    "allOf": [
                        {
                            "anyOf": [
                                {
                                    "required": [
                                        "normalize"
                                    ]
                                },
                                {
                                    "required": [
                                        "parse"
                                    ]
                                }
                            ]
                        },
                        {
                            "not": {
                                "required": [
                                    "outputs"
                                ]
                            }
                        }
                    ]
                },
                {
                    "required": [
                        "outputs"
                    ],
                    "not": {
                        "anyOf": [
                            {
                                "required": [
                                    "normalize"
                                ]
                            },
                            {
                                "required": [
                                    "parse"
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "required": [
                "allow",
                "parents"
            ],
            "not": {
                "anyOf": [
                    {
                        "required": [
                            "check"
                        ]
                    },
                    {
                        "required": [
                            "normalize"
                        ]
                    }
                ]
            }
        }
    ],
    "properties": {
        "name": {
            "type": "string",
            "description": "Name of the asset, short and concise name to identify this asset"
        },
        "metadata": {
            "type": "object",
            "description": "Metadata of the asset"
        },
        "parents": {
            "type": "array",
            "description": "This asset will process events coming only from the specified parents",
            "items": {
                "type": "string"
            }
        },
        "check": {
            "$ref": "#/definitions/_check"
        },
        "allow": {
            "$ref": "#/definitions/_check"
        },
        "normalize": {
            "type": "array",
            "description": "Modify the event. All operations are performed in declaration order and on best effort, this stage is a list composed of blocks, where each block can be a map [map] or a conditional map [check, map].",
            "minItems": 1,
            "items": {
                "$ref": "#/definitions/_normalizeBlock"
            }
        },
        "parse": {
            "type": "object",
            "description": "Parse the event using the specified parser engine. Suports `logql` parser.",
            "additionalProperties": false,
            "minProperties": 1,
            "properties": {
                "logql": {
                    "type": "array",
                    "description": "Try to parse a field of the event. Terminates once a parser expression matches. If no parser expression matches, this asset will not continue processing the event. Parser expressions are defined using the `field`: `logql_expression`, where `field` is the field name and `logql_expression` is the LogQL expression to be evaluated.",
                    "minItems": 1,
                    "items": {
                        "allOf": [
                            {
                                "$ref": "custom_ecs_field_1-10.json#"
                            },
                            {
                                "maxProperties": 1
                            }
                        ]
                    }
                }
            }
        },
        "outputs": {
            "type": "array",
            "description": "Outputs of the asset. All outputs are performed in declaration order and on best effort, this stage is a list composed of specific outputs types.",
            "minItems": 1
        }
    },
    "definitions": {
        "_check": {
            "oneOf": [
                {
                    "type": "array",
                    "description": "Check list, all conditions must be met in order to further process events with this asset, conditions are expressed as `field`: `condition`, where `field` is the field to check and `condition` can be a value, a reference or a conditional helper function.",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "custom_ecs_field_1-10.json#"
                            },
                            {
                                "maxProperties": 1
                            }
                        ]
                    },
                    "minItems": 1
                },
                {
                    "type": "string",
                    "description": "Check conditional expression, the expression must be valuated to true in order to further process events with this asset"
                }
            ]
        },
        "_normalizeBlock": {
            "type": "object",
            "description": "Never shown",
            "minItems": 1,
            "maxItems": 2,
            "additionalProperties": false,
            "properties": {
                "map": {
                    "allOf": [
                        {
                            "$ref": "custom_ecs_field_1-10.json#"
                        },
                        {
                            "description": "Modify fields on the event, syntax is `field`: `value`, where `field` is the field to modify and `value` is the new value. If `value` is a function helper, it will be executed and the result will be used as new value if executed correctly. If `value` is a reference it will be used as new value only if the reference exists."
                        }
                    ]
                },
                "check": {
                    "$ref": "#/definitions/_check"
                }
            }
        }
    }
}
