name: decoder_syscollector_process

check:
  - queue: +i_eq/64 #SYSCOLLECTOR_MQ
  - location: +exists

normalize:
  # decode_process
  #ID (scan_id)
  # type == process || type == process_end
  - check:
    - _pre_conditions: +i_eq/1
    - event.original.type: +s_eq/process_end
    - event.original.ID: +exists
    - event.original.process: +exist
    map:
      _decode_process_section: 1

  - check:
    - _pre_conditions: +i_eq/1
    - event.original.type: +s_eq/process
    - event.original.ID: +exists
    - event.original.process: +exists
    map:
      _decode_process_section: 1

    #process.timestamp
  - check:
    - event.original.process: +exist
    - event.original.timestamp: +not_exists
    map:
      event.original.timestamp: "NULL"

    #process.pid
  - check:
    - event.original.process: +exist
    - event.original.process.pid: +not_exists
    map:
      event.original.process.pid: "NULL"

    #process.name
  - check:
    - event.original.process: +exist
    - event.original.process.name: +not_exists
    map:
      event.original.process.name: "NULL"

    #process.state
  - check:
    - event.original.process: +exist
    - event.original.process.state: +not_exists
    map:
      event.original.process.state: "NULL"

    #process.ppid
  - check:
    - event.original.process: +exist
    - event.original.process.ppid: +not_exists
    map:
      event.original.process.ppid: "NULL"

    #process.utime
  - check:
    - event.original.process: +exist
    - event.original.process.utime: +not_exists
    map:
      event.original.process.utime: "NULL"

    #process.stime
  - check:
    - event.original.process: +exist
    - event.original.process.stime: +not_exists
    map:
      event.original.process.stime: "NULL"

    #process.cmd
  - check:
    - event.original.process: +exist
    - event.original.process.cmd: +not_exists
    map:
      event.original.process.cmd: "NULL"

    #fill process.argvs
  - check:
    - event.original.process: +exist
    - event.original.process.argvs: +exists
    map:
      _temporary_argvs: +s_fromArray/,/event.original.process.argvs
      event.original.process.argvs: _temporary_argvs
    #process.argvs
  - check:
    - event.original.process: +exist
    - event.original.process.argvs: +not_exists
    map:
      event.original.process.argvs: "NULL"

    #process.euser
  - check:
    - event.original.process: +exist
    - event.original.process.euser: +not_exists
    map:
      event.original.process.euser: "NULL"

    #process.ruser
  - check:
    - event.original.process: +exist
    - event.original.process.ruser: +not_exists
    map:
      event.original.process.ruser: "NULL"

    #process.suser
  - check:
    - event.original.process: +exist
    - event.original.process.suser: +not_exists
    map:
      event.original.process.suser: "NULL"

    #process.egroup
  - check:
    - event.original.process: +exist
    - event.original.process.egroup: +not_exists
    map:
      event.original.process.egroup: "NULL"

    #process.rgroup
  - check:
    - event.original.process: +exist
    - event.original.process.rgroup: +not_exists
    map:
      event.original.process.rgroup: "NULL"

    #process.sgroup
  - check:
    - event.original.process: +exist
    - event.original.process.sgroup: +not_exists
    map:
      event.original.process.sgroup: "NULL"

    #process.fgroup
  - check:
    - event.original.process: +exist
    - event.original.process.fgroup: +not_exists
    map:
      event.original.process.fgroup: "NULL"

    #process.priority
  - check:
    - event.original.process: +exist
    - event.original.process.priority: +not_exists
    map:
      event.original.process.priority: "NULL"

    #process.nice
  - check:
    - event.original.process: +exist
    - event.original.process.nice: +not_exists
    map:
      event.original.process.nice: "NULL"

    #process.size
  - check:
    - event.original.process: +exist
    - event.original.process.size: +not_exists
    map:
      event.original.process.size: "NULL"

    #process.vm_size
  - check:
    - event.original.process: +exist
    - event.original.process.vm_size: +not_exists
    map:
      event.original.process.vm_size: "NULL"

    #process.resident
  - check:
    - event.original.process: +exist
    - event.original.process.resident: +not_exists
    map:
      event.original.process.resident: "NULL"

    #process.share
  - check:
    - event.original.process: +exist
    - event.original.process.share: +not_exists
    map:
      event.original.process.share: "NULL"

    #process.start_time
  - check:
    - event.original.process: +exist
    - event.original.process.start_time: +not_exists
    map:
      event.original.process.start_time: "NULL"

    #process.pgrp
  - check:
    - event.original.process: +exist
    - event.original.process.pgrp: +not_exists
    map:
      event.original.process.pgrp: "NULL"

    #process.session
  - check:
    - event.original.process: +exist
    - event.original.process.session: +not_exists
    map:
      event.original.process.session: "NULL"

    #process.nlwp
  - check:
    - event.original.process: +exist
    - event.original.process.nlwp: +not_exists
    map:
      event.original.process.nlwp: "NULL"

    #process.tgid
  - check:
    - event.original.process: +exist
    - event.original.process.tgid: +not_exists
    map:
      event.original.process.tgid: "NULL"

    #process.tty
  - check:
    - event.original.process: +exist
    - event.original.process.tty: +not_exists
    map:
      event.original.process.tty: "NULL"

    #process.processor
  - check:
    - event.original.process: +exist
    - event.original.process.processor: +not_exists
    map:
      event.original.process.processor: "NULL"

  - check:
    - _decode_process_section: +i_eq/1
    - event.original.process: +exists
    map:
      _query_save: +s_concat/agent /$event.original.agent.id /process save /$event.original.ID /|$event.original.process.timestamp/|$event.original.process.pid/|$event.original.process.name/|$event.original.process.state/|$event.original.process.ppid/|$event.original.process.utime/|$event.original.process.stime/|$event.original.process.cmd/|$event.original.process.argvs/|$event.original.process.euser/|$event.original.process.ruser/|$event.original.process.suser/|$event.original.process.egroup/|$event.original.process.rgroup/|$event.original.process.sgroup/|$event.original.process.fgroup/|$event.original.process.priority/|$event.original.process.nice/|$event.original.process.size/|$event.original.process.vm_size/|$event.original.process.resident/|$event.original.process.share/|$event.original.process.start_time/|$event.original.process.pgrp/|$event.original.process.session/|$event.original.process.nlwp/|$event.original.process.tgid/|$event.original.process.tty/|$event.original.process.processor
      _process_save_response: +wdb_update/$_query_save

  - check:
    - _process_save_response: +i_eq/0 #returns true for ok send, so if there's an error
    map:
      #TODO: what to do in this case?

  - check:
    - _decode_process_section: +i_eq/1
    - event.original.process: +not_exists
    - event.original.type: +s_eq/process_end
    map:
      _query_del: +s_concat/agent /$event.original.agent.id /process del /$event.original.ID
      _process_del_response: +wdb_update/$_query_del

  - check:
    - _port_del_response: +i_eq/0
    map:
      #TODO: what to do in this case?

