---
name: auditd

metadata:
  description: Decoder for Linux auditd logs
  references:
    - https://docs.elastic.co/en/integrations/auditd
  product.name: auditd

definitions:
  TYPE_FIELD: type=<_log.record_type>
  NODE_FIELD: node=<auditd.log.node>
  LOG_log.EPOCH: <_log.epoch>
  LOG_SEQUENCE: <auditd.log.sequence>
  EPOCH_SEQ_FIELD: "($LOG_log.EPOCH:$LOG_SEQUENCE):"
  MSG_FIELD: msg=audit$EPOCH_SEQ_FIELD

check:
  - event.original: +r_match/msg=audit

# Example auditd logs:
# type=SYSCALL msg=audit(1485893834.891:18877199): arch=c000003e syscall=44 success=yes exit=184 a0=9 a1=7f564b2672a0 a2=b8 a3=0 items=0 ppid=1240 pid=1281 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\"charon\" exe=2F7573722F6C6962657865632F7374726F6E677377616E2F636861726F6E202864656C6574656429 key=(null)

parse:
  logql:
    # Logs that start with "type="
    - event.original: >-
        $TYPE_FIELD $MSG_FIELD <_log.msg>
        old auid=<auditd.log.old_auid> new auid=<auditd.log.new_auid>
        old ses=<auditd.log.old_ses> new ses=<auditd.log.new_ses>

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD<_log.msg/quoted/ / msg=><_log.sub_msg/quoted/'/'>

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD<_log.msg/quoted/ / msg=><_log.sub_msg/quoted/"/">

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD <_log.msg/quoted/ / msg=><_log.sub_msg/quoted/'/'>

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD <_log.msg/quoted/ / msg=><_log.sub_msg/quoted/"/">

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD <_log.msg>

    - event.original: >-
        $TYPE_FIELD $MSG_FIELD

    # Logs that start with "node="
    - event.original: >-
        $NODE_FIELD $TYPE_FIELD $MSG_FIELD <_log.msg>
        old auid=<auditd.log.old_auid> new auid=<auditd.log.new_auid>
        old ses=<auditd.log.old_ses> new ses=<auditd.log.new_ses>

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD
        $MSG_FIELD<_log.msg/quoted/ / msg=><_log.sub_msg/quoted/'/'>

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD
        $MSG_FIELD<_log.msg/quoted/ / msg=><_log.sub_msg/quoted/"/">

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD
        $MSG_FIELD <_log.msg/quoted/ / msg=><_log.sub_msg/quoted/'/'>

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD
        $MSG_FIELD <_log.msg/quoted/ / msg=><_log.sub_msg/quoted/"/">

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD $MSG_FIELD <_log.msg>

    - event.original: >-
        $NODE_FIELD $TYPE_FIELD $MSG_FIELD

normalize:
  - check:
      - _log.msg: +exists
      - _log.sub_msg: +exists
    map:
      _kv_msg: +s_concat/$_log.msg/ /$_log.sub_msg

  - check:
      - _log.sub_msg: +not_exists
      - _log.msg: +exists
    map:
      _kv_msg: $_log.msg

  - map:
      event.kind: event
      timestamp: $_log.epoch
      event.action: +s_lo/$_log.record_type
      _log: +delete_field
