{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "apache-fields.json",
  "name": "windows fields schema",
  "type": "object",
  "properties": {
    "@timestamp": {
      "$ref": "#/definitions/@timestamp"
    },
    "activity_id": {
      "$ref": "#/definitions/activity_id"
    },
    "agent": {
      "description": "The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.\nExamples include Beats. Agents may also run on observers. ECS agent.* fields shall be populated with details of the agent running on the host or observer where the event happened or the measurement was taken.",
      "type": [
        "object"
      ],
      "properties": {
        "build.original": {
          "$ref": "#/definitions/agent.build.original"
        },
        "ephemeral_id": {
          "$ref": "#/definitions/agent.ephemeral_id"
        },
        "id": {
          "$ref": "#/definitions/agent.id"
        },
        "name": {
          "$ref": "#/definitions/agent.name"
        },
        "type": {
          "$ref": "#/definitions/agent.type"
        },
        "version": {
          "$ref": "#/definitions/agent.version"
        }
      }
    },
    "agent.build.original": {
      "$ref": "#/definitions/agent.build.original"
    },
    "agent.ephemeral_id": {
      "$ref": "#/definitions/agent.ephemeral_id"
    },
    "agent.hostname": {
      "$ref": "#/definitions/agent.hostname"
    },
    "agent.id": {
      "$ref": "#/definitions/agent.id"
    },
    "agent.name": {
      "$ref": "#/definitions/agent.name"
    },
    "agent.type": {
      "$ref": "#/definitions/agent.type"
    },
    "agent.version": {
      "$ref": "#/definitions/agent.version"
    },
    "as": {
      "description": "An autonomous system (AS) is a collection of connected Internet Protocol (IP) routing prefixes under the control of one or more network operators on behalf of a single administrative entity or domain that presents a common, clearly defined routing policy to the internet.",
      "type": [
        "object"
      ],
      "properties": {
        "number": {
          "$ref": "#/definitions/as.number"
        },
        "organization.name": {
          "$ref": "#/definitions/as.organization.name"
        }
      }
    },
    "as.number": {
      "$ref": "#/definitions/as.number"
    },
    "as.organization.name": {
      "$ref": "#/definitions/as.organization.name"
    },
    "beat.hostname": {
      "$ref": "#/definitions/beat.hostname"
    },
    "beat.name": {
      "$ref": "#/definitions/beat.name"
    },
    "beat.timezone": {
      "$ref": "#/definitions/beat.timezone"
    },
    "client": {
      "description": "A client is defined as the initiator of a network connection for events regarding sessions, connections, or bidirectional flow records.\nFor TCP events, the client is the initiator of the TCP connection that sends the SYN packet(s). For other protocols, the client is generally the initiator or requestor in the network transaction. Some systems use the term \"originator\" to refer the client in TCP connections. The client fields describe details about the system acting as the client in the network event. Client fields are usually populated in conjunction with server fields. Client fields are generally not populated for packet-level events.\nClient / server representations can add semantic context to an exchange, which is helpful to visualize the data in certain situations. If your context falls in that category, you should still ensure that source and destination are filled appropriately.",
      "type": [
        "object"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/client.address"
        },
        "as.number": {
          "$ref": "#/definitions/client.as.number"
        },
        "as.organization.name": {
          "$ref": "#/definitions/client.as.organization.name"
        },
        "bytes": {
          "$ref": "#/definitions/client.bytes"
        },
        "domain": {
          "$ref": "#/definitions/client.domain"
        },
        "geo.city_name": {
          "$ref": "#/definitions/client.geo.city_name"
        },
        "geo.continent_code": {
          "$ref": "#/definitions/client.geo.continent_code"
        },
        "geo.continent_name": {
          "$ref": "#/definitions/client.geo.continent_name"
        },
        "geo.country_iso_code": {
          "$ref": "#/definitions/client.geo.country_iso_code"
        },
        "geo.country_name": {
          "$ref": "#/definitions/client.geo.country_name"
        },
        "geo.location": {
          "$ref": "#/definitions/client.geo.location"
        },
        "geo.name": {
          "$ref": "#/definitions/client.geo.name"
        },
        "geo.postal_code": {
          "$ref": "#/definitions/client.geo.postal_code"
        },
        "geo.region_iso_code": {
          "$ref": "#/definitions/client.geo.region_iso_code"
        },
        "geo.region_name": {
          "$ref": "#/definitions/client.geo.region_name"
        },
        "geo.timezone": {
          "$ref": "#/definitions/client.geo.timezone"
        },
        "ip": {
          "$ref": "#/definitions/client.ip"
        },
        "mac": {
          "$ref": "#/definitions/client.mac"
        },
        "nat.ip": {
          "$ref": "#/definitions/client.nat.ip"
        },
        "nat.port": {
          "$ref": "#/definitions/client.nat.port"
        },
        "packets": {
          "$ref": "#/definitions/client.packets"
        },
        "port": {
          "$ref": "#/definitions/client.port"
        },
        "registered_domain": {
          "$ref": "#/definitions/client.registered_domain"
        },
        "subdomain": {
          "$ref": "#/definitions/client.subdomain"
        },
        "top_level_domain": {
          "$ref": "#/definitions/client.top_level_domain"
        },
        "user.domain": {
          "$ref": "#/definitions/client.user.domain"
        },
        "user.email": {
          "$ref": "#/definitions/client.user.email"
        },
        "user.full_name": {
          "$ref": "#/definitions/client.user.full_name"
        },
        "user.group.domain": {
          "$ref": "#/definitions/client.user.group.domain"
        },
        "user.group.id": {
          "$ref": "#/definitions/client.user.group.id"
        },
        "user.group.name": {
          "$ref": "#/definitions/client.user.group.name"
        },
        "user.hash": {
          "$ref": "#/definitions/client.user.hash"
        },
        "user.id": {
          "$ref": "#/definitions/client.user.id"
        },
        "user.name": {
          "$ref": "#/definitions/client.user.name"
        },
        "user.roles": {
          "$ref": "#/definitions/client.user.roles"
        }
      }
    },
    "client.address": {
      "$ref": "#/definitions/client.address"
    },
    "client.as.number": {
      "$ref": "#/definitions/client.as.number"
    },
    "client.as.organization.name": {
      "$ref": "#/definitions/client.as.organization.name"
    },
    "client.bytes": {
      "$ref": "#/definitions/client.bytes"
    },
    "client.domain": {
      "$ref": "#/definitions/client.domain"
    },
    "client.geo.city_name": {
      "$ref": "#/definitions/client.geo.city_name"
    },
    "client.geo.continent_code": {
      "$ref": "#/definitions/client.geo.continent_code"
    },
    "client.geo.continent_name": {
      "$ref": "#/definitions/client.geo.continent_name"
    },
    "client.geo.country_iso_code": {
      "$ref": "#/definitions/client.geo.country_iso_code"
    },
    "client.geo.country_name": {
      "$ref": "#/definitions/client.geo.country_name"
    },
    "client.geo.location": {
      "$ref": "#/definitions/client.geo.location"
    },
    "client.geo.name": {
      "$ref": "#/definitions/client.geo.name"
    },
    "client.geo.postal_code": {
      "$ref": "#/definitions/client.geo.postal_code"
    },
    "client.geo.region_iso_code": {
      "$ref": "#/definitions/client.geo.region_iso_code"
    },
    "client.geo.region_name": {
      "$ref": "#/definitions/client.geo.region_name"
    },
    "client.geo.timezone": {
      "$ref": "#/definitions/client.geo.timezone"
    },
    "client.ip": {
      "$ref": "#/definitions/client.ip"
    },
    "client.mac": {
      "$ref": "#/definitions/client.mac"
    },
    "client.nat.ip": {
      "$ref": "#/definitions/client.nat.ip"
    },
    "client.nat.port": {
      "$ref": "#/definitions/client.nat.port"
    },
    "client.packets": {
      "$ref": "#/definitions/client.packets"
    },
    "client.port": {
      "$ref": "#/definitions/client.port"
    },
    "client.registered_domain": {
      "$ref": "#/definitions/client.registered_domain"
    },
    "client.subdomain": {
      "$ref": "#/definitions/client.subdomain"
    },
    "client.top_level_domain": {
      "$ref": "#/definitions/client.top_level_domain"
    },
    "client.user.domain": {
      "$ref": "#/definitions/client.user.domain"
    },
    "client.user.email": {
      "$ref": "#/definitions/client.user.email"
    },
    "client.user.full_name": {
      "$ref": "#/definitions/client.user.full_name"
    },
    "client.user.group.domain": {
      "$ref": "#/definitions/client.user.group.domain"
    },
    "client.user.group.id": {
      "$ref": "#/definitions/client.user.group.id"
    },
    "client.user.group.name": {
      "$ref": "#/definitions/client.user.group.name"
    },
    "client.user.hash": {
      "$ref": "#/definitions/client.user.hash"
    },
    "client.user.id": {
      "$ref": "#/definitions/client.user.id"
    },
    "client.user.name": {
      "$ref": "#/definitions/client.user.name"
    },
    "client.user.roles": {
      "$ref": "#/definitions/client.user.roles"
    },
    "cloud": {
      "description": "Fields related to the cloud or infrastructure the events are coming from.",
      "type": [
        "object"
      ],
      "properties": {
        "account.id": {
          "$ref": "#/definitions/cloud.account.id"
        },
        "account.name": {
          "$ref": "#/definitions/cloud.account.name"
        },
        "availability_zone": {
          "$ref": "#/definitions/cloud.availability_zone"
        },
        "instance.id": {
          "$ref": "#/definitions/cloud.instance.id"
        },
        "instance.name": {
          "$ref": "#/definitions/cloud.instance.name"
        },
        "machine.type": {
          "$ref": "#/definitions/cloud.machine.type"
        },
        "origin.account.id": {
          "$ref": "#/definitions/cloud.origin.account.id"
        },
        "origin.account.name": {
          "$ref": "#/definitions/cloud.origin.account.name"
        },
        "origin.availability_zone": {
          "$ref": "#/definitions/cloud.origin.availability_zone"
        },
        "origin.instance.id": {
          "$ref": "#/definitions/cloud.origin.instance.id"
        },
        "origin.instance.name": {
          "$ref": "#/definitions/cloud.origin.instance.name"
        },
        "origin.machine.type": {
          "$ref": "#/definitions/cloud.origin.machine.type"
        },
        "origin.project.id": {
          "$ref": "#/definitions/cloud.origin.project.id"
        },
        "origin.project.name": {
          "$ref": "#/definitions/cloud.origin.project.name"
        },
        "origin.provider": {
          "$ref": "#/definitions/cloud.origin.provider"
        },
        "origin.region": {
          "$ref": "#/definitions/cloud.origin.region"
        },
        "origin.service.name": {
          "$ref": "#/definitions/cloud.origin.service.name"
        },
        "project.id": {
          "$ref": "#/definitions/cloud.project.id"
        },
        "project.name": {
          "$ref": "#/definitions/cloud.project.name"
        },
        "provider": {
          "$ref": "#/definitions/cloud.provider"
        },
        "region": {
          "$ref": "#/definitions/cloud.region"
        },
        "service.name": {
          "$ref": "#/definitions/cloud.service.name"
        },
        "target.account.id": {
          "$ref": "#/definitions/cloud.target.account.id"
        },
        "target.account.name": {
          "$ref": "#/definitions/cloud.target.account.name"
        },
        "target.availability_zone": {
          "$ref": "#/definitions/cloud.target.availability_zone"
        },
        "target.instance.id": {
          "$ref": "#/definitions/cloud.target.instance.id"
        },
        "target.instance.name": {
          "$ref": "#/definitions/cloud.target.instance.name"
        },
        "target.machine.type": {
          "$ref": "#/definitions/cloud.target.machine.type"
        },
        "target.project.id": {
          "$ref": "#/definitions/cloud.target.project.id"
        },
        "target.project.name": {
          "$ref": "#/definitions/cloud.target.project.name"
        },
        "target.provider": {
          "$ref": "#/definitions/cloud.target.provider"
        },
        "target.region": {
          "$ref": "#/definitions/cloud.target.region"
        },
        "target.service.name": {
          "$ref": "#/definitions/cloud.target.service.name"
        }
      }
    },
    "cloud.account.id": {
      "$ref": "#/definitions/cloud.account.id"
    },
    "cloud.account.name": {
      "$ref": "#/definitions/cloud.account.name"
    },
    "cloud.availability_zone": {
      "$ref": "#/definitions/cloud.availability_zone"
    },
    "cloud.image.id": {
      "$ref": "#/definitions/cloud.image.id"
    },
    "cloud.instance.id": {
      "$ref": "#/definitions/cloud.instance.id"
    },
    "cloud.instance.name": {
      "$ref": "#/definitions/cloud.instance.name"
    },
    "cloud.machine.type": {
      "$ref": "#/definitions/cloud.machine.type"
    },
    "cloud.origin.account.id": {
      "$ref": "#/definitions/cloud.origin.account.id"
    },
    "cloud.origin.account.name": {
      "$ref": "#/definitions/cloud.origin.account.name"
    },
    "cloud.origin.availability_zone": {
      "$ref": "#/definitions/cloud.origin.availability_zone"
    },
    "cloud.origin.instance.id": {
      "$ref": "#/definitions/cloud.origin.instance.id"
    },
    "cloud.origin.instance.name": {
      "$ref": "#/definitions/cloud.origin.instance.name"
    },
    "cloud.origin.machine.type": {
      "$ref": "#/definitions/cloud.origin.machine.type"
    },
    "cloud.origin.project.id": {
      "$ref": "#/definitions/cloud.origin.project.id"
    },
    "cloud.origin.project.name": {
      "$ref": "#/definitions/cloud.origin.project.name"
    },
    "cloud.origin.provider": {
      "$ref": "#/definitions/cloud.origin.provider"
    },
    "cloud.origin.region": {
      "$ref": "#/definitions/cloud.origin.region"
    },
    "cloud.origin.service.name": {
      "$ref": "#/definitions/cloud.origin.service.name"
    },
    "cloud.project.id": {
      "$ref": "#/definitions/cloud.project.id"
    },
    "cloud.project.name": {
      "$ref": "#/definitions/cloud.project.name"
    },
    "cloud.provider": {
      "$ref": "#/definitions/cloud.provider"
    },
    "cloud.region": {
      "$ref": "#/definitions/cloud.region"
    },
    "cloud.service.name": {
      "$ref": "#/definitions/cloud.service.name"
    },
    "cloud.target.account.id": {
      "$ref": "#/definitions/cloud.target.account.id"
    },
    "cloud.target.account.name": {
      "$ref": "#/definitions/cloud.target.account.name"
    },
    "cloud.target.availability_zone": {
      "$ref": "#/definitions/cloud.target.availability_zone"
    },
    "cloud.target.instance.id": {
      "$ref": "#/definitions/cloud.target.instance.id"
    },
    "cloud.target.instance.name": {
      "$ref": "#/definitions/cloud.target.instance.name"
    },
    "cloud.target.machine.type": {
      "$ref": "#/definitions/cloud.target.machine.type"
    },
    "cloud.target.project.id": {
      "$ref": "#/definitions/cloud.target.project.id"
    },
    "cloud.target.project.name": {
      "$ref": "#/definitions/cloud.target.project.name"
    },
    "cloud.target.provider": {
      "$ref": "#/definitions/cloud.target.provider"
    },
    "cloud.target.region": {
      "$ref": "#/definitions/cloud.target.region"
    },
    "cloud.target.service.name": {
      "$ref": "#/definitions/cloud.target.service.name"
    },
    "code_signature": {
      "description": "These fields contain information about binary code signatures.",
      "type": [
        "object"
      ],
      "properties": {
        "digest_algorithm": {
          "$ref": "#/definitions/code_signature.digest_algorithm"
        },
        "exists": {
          "$ref": "#/definitions/code_signature.exists"
        },
        "signing_id": {
          "$ref": "#/definitions/code_signature.signing_id"
        },
        "status": {
          "$ref": "#/definitions/code_signature.status"
        },
        "subject_name": {
          "$ref": "#/definitions/code_signature.subject_name"
        },
        "team_id": {
          "$ref": "#/definitions/code_signature.team_id"
        },
        "timestamp": {
          "$ref": "#/definitions/code_signature.timestamp"
        },
        "trusted": {
          "$ref": "#/definitions/code_signature.trusted"
        },
        "valid": {
          "$ref": "#/definitions/code_signature.valid"
        }
      }
    },
    "code_signature.digest_algorithm": {
      "$ref": "#/definitions/code_signature.digest_algorithm"
    },
    "code_signature.exists": {
      "$ref": "#/definitions/code_signature.exists"
    },
    "code_signature.signing_id": {
      "$ref": "#/definitions/code_signature.signing_id"
    },
    "code_signature.status": {
      "$ref": "#/definitions/code_signature.status"
    },
    "code_signature.subject_name": {
      "$ref": "#/definitions/code_signature.subject_name"
    },
    "code_signature.team_id": {
      "$ref": "#/definitions/code_signature.team_id"
    },
    "code_signature.timestamp": {
      "$ref": "#/definitions/code_signature.timestamp"
    },
    "code_signature.trusted": {
      "$ref": "#/definitions/code_signature.trusted"
    },
    "code_signature.valid": {
      "$ref": "#/definitions/code_signature.valid"
    },
    "computer_name": {
      "$ref": "#/definitions/computer_name"
    },
    "container": {
      "description": "Container fields are used for meta information about the specific container that is the source of information. These fields help correlate data based containers from any runtime.",
      "type": [
        "object"
      ],
      "properties": {
        "cpu.usage": {
          "$ref": "#/definitions/container.cpu.usage"
        },
        "disk.read.bytes": {
          "$ref": "#/definitions/container.disk.read.bytes"
        },
        "disk.write.bytes": {
          "$ref": "#/definitions/container.disk.write.bytes"
        },
        "id": {
          "$ref": "#/definitions/container.id"
        },
        "image.name": {
          "$ref": "#/definitions/container.image.name"
        },
        "image.tag": {
          "$ref": "#/definitions/container.image.tag"
        },
        "labels": {
          "$ref": "#/definitions/container.labels"
        },
        "memory.usage": {
          "$ref": "#/definitions/container.memory.usage"
        },
        "name": {
          "$ref": "#/definitions/container.name"
        },
        "network.egress.bytes": {
          "$ref": "#/definitions/container.network.egress.bytes"
        },
        "network.ingress.bytes": {
          "$ref": "#/definitions/container.network.ingress.bytes"
        },
        "runtime": {
          "$ref": "#/definitions/container.runtime"
        }
      }
    },
    "container.cpu.usage": {
      "$ref": "#/definitions/container.cpu.usage"
    },
    "container.disk.read.bytes": {
      "$ref": "#/definitions/container.disk.read.bytes"
    },
    "container.disk.write.bytes": {
      "$ref": "#/definitions/container.disk.write.bytes"
    },
    "container.id": {
      "$ref": "#/definitions/container.id"
    },
    "container.image.name": {
      "$ref": "#/definitions/container.image.name"
    },
    "container.image.tag": {
      "$ref": "#/definitions/container.image.tag"
    },
    "container.labels": {
      "$ref": "#/definitions/container.labels"
    },
    "container.memory.usage": {
      "$ref": "#/definitions/container.memory.usage"
    },
    "container.name": {
      "$ref": "#/definitions/container.name"
    },
    "container.network.egress.bytes": {
      "$ref": "#/definitions/container.network.egress.bytes"
    },
    "container.network.ingress.bytes": {
      "$ref": "#/definitions/container.network.ingress.bytes"
    },
    "container.runtime": {
      "$ref": "#/definitions/container.runtime"
    },
    "data_stream": {
      "description": "The data_stream fields take part in defining the new data stream naming scheme.\nIn the new data stream naming scheme the value of the data stream fields combine to the name of the actual data stream in the following manner: `{data_stream.type}-{data_stream.dataset}-{data_stream.namespace}`. This means the fields can only contain characters that are valid as part of names of data streams. More details about this can be found in this https://www.elastic.co/blog/an-introduction-to-the-elastic-data-stream-naming-scheme[blog post].\nAn Elasticsearch data stream consists of one or more backing indices, and a data stream name forms part of the backing indices names. Due to this convention, data streams must also follow index naming restrictions. For example, data stream names cannot include `\\`, `/`, `*`, `?`, `\"`, `\u003c`, `\u003e`, `|`, ` ` (space character), `,`, or `#`. Please see the Elasticsearch reference for additional https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html#indices-create-api-path-params[restrictions].",
      "type": [
        "object"
      ],
      "properties": {
        "dataset": {
          "$ref": "#/definitions/data_stream.dataset"
        },
        "namespace": {
          "$ref": "#/definitions/data_stream.namespace"
        },
        "type": {
          "$ref": "#/definitions/data_stream.type"
        }
      }
    },
    "data_stream.dataset": {
      "$ref": "#/definitions/data_stream.dataset"
    },
    "data_stream.namespace": {
      "$ref": "#/definitions/data_stream.namespace"
    },
    "data_stream.type": {
      "$ref": "#/definitions/data_stream.type"
    },
    "destination": {
      "description": "Destination fields capture details about the receiver of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.\nDestination fields are usually populated in conjunction with source fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.",
      "type": [
        "object"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/destination.address"
        },
        "as.number": {
          "$ref": "#/definitions/destination.as.number"
        },
        "as.organization.name": {
          "$ref": "#/definitions/destination.as.organization.name"
        },
        "bytes": {
          "$ref": "#/definitions/destination.bytes"
        },
        "domain": {
          "$ref": "#/definitions/destination.domain"
        },
        "geo.city_name": {
          "$ref": "#/definitions/destination.geo.city_name"
        },
        "geo.continent_code": {
          "$ref": "#/definitions/destination.geo.continent_code"
        },
        "geo.continent_name": {
          "$ref": "#/definitions/destination.geo.continent_name"
        },
        "geo.country_iso_code": {
          "$ref": "#/definitions/destination.geo.country_iso_code"
        },
        "geo.country_name": {
          "$ref": "#/definitions/destination.geo.country_name"
        },
        "geo.location": {
          "$ref": "#/definitions/destination.geo.location"
        },
        "geo.name": {
          "$ref": "#/definitions/destination.geo.name"
        },
        "geo.postal_code": {
          "$ref": "#/definitions/destination.geo.postal_code"
        },
        "geo.region_iso_code": {
          "$ref": "#/definitions/destination.geo.region_iso_code"
        },
        "geo.region_name": {
          "$ref": "#/definitions/destination.geo.region_name"
        },
        "geo.timezone": {
          "$ref": "#/definitions/destination.geo.timezone"
        },
        "ip": {
          "$ref": "#/definitions/destination.ip"
        },
        "mac": {
          "$ref": "#/definitions/destination.mac"
        },
        "nat.ip": {
          "$ref": "#/definitions/destination.nat.ip"
        },
        "nat.port": {
          "$ref": "#/definitions/destination.nat.port"
        },
        "packets": {
          "$ref": "#/definitions/destination.packets"
        },
        "port": {
          "$ref": "#/definitions/destination.port"
        },
        "registered_domain": {
          "$ref": "#/definitions/destination.registered_domain"
        },
        "subdomain": {
          "$ref": "#/definitions/destination.subdomain"
        },
        "top_level_domain": {
          "$ref": "#/definitions/destination.top_level_domain"
        },
        "user.domain": {
          "$ref": "#/definitions/destination.user.domain"
        },
        "user.email": {
          "$ref": "#/definitions/destination.user.email"
        },
        "user.full_name": {
          "$ref": "#/definitions/destination.user.full_name"
        },
        "user.group.domain": {
          "$ref": "#/definitions/destination.user.group.domain"
        },
        "user.group.id": {
          "$ref": "#/definitions/destination.user.group.id"
        },
        "user.group.name": {
          "$ref": "#/definitions/destination.user.group.name"
        },
        "user.hash": {
          "$ref": "#/definitions/destination.user.hash"
        },
        "user.id": {
          "$ref": "#/definitions/destination.user.id"
        },
        "user.name": {
          "$ref": "#/definitions/destination.user.name"
        },
        "user.roles": {
          "$ref": "#/definitions/destination.user.roles"
        }
      }
    },
    "destination.address": {
      "$ref": "#/definitions/destination.address"
    },
    "destination.as.number": {
      "$ref": "#/definitions/destination.as.number"
    },
    "destination.as.organization.name": {
      "$ref": "#/definitions/destination.as.organization.name"
    },
    "destination.bytes": {
      "$ref": "#/definitions/destination.bytes"
    },
    "destination.domain": {
      "$ref": "#/definitions/destination.domain"
    },
    "destination.geo.city_name": {
      "$ref": "#/definitions/destination.geo.city_name"
    },
    "destination.geo.continent_code": {
      "$ref": "#/definitions/destination.geo.continent_code"
    },
    "destination.geo.continent_name": {
      "$ref": "#/definitions/destination.geo.continent_name"
    },
    "destination.geo.country_iso_code": {
      "$ref": "#/definitions/destination.geo.country_iso_code"
    },
    "destination.geo.country_name": {
      "$ref": "#/definitions/destination.geo.country_name"
    },
    "destination.geo.location": {
      "$ref": "#/definitions/destination.geo.location"
    },
    "destination.geo.name": {
      "$ref": "#/definitions/destination.geo.name"
    },
    "destination.geo.postal_code": {
      "$ref": "#/definitions/destination.geo.postal_code"
    },
    "destination.geo.region_iso_code": {
      "$ref": "#/definitions/destination.geo.region_iso_code"
    },
    "destination.geo.region_name": {
      "$ref": "#/definitions/destination.geo.region_name"
    },
    "destination.geo.timezone": {
      "$ref": "#/definitions/destination.geo.timezone"
    },
    "destination.ip": {
      "$ref": "#/definitions/destination.ip"
    },
    "destination.mac": {
      "$ref": "#/definitions/destination.mac"
    },
    "destination.nat.ip": {
      "$ref": "#/definitions/destination.nat.ip"
    },
    "destination.nat.port": {
      "$ref": "#/definitions/destination.nat.port"
    },
    "destination.packets": {
      "$ref": "#/definitions/destination.packets"
    },
    "destination.port": {
      "$ref": "#/definitions/destination.port"
    },
    "destination.registered_domain": {
      "$ref": "#/definitions/destination.registered_domain"
    },
    "destination.subdomain": {
      "$ref": "#/definitions/destination.subdomain"
    },
    "destination.top_level_domain": {
      "$ref": "#/definitions/destination.top_level_domain"
    },
    "destination.user.domain": {
      "$ref": "#/definitions/destination.user.domain"
    },
    "destination.user.email": {
      "$ref": "#/definitions/destination.user.email"
    },
    "destination.user.full_name": {
      "$ref": "#/definitions/destination.user.full_name"
    },
    "destination.user.group.domain": {
      "$ref": "#/definitions/destination.user.group.domain"
    },
    "destination.user.group.id": {
      "$ref": "#/definitions/destination.user.group.id"
    },
    "destination.user.group.name": {
      "$ref": "#/definitions/destination.user.group.name"
    },
    "destination.user.hash": {
      "$ref": "#/definitions/destination.user.hash"
    },
    "destination.user.id": {
      "$ref": "#/definitions/destination.user.id"
    },
    "destination.user.name": {
      "$ref": "#/definitions/destination.user.name"
    },
    "destination.user.roles": {
      "$ref": "#/definitions/destination.user.roles"
    },
    "dll": {
      "description": "These fields contain information about code libraries dynamically loaded into processes.\n\nMany operating systems refer to \"shared code libraries\" with different names, but this field set refers to all of the following:\n* Dynamic-link library (`.dll`) commonly used on Windows\n* Shared Object (`.so`) commonly used on Unix-like operating systems\n* Dynamic library (`.dylib`) commonly used on macOS",
      "type": [
        "object"
      ],
      "properties": {
        "code_signature.digest_algorithm": {
          "$ref": "#/definitions/dll.code_signature.digest_algorithm"
        },
        "code_signature.exists": {
          "$ref": "#/definitions/dll.code_signature.exists"
        },
        "code_signature.signing_id": {
          "$ref": "#/definitions/dll.code_signature.signing_id"
        },
        "code_signature.status": {
          "$ref": "#/definitions/dll.code_signature.status"
        },
        "code_signature.subject_name": {
          "$ref": "#/definitions/dll.code_signature.subject_name"
        },
        "code_signature.team_id": {
          "$ref": "#/definitions/dll.code_signature.team_id"
        },
        "code_signature.timestamp": {
          "$ref": "#/definitions/dll.code_signature.timestamp"
        },
        "code_signature.trusted": {
          "$ref": "#/definitions/dll.code_signature.trusted"
        },
        "code_signature.valid": {
          "$ref": "#/definitions/dll.code_signature.valid"
        },
        "hash.md5": {
          "$ref": "#/definitions/dll.hash.md5"
        },
        "hash.sha1": {
          "$ref": "#/definitions/dll.hash.sha1"
        },
        "hash.sha256": {
          "$ref": "#/definitions/dll.hash.sha256"
        },
        "hash.sha512": {
          "$ref": "#/definitions/dll.hash.sha512"
        },
        "hash.ssdeep": {
          "$ref": "#/definitions/dll.hash.ssdeep"
        },
        "name": {
          "$ref": "#/definitions/dll.name"
        },
        "path": {
          "$ref": "#/definitions/dll.path"
        },
        "pe.architecture": {
          "$ref": "#/definitions/dll.pe.architecture"
        },
        "pe.company": {
          "$ref": "#/definitions/dll.pe.company"
        },
        "pe.description": {
          "$ref": "#/definitions/dll.pe.description"
        },
        "pe.file_version": {
          "$ref": "#/definitions/dll.pe.file_version"
        },
        "pe.imphash": {
          "$ref": "#/definitions/dll.pe.imphash"
        },
        "pe.original_file_name": {
          "$ref": "#/definitions/dll.pe.original_file_name"
        },
        "pe.product": {
          "$ref": "#/definitions/dll.pe.product"
        }
      }
    },
    "dll.code_signature.digest_algorithm": {
      "$ref": "#/definitions/dll.code_signature.digest_algorithm"
    },
    "dll.code_signature.exists": {
      "$ref": "#/definitions/dll.code_signature.exists"
    },
    "dll.code_signature.signing_id": {
      "$ref": "#/definitions/dll.code_signature.signing_id"
    },
    "dll.code_signature.status": {
      "$ref": "#/definitions/dll.code_signature.status"
    },
    "dll.code_signature.subject_name": {
      "$ref": "#/definitions/dll.code_signature.subject_name"
    },
    "dll.code_signature.team_id": {
      "$ref": "#/definitions/dll.code_signature.team_id"
    },
    "dll.code_signature.timestamp": {
      "$ref": "#/definitions/dll.code_signature.timestamp"
    },
    "dll.code_signature.trusted": {
      "$ref": "#/definitions/dll.code_signature.trusted"
    },
    "dll.code_signature.valid": {
      "$ref": "#/definitions/dll.code_signature.valid"
    },
    "dll.hash.md5": {
      "$ref": "#/definitions/dll.hash.md5"
    },
    "dll.hash.sha1": {
      "$ref": "#/definitions/dll.hash.sha1"
    },
    "dll.hash.sha256": {
      "$ref": "#/definitions/dll.hash.sha256"
    },
    "dll.hash.sha512": {
      "$ref": "#/definitions/dll.hash.sha512"
    },
    "dll.hash.ssdeep": {
      "$ref": "#/definitions/dll.hash.ssdeep"
    },
    "dll.name": {
      "$ref": "#/definitions/dll.name"
    },
    "dll.path": {
      "$ref": "#/definitions/dll.path"
    },
    "dll.pe.architecture": {
      "$ref": "#/definitions/dll.pe.architecture"
    },
    "dll.pe.company": {
      "$ref": "#/definitions/dll.pe.company"
    },
    "dll.pe.description": {
      "$ref": "#/definitions/dll.pe.description"
    },
    "dll.pe.file_version": {
      "$ref": "#/definitions/dll.pe.file_version"
    },
    "dll.pe.imphash": {
      "$ref": "#/definitions/dll.pe.imphash"
    },
    "dll.pe.original_file_name": {
      "$ref": "#/definitions/dll.pe.original_file_name"
    },
    "dll.pe.product": {
      "$ref": "#/definitions/dll.pe.product"
    },
    "dns": {
      "description": "Fields describing DNS queries and answers.\nDNS events should either represent a single DNS query prior to getting answers (`dns.type:query`) or they should represent a full exchange and contain the query details as well as all of the answers that were provided for this query (`dns.type:answer`).",
      "type": [
        "object"
      ],
      "properties": {
        "answers": {
          "$ref": "#/definitions/dns.answers"
        },
        "answers.class": {
          "$ref": "#/definitions/dns.answers.class"
        },
        "answers.data": {
          "$ref": "#/definitions/dns.answers.data"
        },
        "answers.name": {
          "$ref": "#/definitions/dns.answers.name"
        },
        "answers.ttl": {
          "$ref": "#/definitions/dns.answers.ttl"
        },
        "answers.type": {
          "$ref": "#/definitions/dns.answers.type"
        },
        "header_flags": {
          "$ref": "#/definitions/dns.header_flags"
        },
        "id": {
          "$ref": "#/definitions/dns.id"
        },
        "op_code": {
          "$ref": "#/definitions/dns.op_code"
        },
        "question.class": {
          "$ref": "#/definitions/dns.question.class"
        },
        "question.name": {
          "$ref": "#/definitions/dns.question.name"
        },
        "question.registered_domain": {
          "$ref": "#/definitions/dns.question.registered_domain"
        },
        "question.subdomain": {
          "$ref": "#/definitions/dns.question.subdomain"
        },
        "question.top_level_domain": {
          "$ref": "#/definitions/dns.question.top_level_domain"
        },
        "question.type": {
          "$ref": "#/definitions/dns.question.type"
        },
        "resolved_ip": {
          "$ref": "#/definitions/dns.resolved_ip"
        },
        "response_code": {
          "$ref": "#/definitions/dns.response_code"
        },
        "type": {
          "$ref": "#/definitions/dns.type"
        }
      }
    },
    "dns.answers": {
      "$ref": "#/definitions/dns.answers"
    },
    "dns.answers.class": {
      "$ref": "#/definitions/dns.answers.class"
    },
    "dns.answers.data": {
      "$ref": "#/definitions/dns.answers.data"
    },
    "dns.answers.name": {
      "$ref": "#/definitions/dns.answers.name"
    },
    "dns.answers.ttl": {
      "$ref": "#/definitions/dns.answers.ttl"
    },
    "dns.answers.type": {
      "$ref": "#/definitions/dns.answers.type"
    },
    "dns.header_flags": {
      "$ref": "#/definitions/dns.header_flags"
    },
    "dns.id": {
      "$ref": "#/definitions/dns.id"
    },
    "dns.op_code": {
      "$ref": "#/definitions/dns.op_code"
    },
    "dns.question.class": {
      "$ref": "#/definitions/dns.question.class"
    },
    "dns.question.name": {
      "$ref": "#/definitions/dns.question.name"
    },
    "dns.question.registered_domain": {
      "$ref": "#/definitions/dns.question.registered_domain"
    },
    "dns.question.subdomain": {
      "$ref": "#/definitions/dns.question.subdomain"
    },
    "dns.question.top_level_domain": {
      "$ref": "#/definitions/dns.question.top_level_domain"
    },
    "dns.question.type": {
      "$ref": "#/definitions/dns.question.type"
    },
    "dns.resolved_ip": {
      "$ref": "#/definitions/dns.resolved_ip"
    },
    "dns.response_code": {
      "$ref": "#/definitions/dns.response_code"
    },
    "dns.type": {
      "$ref": "#/definitions/dns.type"
    },
    "docker": {
      "type": [
        "object"
      ],
      "properties": {
        "container.id": {
          "$ref": "#/definitions/docker.container.id"
        },
        "container.image": {
          "$ref": "#/definitions/docker.container.image"
        },
        "container.labels": {
          "$ref": "#/definitions/docker.container.labels"
        },
        "container.name": {
          "$ref": "#/definitions/docker.container.name"
        }
      }
    },
    "docker.container.id": {
      "$ref": "#/definitions/docker.container.id"
    },
    "docker.container.image": {
      "$ref": "#/definitions/docker.container.image"
    },
    "docker.container.labels": {
      "$ref": "#/definitions/docker.container.labels"
    },
    "docker.container.name": {
      "$ref": "#/definitions/docker.container.name"
    },
    "ecs": {
      "description": "Meta-information specific to ECS.",
      "type": [
        "object"
      ],
      "properties": {
        "version": {
          "$ref": "#/definitions/ecs.version"
        }
      }
    },
    "ecs.version": {
      "$ref": "#/definitions/ecs.version"
    },
    "elf": {
      "description": "These fields contain Linux Executable Linkable Format (ELF) metadata.",
      "type": [
        "object"
      ],
      "properties": {
        "architecture": {
          "$ref": "#/definitions/elf.architecture"
        },
        "byte_order": {
          "$ref": "#/definitions/elf.byte_order"
        },
        "cpu_type": {
          "$ref": "#/definitions/elf.cpu_type"
        },
        "creation_date": {
          "$ref": "#/definitions/elf.creation_date"
        },
        "exports": {
          "$ref": "#/definitions/elf.exports"
        },
        "header.abi_version": {
          "$ref": "#/definitions/elf.header.abi_version"
        },
        "header.class": {
          "$ref": "#/definitions/elf.header.class"
        },
        "header.data": {
          "$ref": "#/definitions/elf.header.data"
        },
        "header.entrypoint": {
          "$ref": "#/definitions/elf.header.entrypoint"
        },
        "header.object_version": {
          "$ref": "#/definitions/elf.header.object_version"
        },
        "header.os_abi": {
          "$ref": "#/definitions/elf.header.os_abi"
        },
        "header.type": {
          "$ref": "#/definitions/elf.header.type"
        },
        "header.version": {
          "$ref": "#/definitions/elf.header.version"
        },
        "imports": {
          "$ref": "#/definitions/elf.imports"
        },
        "sections": {
          "$ref": "#/definitions/elf.sections"
        },
        "sections.chi2": {
          "$ref": "#/definitions/elf.sections.chi2"
        },
        "sections.entropy": {
          "$ref": "#/definitions/elf.sections.entropy"
        },
        "sections.flags": {
          "$ref": "#/definitions/elf.sections.flags"
        },
        "sections.name": {
          "$ref": "#/definitions/elf.sections.name"
        },
        "sections.physical_offset": {
          "$ref": "#/definitions/elf.sections.physical_offset"
        },
        "sections.physical_size": {
          "$ref": "#/definitions/elf.sections.physical_size"
        },
        "sections.type": {
          "$ref": "#/definitions/elf.sections.type"
        },
        "sections.virtual_address": {
          "$ref": "#/definitions/elf.sections.virtual_address"
        },
        "sections.virtual_size": {
          "$ref": "#/definitions/elf.sections.virtual_size"
        },
        "segments": {
          "$ref": "#/definitions/elf.segments"
        },
        "segments.sections": {
          "$ref": "#/definitions/elf.segments.sections"
        },
        "segments.type": {
          "$ref": "#/definitions/elf.segments.type"
        },
        "shared_libraries": {
          "$ref": "#/definitions/elf.shared_libraries"
        },
        "telfhash": {
          "$ref": "#/definitions/elf.telfhash"
        }
      }
    },
    "elf.architecture": {
      "$ref": "#/definitions/elf.architecture"
    },
    "elf.byte_order": {
      "$ref": "#/definitions/elf.byte_order"
    },
    "elf.cpu_type": {
      "$ref": "#/definitions/elf.cpu_type"
    },
    "elf.creation_date": {
      "$ref": "#/definitions/elf.creation_date"
    },
    "elf.exports": {
      "$ref": "#/definitions/elf.exports"
    },
    "elf.header.abi_version": {
      "$ref": "#/definitions/elf.header.abi_version"
    },
    "elf.header.class": {
      "$ref": "#/definitions/elf.header.class"
    },
    "elf.header.data": {
      "$ref": "#/definitions/elf.header.data"
    },
    "elf.header.entrypoint": {
      "$ref": "#/definitions/elf.header.entrypoint"
    },
    "elf.header.object_version": {
      "$ref": "#/definitions/elf.header.object_version"
    },
    "elf.header.os_abi": {
      "$ref": "#/definitions/elf.header.os_abi"
    },
    "elf.header.type": {
      "$ref": "#/definitions/elf.header.type"
    },
    "elf.header.version": {
      "$ref": "#/definitions/elf.header.version"
    },
    "elf.imports": {
      "$ref": "#/definitions/elf.imports"
    },
    "elf.sections": {
      "$ref": "#/definitions/elf.sections"
    },
    "elf.sections.chi2": {
      "$ref": "#/definitions/elf.sections.chi2"
    },
    "elf.sections.entropy": {
      "$ref": "#/definitions/elf.sections.entropy"
    },
    "elf.sections.flags": {
      "$ref": "#/definitions/elf.sections.flags"
    },
    "elf.sections.name": {
      "$ref": "#/definitions/elf.sections.name"
    },
    "elf.sections.physical_offset": {
      "$ref": "#/definitions/elf.sections.physical_offset"
    },
    "elf.sections.physical_size": {
      "$ref": "#/definitions/elf.sections.physical_size"
    },
    "elf.sections.type": {
      "$ref": "#/definitions/elf.sections.type"
    },
    "elf.sections.virtual_address": {
      "$ref": "#/definitions/elf.sections.virtual_address"
    },
    "elf.sections.virtual_size": {
      "$ref": "#/definitions/elf.sections.virtual_size"
    },
    "elf.segments": {
      "$ref": "#/definitions/elf.segments"
    },
    "elf.segments.sections": {
      "$ref": "#/definitions/elf.segments.sections"
    },
    "elf.segments.type": {
      "$ref": "#/definitions/elf.segments.type"
    },
    "elf.shared_libraries": {
      "$ref": "#/definitions/elf.shared_libraries"
    },
    "elf.telfhash": {
      "$ref": "#/definitions/elf.telfhash"
    },
    "error": {
      "description": "These fields can represent errors of any kind.\nUse them for errors that happen while fetching events or in cases where the event itself contains an error.",
      "type": [
        "object"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/error.code"
        },
        "id": {
          "$ref": "#/definitions/error.id"
        },
        "message": {
          "$ref": "#/definitions/error.message"
        },
        "stack_trace": {
          "$ref": "#/definitions/error.stack_trace"
        },
        "type": {
          "$ref": "#/definitions/error.type"
        }
      }
    },
    "error.code": {
      "$ref": "#/definitions/error.code"
    },
    "error.id": {
      "$ref": "#/definitions/error.id"
    },
    "error.message": {
      "$ref": "#/definitions/error.message"
    },
    "error.stack_trace": {
      "$ref": "#/definitions/error.stack_trace"
    },
    "error.type": {
      "$ref": "#/definitions/error.type"
    },
    "event": {
      "description": "The event fields are used for context information about the log or metric event itself.\nA log is defined as an event containing details of something that happened. Log events must include the time at which the thing happened. Examples of log events include a process starting on a host, a network packet being sent from a source to a destination, or a network connection between a client and a server being initiated or closed. A metric is defined as an event containing one or more numerical measurements and the time at which the measurement was taken. Examples of metric events include memory pressure measured on a host and device temperature. See the `event.kind` definition in this section for additional details about metric and state events.",
      "type": [
        "object"
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/event.action"
        },
        "agent_id_status": {
          "$ref": "#/definitions/event.agent_id_status"
        },
        "category": {
          "$ref": "#/definitions/event.category"
        },
        "code": {
          "$ref": "#/definitions/event.code"
        },
        "created": {
          "$ref": "#/definitions/event.created"
        },
        "dataset": {
          "$ref": "#/definitions/event.dataset"
        },
        "duration": {
          "$ref": "#/definitions/event.duration"
        },
        "end": {
          "$ref": "#/definitions/event.end"
        },
        "hash": {
          "$ref": "#/definitions/event.hash"
        },
        "id": {
          "$ref": "#/definitions/event.id"
        },
        "ingested": {
          "$ref": "#/definitions/event.ingested"
        },
        "kind": {
          "$ref": "#/definitions/event.kind"
        },
        "module": {
          "$ref": "#/definitions/event.module"
        },
        "original": {
          "$ref": "#/definitions/event.original"
        },
        "outcome": {
          "$ref": "#/definitions/event.outcome"
        },
        "provider": {
          "$ref": "#/definitions/event.provider"
        },
        "reason": {
          "$ref": "#/definitions/event.reason"
        },
        "reference": {
          "$ref": "#/definitions/event.reference"
        },
        "risk_score": {
          "$ref": "#/definitions/event.risk_score"
        },
        "risk_score_norm": {
          "$ref": "#/definitions/event.risk_score_norm"
        },
        "sequence": {
          "$ref": "#/definitions/event.sequence"
        },
        "severity": {
          "$ref": "#/definitions/event.severity"
        },
        "start": {
          "$ref": "#/definitions/event.start"
        },
        "timezone": {
          "$ref": "#/definitions/event.timezone"
        },
        "type": {
          "$ref": "#/definitions/event.type"
        },
        "url": {
          "$ref": "#/definitions/event.url"
        }
      }
    },
    "event.action": {
      "$ref": "#/definitions/event.action"
    },
    "event.agent_id_status": {
      "$ref": "#/definitions/event.agent_id_status"
    },
    "event.category": {
      "$ref": "#/definitions/event.category"
    },
    "event.code": {
      "$ref": "#/definitions/event.code"
    },
    "event.created": {
      "$ref": "#/definitions/event.created"
    },
    "event.dataset": {
      "$ref": "#/definitions/event.dataset"
    },
    "event.duration": {
      "$ref": "#/definitions/event.duration"
    },
    "event.end": {
      "$ref": "#/definitions/event.end"
    },
    "event.hash": {
      "$ref": "#/definitions/event.hash"
    },
    "event.id": {
      "$ref": "#/definitions/event.id"
    },
    "event.ingested": {
      "$ref": "#/definitions/event.ingested"
    },
    "event.kind": {
      "$ref": "#/definitions/event.kind"
    },
    "event.module": {
      "$ref": "#/definitions/event.module"
    },
    "event.original": {
      "$ref": "#/definitions/event.original"
    },
    "event.outcome": {
      "$ref": "#/definitions/event.outcome"
    },
    "event.provider": {
      "$ref": "#/definitions/event.provider"
    },
    "event.reason": {
      "$ref": "#/definitions/event.reason"
    },
    "event.reference": {
      "$ref": "#/definitions/event.reference"
    },
    "event.risk_score": {
      "$ref": "#/definitions/event.risk_score"
    },
    "event.risk_score_norm": {
      "$ref": "#/definitions/event.risk_score_norm"
    },
    "event.sequence": {
      "$ref": "#/definitions/event.sequence"
    },
    "event.severity": {
      "$ref": "#/definitions/event.severity"
    },
    "event.start": {
      "$ref": "#/definitions/event.start"
    },
    "event.timezone": {
      "$ref": "#/definitions/event.timezone"
    },
    "event.type": {
      "$ref": "#/definitions/event.type"
    },
    "event.url": {
      "$ref": "#/definitions/event.url"
    },
    "event_id": {
      "$ref": "#/definitions/event_id"
    },
    "faas": {
      "description": "The user fields describe information about the function as a service that is relevant to the event.",
      "type": [
        "object"
      ],
      "properties": {
        "coldstart": {
          "$ref": "#/definitions/faas.coldstart"
        },
        "execution": {
          "$ref": "#/definitions/faas.execution"
        },
        "trigger": {
          "$ref": "#/definitions/faas.trigger"
        },
        "trigger.request_id": {
          "$ref": "#/definitions/faas.trigger.request_id"
        },
        "trigger.type": {
          "$ref": "#/definitions/faas.trigger.type"
        }
      }
    },
    "faas.coldstart": {
      "$ref": "#/definitions/faas.coldstart"
    },
    "faas.execution": {
      "$ref": "#/definitions/faas.execution"
    },
    "faas.trigger": {
      "$ref": "#/definitions/faas.trigger"
    },
    "faas.trigger.request_id": {
      "$ref": "#/definitions/faas.trigger.request_id"
    },
    "faas.trigger.type": {
      "$ref": "#/definitions/faas.trigger.type"
    },
    "fields": {
      "$ref": "#/definitions/fields"
    },
    "file": {
      "description": "A file is defined as a set of information that has been created on, or has existed on a filesystem.\nFile objects can be associated with host events, network events, and/or file events (e.g., those produced by File Integrity Monitoring [FIM] products or services). File fields provide details about the affected file associated with the event or metric.",
      "type": [
        "object"
      ],
      "properties": {
        "accessed": {
          "$ref": "#/definitions/file.accessed"
        },
        "attributes": {
          "$ref": "#/definitions/file.attributes"
        },
        "code_signature.digest_algorithm": {
          "$ref": "#/definitions/file.code_signature.digest_algorithm"
        },
        "code_signature.exists": {
          "$ref": "#/definitions/file.code_signature.exists"
        },
        "code_signature.signing_id": {
          "$ref": "#/definitions/file.code_signature.signing_id"
        },
        "code_signature.status": {
          "$ref": "#/definitions/file.code_signature.status"
        },
        "code_signature.subject_name": {
          "$ref": "#/definitions/file.code_signature.subject_name"
        },
        "code_signature.team_id": {
          "$ref": "#/definitions/file.code_signature.team_id"
        },
        "code_signature.timestamp": {
          "$ref": "#/definitions/file.code_signature.timestamp"
        },
        "code_signature.trusted": {
          "$ref": "#/definitions/file.code_signature.trusted"
        },
        "code_signature.valid": {
          "$ref": "#/definitions/file.code_signature.valid"
        },
        "created": {
          "$ref": "#/definitions/file.created"
        },
        "ctime": {
          "$ref": "#/definitions/file.ctime"
        },
        "device": {
          "$ref": "#/definitions/file.device"
        },
        "directory": {
          "$ref": "#/definitions/file.directory"
        },
        "drive_letter": {
          "$ref": "#/definitions/file.drive_letter"
        },
        "elf.architecture": {
          "$ref": "#/definitions/file.elf.architecture"
        },
        "elf.byte_order": {
          "$ref": "#/definitions/file.elf.byte_order"
        },
        "elf.cpu_type": {
          "$ref": "#/definitions/file.elf.cpu_type"
        },
        "elf.creation_date": {
          "$ref": "#/definitions/file.elf.creation_date"
        },
        "elf.exports": {
          "$ref": "#/definitions/file.elf.exports"
        },
        "elf.header.abi_version": {
          "$ref": "#/definitions/file.elf.header.abi_version"
        },
        "elf.header.class": {
          "$ref": "#/definitions/file.elf.header.class"
        },
        "elf.header.data": {
          "$ref": "#/definitions/file.elf.header.data"
        },
        "elf.header.entrypoint": {
          "$ref": "#/definitions/file.elf.header.entrypoint"
        },
        "elf.header.object_version": {
          "$ref": "#/definitions/file.elf.header.object_version"
        },
        "elf.header.os_abi": {
          "$ref": "#/definitions/file.elf.header.os_abi"
        },
        "elf.header.type": {
          "$ref": "#/definitions/file.elf.header.type"
        },
        "elf.header.version": {
          "$ref": "#/definitions/file.elf.header.version"
        },
        "elf.imports": {
          "$ref": "#/definitions/file.elf.imports"
        },
        "elf.sections": {
          "$ref": "#/definitions/file.elf.sections"
        },
        "elf.sections.chi2": {
          "$ref": "#/definitions/file.elf.sections.chi2"
        },
        "elf.sections.entropy": {
          "$ref": "#/definitions/file.elf.sections.entropy"
        },
        "elf.sections.flags": {
          "$ref": "#/definitions/file.elf.sections.flags"
        },
        "elf.sections.name": {
          "$ref": "#/definitions/file.elf.sections.name"
        },
        "elf.sections.physical_offset": {
          "$ref": "#/definitions/file.elf.sections.physical_offset"
        },
        "elf.sections.physical_size": {
          "$ref": "#/definitions/file.elf.sections.physical_size"
        },
        "elf.sections.type": {
          "$ref": "#/definitions/file.elf.sections.type"
        },
        "elf.sections.virtual_address": {
          "$ref": "#/definitions/file.elf.sections.virtual_address"
        },
        "elf.sections.virtual_size": {
          "$ref": "#/definitions/file.elf.sections.virtual_size"
        },
        "elf.segments": {
          "$ref": "#/definitions/file.elf.segments"
        },
        "elf.segments.sections": {
          "$ref": "#/definitions/file.elf.segments.sections"
        },
        "elf.segments.type": {
          "$ref": "#/definitions/file.elf.segments.type"
        },
        "elf.shared_libraries": {
          "$ref": "#/definitions/file.elf.shared_libraries"
        },
        "elf.telfhash": {
          "$ref": "#/definitions/file.elf.telfhash"
        },
        "extension": {
          "$ref": "#/definitions/file.extension"
        },
        "fork_name": {
          "$ref": "#/definitions/file.fork_name"
        },
        "gid": {
          "$ref": "#/definitions/file.gid"
        },
        "group": {
          "$ref": "#/definitions/file.group"
        },
        "hash.md5": {
          "$ref": "#/definitions/file.hash.md5"
        },
        "hash.sha1": {
          "$ref": "#/definitions/file.hash.sha1"
        },
        "hash.sha256": {
          "$ref": "#/definitions/file.hash.sha256"
        },
        "hash.sha512": {
          "$ref": "#/definitions/file.hash.sha512"
        },
        "hash.ssdeep": {
          "$ref": "#/definitions/file.hash.ssdeep"
        },
        "inode": {
          "$ref": "#/definitions/file.inode"
        },
        "mime_type": {
          "$ref": "#/definitions/file.mime_type"
        },
        "mode": {
          "$ref": "#/definitions/file.mode"
        },
        "mtime": {
          "$ref": "#/definitions/file.mtime"
        },
        "name": {
          "$ref": "#/definitions/file.name"
        },
        "owner": {
          "$ref": "#/definitions/file.owner"
        },
        "path": {
          "$ref": "#/definitions/file.path"
        },
        "pe.architecture": {
          "$ref": "#/definitions/file.pe.architecture"
        },
        "pe.company": {
          "$ref": "#/definitions/file.pe.company"
        },
        "pe.description": {
          "$ref": "#/definitions/file.pe.description"
        },
        "pe.file_version": {
          "$ref": "#/definitions/file.pe.file_version"
        },
        "pe.imphash": {
          "$ref": "#/definitions/file.pe.imphash"
        },
        "pe.original_file_name": {
          "$ref": "#/definitions/file.pe.original_file_name"
        },
        "pe.product": {
          "$ref": "#/definitions/file.pe.product"
        },
        "size": {
          "$ref": "#/definitions/file.size"
        },
        "target_path": {
          "$ref": "#/definitions/file.target_path"
        },
        "type": {
          "$ref": "#/definitions/file.type"
        },
        "uid": {
          "$ref": "#/definitions/file.uid"
        },
        "x509.alternative_names": {
          "$ref": "#/definitions/file.x509.alternative_names"
        },
        "x509.issuer.common_name": {
          "$ref": "#/definitions/file.x509.issuer.common_name"
        },
        "x509.issuer.country": {
          "$ref": "#/definitions/file.x509.issuer.country"
        },
        "x509.issuer.distinguished_name": {
          "$ref": "#/definitions/file.x509.issuer.distinguished_name"
        },
        "x509.issuer.locality": {
          "$ref": "#/definitions/file.x509.issuer.locality"
        },
        "x509.issuer.organization": {
          "$ref": "#/definitions/file.x509.issuer.organization"
        },
        "x509.issuer.organizational_unit": {
          "$ref": "#/definitions/file.x509.issuer.organizational_unit"
        },
        "x509.issuer.state_or_province": {
          "$ref": "#/definitions/file.x509.issuer.state_or_province"
        },
        "x509.not_after": {
          "$ref": "#/definitions/file.x509.not_after"
        },
        "x509.not_before": {
          "$ref": "#/definitions/file.x509.not_before"
        },
        "x509.public_key_algorithm": {
          "$ref": "#/definitions/file.x509.public_key_algorithm"
        },
        "x509.public_key_curve": {
          "$ref": "#/definitions/file.x509.public_key_curve"
        },
        "x509.public_key_exponent": {
          "$ref": "#/definitions/file.x509.public_key_exponent"
        },
        "x509.public_key_size": {
          "$ref": "#/definitions/file.x509.public_key_size"
        },
        "x509.serial_number": {
          "$ref": "#/definitions/file.x509.serial_number"
        },
        "x509.signature_algorithm": {
          "$ref": "#/definitions/file.x509.signature_algorithm"
        },
        "x509.subject.common_name": {
          "$ref": "#/definitions/file.x509.subject.common_name"
        },
        "x509.subject.country": {
          "$ref": "#/definitions/file.x509.subject.country"
        },
        "x509.subject.distinguished_name": {
          "$ref": "#/definitions/file.x509.subject.distinguished_name"
        },
        "x509.subject.locality": {
          "$ref": "#/definitions/file.x509.subject.locality"
        },
        "x509.subject.organization": {
          "$ref": "#/definitions/file.x509.subject.organization"
        },
        "x509.subject.organizational_unit": {
          "$ref": "#/definitions/file.x509.subject.organizational_unit"
        },
        "x509.subject.state_or_province": {
          "$ref": "#/definitions/file.x509.subject.state_or_province"
        },
        "x509.version_number": {
          "$ref": "#/definitions/file.x509.version_number"
        }
      }
    },
    "file.accessed": {
      "$ref": "#/definitions/file.accessed"
    },
    "file.attributes": {
      "$ref": "#/definitions/file.attributes"
    },
    "file.code_signature.digest_algorithm": {
      "$ref": "#/definitions/file.code_signature.digest_algorithm"
    },
    "file.code_signature.exists": {
      "$ref": "#/definitions/file.code_signature.exists"
    },
    "file.code_signature.signing_id": {
      "$ref": "#/definitions/file.code_signature.signing_id"
    },
    "file.code_signature.status": {
      "$ref": "#/definitions/file.code_signature.status"
    },
    "file.code_signature.subject_name": {
      "$ref": "#/definitions/file.code_signature.subject_name"
    },
    "file.code_signature.team_id": {
      "$ref": "#/definitions/file.code_signature.team_id"
    },
    "file.code_signature.timestamp": {
      "$ref": "#/definitions/file.code_signature.timestamp"
    },
    "file.code_signature.trusted": {
      "$ref": "#/definitions/file.code_signature.trusted"
    },
    "file.code_signature.valid": {
      "$ref": "#/definitions/file.code_signature.valid"
    },
    "file.created": {
      "$ref": "#/definitions/file.created"
    },
    "file.ctime": {
      "$ref": "#/definitions/file.ctime"
    },
    "file.device": {
      "$ref": "#/definitions/file.device"
    },
    "file.directory": {
      "$ref": "#/definitions/file.directory"
    },
    "file.drive_letter": {
      "$ref": "#/definitions/file.drive_letter"
    },
    "file.elf.architecture": {
      "$ref": "#/definitions/file.elf.architecture"
    },
    "file.elf.byte_order": {
      "$ref": "#/definitions/file.elf.byte_order"
    },
    "file.elf.cpu_type": {
      "$ref": "#/definitions/file.elf.cpu_type"
    },
    "file.elf.creation_date": {
      "$ref": "#/definitions/file.elf.creation_date"
    },
    "file.elf.exports": {
      "$ref": "#/definitions/file.elf.exports"
    },
    "file.elf.header.abi_version": {
      "$ref": "#/definitions/file.elf.header.abi_version"
    },
    "file.elf.header.class": {
      "$ref": "#/definitions/file.elf.header.class"
    },
    "file.elf.header.data": {
      "$ref": "#/definitions/file.elf.header.data"
    },
    "file.elf.header.entrypoint": {
      "$ref": "#/definitions/file.elf.header.entrypoint"
    },
    "file.elf.header.object_version": {
      "$ref": "#/definitions/file.elf.header.object_version"
    },
    "file.elf.header.os_abi": {
      "$ref": "#/definitions/file.elf.header.os_abi"
    },
    "file.elf.header.type": {
      "$ref": "#/definitions/file.elf.header.type"
    },
    "file.elf.header.version": {
      "$ref": "#/definitions/file.elf.header.version"
    },
    "file.elf.imports": {
      "$ref": "#/definitions/file.elf.imports"
    },
    "file.elf.sections": {
      "$ref": "#/definitions/file.elf.sections"
    },
    "file.elf.sections.chi2": {
      "$ref": "#/definitions/file.elf.sections.chi2"
    },
    "file.elf.sections.entropy": {
      "$ref": "#/definitions/file.elf.sections.entropy"
    },
    "file.elf.sections.flags": {
      "$ref": "#/definitions/file.elf.sections.flags"
    },
    "file.elf.sections.name": {
      "$ref": "#/definitions/file.elf.sections.name"
    },
    "file.elf.sections.physical_offset": {
      "$ref": "#/definitions/file.elf.sections.physical_offset"
    },
    "file.elf.sections.physical_size": {
      "$ref": "#/definitions/file.elf.sections.physical_size"
    },
    "file.elf.sections.type": {
      "$ref": "#/definitions/file.elf.sections.type"
    },
    "file.elf.sections.virtual_address": {
      "$ref": "#/definitions/file.elf.sections.virtual_address"
    },
    "file.elf.sections.virtual_size": {
      "$ref": "#/definitions/file.elf.sections.virtual_size"
    },
    "file.elf.segments": {
      "$ref": "#/definitions/file.elf.segments"
    },
    "file.elf.segments.sections": {
      "$ref": "#/definitions/file.elf.segments.sections"
    },
    "file.elf.segments.type": {
      "$ref": "#/definitions/file.elf.segments.type"
    },
    "file.elf.shared_libraries": {
      "$ref": "#/definitions/file.elf.shared_libraries"
    },
    "file.elf.telfhash": {
      "$ref": "#/definitions/file.elf.telfhash"
    },
    "file.extension": {
      "$ref": "#/definitions/file.extension"
    },
    "file.fork_name": {
      "$ref": "#/definitions/file.fork_name"
    },
    "file.gid": {
      "$ref": "#/definitions/file.gid"
    },
    "file.group": {
      "$ref": "#/definitions/file.group"
    },
    "file.hash.md5": {
      "$ref": "#/definitions/file.hash.md5"
    },
    "file.hash.sha1": {
      "$ref": "#/definitions/file.hash.sha1"
    },
    "file.hash.sha256": {
      "$ref": "#/definitions/file.hash.sha256"
    },
    "file.hash.sha512": {
      "$ref": "#/definitions/file.hash.sha512"
    },
    "file.hash.ssdeep": {
      "$ref": "#/definitions/file.hash.ssdeep"
    },
    "file.inode": {
      "$ref": "#/definitions/file.inode"
    },
    "file.mime_type": {
      "$ref": "#/definitions/file.mime_type"
    },
    "file.mode": {
      "$ref": "#/definitions/file.mode"
    },
    "file.mtime": {
      "$ref": "#/definitions/file.mtime"
    },
    "file.name": {
      "$ref": "#/definitions/file.name"
    },
    "file.owner": {
      "$ref": "#/definitions/file.owner"
    },
    "file.path": {
      "$ref": "#/definitions/file.path"
    },
    "file.pe.architecture": {
      "$ref": "#/definitions/file.pe.architecture"
    },
    "file.pe.company": {
      "$ref": "#/definitions/file.pe.company"
    },
    "file.pe.description": {
      "$ref": "#/definitions/file.pe.description"
    },
    "file.pe.file_version": {
      "$ref": "#/definitions/file.pe.file_version"
    },
    "file.pe.imphash": {
      "$ref": "#/definitions/file.pe.imphash"
    },
    "file.pe.original_file_name": {
      "$ref": "#/definitions/file.pe.original_file_name"
    },
    "file.pe.product": {
      "$ref": "#/definitions/file.pe.product"
    },
    "file.size": {
      "$ref": "#/definitions/file.size"
    },
    "file.target_path": {
      "$ref": "#/definitions/file.target_path"
    },
    "file.type": {
      "$ref": "#/definitions/file.type"
    },
    "file.uid": {
      "$ref": "#/definitions/file.uid"
    },
    "file.x509.alternative_names": {
      "$ref": "#/definitions/file.x509.alternative_names"
    },
    "file.x509.issuer.common_name": {
      "$ref": "#/definitions/file.x509.issuer.common_name"
    },
    "file.x509.issuer.country": {
      "$ref": "#/definitions/file.x509.issuer.country"
    },
    "file.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/file.x509.issuer.distinguished_name"
    },
    "file.x509.issuer.locality": {
      "$ref": "#/definitions/file.x509.issuer.locality"
    },
    "file.x509.issuer.organization": {
      "$ref": "#/definitions/file.x509.issuer.organization"
    },
    "file.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/file.x509.issuer.organizational_unit"
    },
    "file.x509.issuer.state_or_province": {
      "$ref": "#/definitions/file.x509.issuer.state_or_province"
    },
    "file.x509.not_after": {
      "$ref": "#/definitions/file.x509.not_after"
    },
    "file.x509.not_before": {
      "$ref": "#/definitions/file.x509.not_before"
    },
    "file.x509.public_key_algorithm": {
      "$ref": "#/definitions/file.x509.public_key_algorithm"
    },
    "file.x509.public_key_curve": {
      "$ref": "#/definitions/file.x509.public_key_curve"
    },
    "file.x509.public_key_exponent": {
      "$ref": "#/definitions/file.x509.public_key_exponent"
    },
    "file.x509.public_key_size": {
      "$ref": "#/definitions/file.x509.public_key_size"
    },
    "file.x509.serial_number": {
      "$ref": "#/definitions/file.x509.serial_number"
    },
    "file.x509.signature_algorithm": {
      "$ref": "#/definitions/file.x509.signature_algorithm"
    },
    "file.x509.subject.common_name": {
      "$ref": "#/definitions/file.x509.subject.common_name"
    },
    "file.x509.subject.country": {
      "$ref": "#/definitions/file.x509.subject.country"
    },
    "file.x509.subject.distinguished_name": {
      "$ref": "#/definitions/file.x509.subject.distinguished_name"
    },
    "file.x509.subject.locality": {
      "$ref": "#/definitions/file.x509.subject.locality"
    },
    "file.x509.subject.organization": {
      "$ref": "#/definitions/file.x509.subject.organization"
    },
    "file.x509.subject.organizational_unit": {
      "$ref": "#/definitions/file.x509.subject.organizational_unit"
    },
    "file.x509.subject.state_or_province": {
      "$ref": "#/definitions/file.x509.subject.state_or_province"
    },
    "file.x509.version_number": {
      "$ref": "#/definitions/file.x509.version_number"
    },
    "geo": {
      "description": "Geo fields can carry data about a specific location related to an event.\nThis geolocation information can be derived from techniques such as Geo IP, or be user-supplied.",
      "type": [
        "object"
      ],
      "properties": {
        "city_name": {
          "$ref": "#/definitions/geo.city_name"
        },
        "continent_code": {
          "$ref": "#/definitions/geo.continent_code"
        },
        "continent_name": {
          "$ref": "#/definitions/geo.continent_name"
        },
        "country_iso_code": {
          "$ref": "#/definitions/geo.country_iso_code"
        },
        "country_name": {
          "$ref": "#/definitions/geo.country_name"
        },
        "location": {
          "$ref": "#/definitions/geo.location"
        },
        "name": {
          "$ref": "#/definitions/geo.name"
        },
        "postal_code": {
          "$ref": "#/definitions/geo.postal_code"
        },
        "region_iso_code": {
          "$ref": "#/definitions/geo.region_iso_code"
        },
        "region_name": {
          "$ref": "#/definitions/geo.region_name"
        },
        "timezone": {
          "$ref": "#/definitions/geo.timezone"
        }
      }
    },
    "geo.city_name": {
      "$ref": "#/definitions/geo.city_name"
    },
    "geo.continent_code": {
      "$ref": "#/definitions/geo.continent_code"
    },
    "geo.continent_name": {
      "$ref": "#/definitions/geo.continent_name"
    },
    "geo.country_iso_code": {
      "$ref": "#/definitions/geo.country_iso_code"
    },
    "geo.country_name": {
      "$ref": "#/definitions/geo.country_name"
    },
    "geo.location": {
      "$ref": "#/definitions/geo.location"
    },
    "geo.name": {
      "$ref": "#/definitions/geo.name"
    },
    "geo.postal_code": {
      "$ref": "#/definitions/geo.postal_code"
    },
    "geo.region_iso_code": {
      "$ref": "#/definitions/geo.region_iso_code"
    },
    "geo.region_name": {
      "$ref": "#/definitions/geo.region_name"
    },
    "geo.timezone": {
      "$ref": "#/definitions/geo.timezone"
    },
    "group": {
      "description": "The group fields are meant to represent groups that are relevant to the event.",
      "type": [
        "object"
      ],
      "properties": {
        "domain": {
          "$ref": "#/definitions/group.domain"
        },
        "id": {
          "$ref": "#/definitions/group.id"
        },
        "name": {
          "$ref": "#/definitions/group.name"
        }
      }
    },
    "group.domain": {
      "$ref": "#/definitions/group.domain"
    },
    "group.id": {
      "$ref": "#/definitions/group.id"
    },
    "group.name": {
      "$ref": "#/definitions/group.name"
    },
    "hash": {
      "description": "The hash fields represent different bitwise hash algorithms and their values.\nField names for common hashes (e.g. MD5, SHA1) are predefined. Add fields for other hashes by lowercasing the hash algorithm name and using underscore separators as appropriate (snake case, e.g. sha3_512).\nNote that this fieldset is used for common hashes that may be computed over a range of generic bytes. Entity-specific hashes such as ja3 or imphash are placed in the fieldsets to which they relate (tls and pe, respectively).",
      "type": [
        "object"
      ],
      "properties": {
        "md5": {
          "$ref": "#/definitions/hash.md5"
        },
        "sha1": {
          "$ref": "#/definitions/hash.sha1"
        },
        "sha256": {
          "$ref": "#/definitions/hash.sha256"
        },
        "sha512": {
          "$ref": "#/definitions/hash.sha512"
        },
        "ssdeep": {
          "$ref": "#/definitions/hash.ssdeep"
        }
      }
    },
    "hash.md5": {
      "$ref": "#/definitions/hash.md5"
    },
    "hash.sha1": {
      "$ref": "#/definitions/hash.sha1"
    },
    "hash.sha256": {
      "$ref": "#/definitions/hash.sha256"
    },
    "hash.sha512": {
      "$ref": "#/definitions/hash.sha512"
    },
    "hash.ssdeep": {
      "$ref": "#/definitions/hash.ssdeep"
    },
    "host": {
      "type": [
        "object"
      ],
      "properties": {
        "containerized": {
          "$ref": "#/definitions/host.containerized"
        },
        "os.build": {
          "$ref": "#/definitions/host.os.build"
        },
        "os.codename": {
          "$ref": "#/definitions/host.os.codename"
        }
      }
    },
    "host.architecture": {
      "$ref": "#/definitions/host.architecture"
    },
    "host.containerized": {
      "$ref": "#/definitions/host.containerized"
    },
    "host.cpu.usage": {
      "$ref": "#/definitions/host.cpu.usage"
    },
    "host.disk.read.bytes": {
      "$ref": "#/definitions/host.disk.read.bytes"
    },
    "host.disk.write.bytes": {
      "$ref": "#/definitions/host.disk.write.bytes"
    },
    "host.domain": {
      "$ref": "#/definitions/host.domain"
    },
    "host.geo.city_name": {
      "$ref": "#/definitions/host.geo.city_name"
    },
    "host.geo.continent_code": {
      "$ref": "#/definitions/host.geo.continent_code"
    },
    "host.geo.continent_name": {
      "$ref": "#/definitions/host.geo.continent_name"
    },
    "host.geo.country_iso_code": {
      "$ref": "#/definitions/host.geo.country_iso_code"
    },
    "host.geo.country_name": {
      "$ref": "#/definitions/host.geo.country_name"
    },
    "host.geo.location": {
      "$ref": "#/definitions/host.geo.location"
    },
    "host.geo.name": {
      "$ref": "#/definitions/host.geo.name"
    },
    "host.geo.postal_code": {
      "$ref": "#/definitions/host.geo.postal_code"
    },
    "host.geo.region_iso_code": {
      "$ref": "#/definitions/host.geo.region_iso_code"
    },
    "host.geo.region_name": {
      "$ref": "#/definitions/host.geo.region_name"
    },
    "host.geo.timezone": {
      "$ref": "#/definitions/host.geo.timezone"
    },
    "host.hostname": {
      "$ref": "#/definitions/host.hostname"
    },
    "host.id": {
      "$ref": "#/definitions/host.id"
    },
    "host.ip": {
      "$ref": "#/definitions/host.ip"
    },
    "host.mac": {
      "$ref": "#/definitions/host.mac"
    },
    "host.name": {
      "$ref": "#/definitions/host.name"
    },
    "host.network.egress.bytes": {
      "$ref": "#/definitions/host.network.egress.bytes"
    },
    "host.network.egress.packets": {
      "$ref": "#/definitions/host.network.egress.packets"
    },
    "host.network.ingress.bytes": {
      "$ref": "#/definitions/host.network.ingress.bytes"
    },
    "host.network.ingress.packets": {
      "$ref": "#/definitions/host.network.ingress.packets"
    },
    "host.os.build": {
      "$ref": "#/definitions/host.os.build"
    },
    "host.os.codename": {
      "$ref": "#/definitions/host.os.codename"
    },
    "host.os.family": {
      "$ref": "#/definitions/host.os.family"
    },
    "host.os.full": {
      "$ref": "#/definitions/host.os.full"
    },
    "host.os.kernel": {
      "$ref": "#/definitions/host.os.kernel"
    },
    "host.os.name": {
      "$ref": "#/definitions/host.os.name"
    },
    "host.os.platform": {
      "$ref": "#/definitions/host.os.platform"
    },
    "host.os.type": {
      "$ref": "#/definitions/host.os.type"
    },
    "host.os.version": {
      "$ref": "#/definitions/host.os.version"
    },
    "host.type": {
      "$ref": "#/definitions/host.type"
    },
    "host.uptime": {
      "$ref": "#/definitions/host.uptime"
    },
    "http": {
      "description": "Fields related to HTTP activity. Use the `url` field set to store the url of the request.",
      "type": [
        "object"
      ],
      "properties": {
        "request.body.bytes": {
          "$ref": "#/definitions/http.request.body.bytes"
        },
        "request.body.content": {
          "$ref": "#/definitions/http.request.body.content"
        },
        "request.bytes": {
          "$ref": "#/definitions/http.request.bytes"
        },
        "request.id": {
          "$ref": "#/definitions/http.request.id"
        },
        "request.method": {
          "$ref": "#/definitions/http.request.method"
        },
        "request.mime_type": {
          "$ref": "#/definitions/http.request.mime_type"
        },
        "request.referrer": {
          "$ref": "#/definitions/http.request.referrer"
        },
        "response.body.bytes": {
          "$ref": "#/definitions/http.response.body.bytes"
        },
        "response.body.content": {
          "$ref": "#/definitions/http.response.body.content"
        },
        "response.bytes": {
          "$ref": "#/definitions/http.response.bytes"
        },
        "response.mime_type": {
          "$ref": "#/definitions/http.response.mime_type"
        },
        "response.status_code": {
          "$ref": "#/definitions/http.response.status_code"
        },
        "version": {
          "$ref": "#/definitions/http.version"
        }
      }
    },
    "http.request.body.bytes": {
      "$ref": "#/definitions/http.request.body.bytes"
    },
    "http.request.body.content": {
      "$ref": "#/definitions/http.request.body.content"
    },
    "http.request.bytes": {
      "$ref": "#/definitions/http.request.bytes"
    },
    "http.request.id": {
      "$ref": "#/definitions/http.request.id"
    },
    "http.request.method": {
      "$ref": "#/definitions/http.request.method"
    },
    "http.request.mime_type": {
      "$ref": "#/definitions/http.request.mime_type"
    },
    "http.request.referrer": {
      "$ref": "#/definitions/http.request.referrer"
    },
    "http.response.body.bytes": {
      "$ref": "#/definitions/http.response.body.bytes"
    },
    "http.response.body.content": {
      "$ref": "#/definitions/http.response.body.content"
    },
    "http.response.bytes": {
      "$ref": "#/definitions/http.response.bytes"
    },
    "http.response.mime_type": {
      "$ref": "#/definitions/http.response.mime_type"
    },
    "http.response.status_code": {
      "$ref": "#/definitions/http.response.status_code"
    },
    "http.version": {
      "$ref": "#/definitions/http.version"
    },
    "interface": {
      "description": "The interface fields are used to record ingress and egress interface information when reported by an observer (e.g. firewall, router, load balancer) in the context of the observer handling a network connection.  In the case of a single observer interface (e.g. network sensor on a span port) only the observer.ingress information should be populated.",
      "type": [
        "object"
      ],
      "properties": {
        "alias": {
          "$ref": "#/definitions/interface.alias"
        },
        "id": {
          "$ref": "#/definitions/interface.id"
        },
        "name": {
          "$ref": "#/definitions/interface.name"
        }
      }
    },
    "interface.alias": {
      "$ref": "#/definitions/interface.alias"
    },
    "interface.id": {
      "$ref": "#/definitions/interface.id"
    },
    "interface.name": {
      "$ref": "#/definitions/interface.name"
    },
    "jolokia.agent.id": {
      "$ref": "#/definitions/jolokia.agent.id"
    },
    "jolokia.agent.version": {
      "$ref": "#/definitions/jolokia.agent.version"
    },
    "jolokia.secured": {
      "$ref": "#/definitions/jolokia.secured"
    },
    "jolokia.server.product": {
      "$ref": "#/definitions/jolokia.server.product"
    },
    "jolokia.server.vendor": {
      "$ref": "#/definitions/jolokia.server.vendor"
    },
    "jolokia.server.version": {
      "$ref": "#/definitions/jolokia.server.version"
    },
    "jolokia.url": {
      "$ref": "#/definitions/jolokia.url"
    },
    "keywords": {
      "$ref": "#/definitions/keywords"
    },
    "kubernetes": {
      "type": [
        "object"
      ],
      "properties": {
        "annotations.*": {
          "$ref": "#/definitions/kubernetes.annotations.*"
        },
        "container.name": {
          "$ref": "#/definitions/kubernetes.container.name"
        },
        "deployment.name": {
          "$ref": "#/definitions/kubernetes.deployment.name"
        },
        "labels.*": {
          "$ref": "#/definitions/kubernetes.labels.*"
        },
        "namespace": {
          "$ref": "#/definitions/kubernetes.namespace"
        },
        "node.hostname": {
          "$ref": "#/definitions/kubernetes.node.hostname"
        },
        "node.name": {
          "$ref": "#/definitions/kubernetes.node.name"
        },
        "pod.ip": {
          "$ref": "#/definitions/kubernetes.pod.ip"
        },
        "pod.name": {
          "$ref": "#/definitions/kubernetes.pod.name"
        },
        "pod.uid": {
          "$ref": "#/definitions/kubernetes.pod.uid"
        },
        "replicaset.name": {
          "$ref": "#/definitions/kubernetes.replicaset.name"
        },
        "selectors.*": {
          "$ref": "#/definitions/kubernetes.selectors.*"
        },
        "statefulset.name": {
          "$ref": "#/definitions/kubernetes.statefulset.name"
        }
      }
    },
    "kubernetes.annotations.*": {
      "$ref": "#/definitions/kubernetes.annotations.*"
    },
    "kubernetes.container.name": {
      "$ref": "#/definitions/kubernetes.container.name"
    },
    "kubernetes.deployment.name": {
      "$ref": "#/definitions/kubernetes.deployment.name"
    },
    "kubernetes.labels.*": {
      "$ref": "#/definitions/kubernetes.labels.*"
    },
    "kubernetes.namespace": {
      "$ref": "#/definitions/kubernetes.namespace"
    },
    "kubernetes.node.hostname": {
      "$ref": "#/definitions/kubernetes.node.hostname"
    },
    "kubernetes.node.name": {
      "$ref": "#/definitions/kubernetes.node.name"
    },
    "kubernetes.pod.ip": {
      "$ref": "#/definitions/kubernetes.pod.ip"
    },
    "kubernetes.pod.name": {
      "$ref": "#/definitions/kubernetes.pod.name"
    },
    "kubernetes.pod.uid": {
      "$ref": "#/definitions/kubernetes.pod.uid"
    },
    "kubernetes.replicaset.name": {
      "$ref": "#/definitions/kubernetes.replicaset.name"
    },
    "kubernetes.selectors.*": {
      "$ref": "#/definitions/kubernetes.selectors.*"
    },
    "kubernetes.statefulset.name": {
      "$ref": "#/definitions/kubernetes.statefulset.name"
    },
    "labels": {
      "$ref": "#/definitions/labels"
    },
    "log": {
      "description": "Details about the event's logging mechanism or logging transport.\nThe log.* fields are typically populated with details about the logging mechanism used to create and/or transport the event. For example, syslog details belong under `log.syslog.*`.\nThe details specific to your event source are typically not logged under `log.*`, but rather in `event.*` or in other ECS fields.",
      "type": [
        "object"
      ],
      "properties": {
        "file.path": {
          "$ref": "#/definitions/log.file.path"
        },
        "level": {
          "$ref": "#/definitions/log.level"
        },
        "logger": {
          "$ref": "#/definitions/log.logger"
        },
        "origin.file.line": {
          "$ref": "#/definitions/log.origin.file.line"
        },
        "origin.file.name": {
          "$ref": "#/definitions/log.origin.file.name"
        },
        "origin.function": {
          "$ref": "#/definitions/log.origin.function"
        },
        "syslog": {
          "$ref": "#/definitions/log.syslog"
        },
        "syslog.facility.code": {
          "$ref": "#/definitions/log.syslog.facility.code"
        },
        "syslog.facility.name": {
          "$ref": "#/definitions/log.syslog.facility.name"
        },
        "syslog.priority": {
          "$ref": "#/definitions/log.syslog.priority"
        },
        "syslog.severity.code": {
          "$ref": "#/definitions/log.syslog.severity.code"
        },
        "syslog.severity.name": {
          "$ref": "#/definitions/log.syslog.severity.name"
        }
      }
    },
    "log.file.path": {
      "$ref": "#/definitions/log.file.path"
    },
    "log.level": {
      "$ref": "#/definitions/log.level"
    },
    "log.logger": {
      "$ref": "#/definitions/log.logger"
    },
    "log.origin.file.line": {
      "$ref": "#/definitions/log.origin.file.line"
    },
    "log.origin.file.name": {
      "$ref": "#/definitions/log.origin.file.name"
    },
    "log.origin.function": {
      "$ref": "#/definitions/log.origin.function"
    },
    "log.syslog": {
      "$ref": "#/definitions/log.syslog"
    },
    "log.syslog.facility.code": {
      "$ref": "#/definitions/log.syslog.facility.code"
    },
    "log.syslog.facility.name": {
      "$ref": "#/definitions/log.syslog.facility.name"
    },
    "log.syslog.priority": {
      "$ref": "#/definitions/log.syslog.priority"
    },
    "log.syslog.severity.code": {
      "$ref": "#/definitions/log.syslog.severity.code"
    },
    "log.syslog.severity.name": {
      "$ref": "#/definitions/log.syslog.severity.name"
    },
    "log_name": {
      "$ref": "#/definitions/log_name"
    },
    "message": {
      "$ref": "#/definitions/message"
    },
    "message_error": {
      "$ref": "#/definitions/message_error"
    },
    "meta.cloud.availability_zone": {
      "$ref": "#/definitions/meta.cloud.availability_zone"
    },
    "meta.cloud.instance_id": {
      "$ref": "#/definitions/meta.cloud.instance_id"
    },
    "meta.cloud.instance_name": {
      "$ref": "#/definitions/meta.cloud.instance_name"
    },
    "meta.cloud.machine_type": {
      "$ref": "#/definitions/meta.cloud.machine_type"
    },
    "meta.cloud.project_id": {
      "$ref": "#/definitions/meta.cloud.project_id"
    },
    "meta.cloud.provider": {
      "$ref": "#/definitions/meta.cloud.provider"
    },
    "meta.cloud.region": {
      "$ref": "#/definitions/meta.cloud.region"
    },
    "network": {
      "description": "The network is defined as the communication path over which a host or network event happens.\nThe network.* fields should be populated with details about the network activity associated with an event.",
      "type": [
        "object"
      ],
      "properties": {
        "application": {
          "$ref": "#/definitions/network.application"
        },
        "bytes": {
          "$ref": "#/definitions/network.bytes"
        },
        "community_id": {
          "$ref": "#/definitions/network.community_id"
        },
        "direction": {
          "$ref": "#/definitions/network.direction"
        },
        "forwarded_ip": {
          "$ref": "#/definitions/network.forwarded_ip"
        },
        "iana_number": {
          "$ref": "#/definitions/network.iana_number"
        },
        "inner": {
          "$ref": "#/definitions/network.inner"
        },
        "inner.vlan.id": {
          "$ref": "#/definitions/network.inner.vlan.id"
        },
        "inner.vlan.name": {
          "$ref": "#/definitions/network.inner.vlan.name"
        },
        "name": {
          "$ref": "#/definitions/network.name"
        },
        "packets": {
          "$ref": "#/definitions/network.packets"
        },
        "protocol": {
          "$ref": "#/definitions/network.protocol"
        },
        "transport": {
          "$ref": "#/definitions/network.transport"
        },
        "type": {
          "$ref": "#/definitions/network.type"
        },
        "vlan.id": {
          "$ref": "#/definitions/network.vlan.id"
        },
        "vlan.name": {
          "$ref": "#/definitions/network.vlan.name"
        }
      }
    },
    "network.application": {
      "$ref": "#/definitions/network.application"
    },
    "network.bytes": {
      "$ref": "#/definitions/network.bytes"
    },
    "network.community_id": {
      "$ref": "#/definitions/network.community_id"
    },
    "network.direction": {
      "$ref": "#/definitions/network.direction"
    },
    "network.forwarded_ip": {
      "$ref": "#/definitions/network.forwarded_ip"
    },
    "network.iana_number": {
      "$ref": "#/definitions/network.iana_number"
    },
    "network.inner": {
      "$ref": "#/definitions/network.inner"
    },
    "network.inner.vlan.id": {
      "$ref": "#/definitions/network.inner.vlan.id"
    },
    "network.inner.vlan.name": {
      "$ref": "#/definitions/network.inner.vlan.name"
    },
    "network.name": {
      "$ref": "#/definitions/network.name"
    },
    "network.packets": {
      "$ref": "#/definitions/network.packets"
    },
    "network.protocol": {
      "$ref": "#/definitions/network.protocol"
    },
    "network.transport": {
      "$ref": "#/definitions/network.transport"
    },
    "network.type": {
      "$ref": "#/definitions/network.type"
    },
    "network.vlan.id": {
      "$ref": "#/definitions/network.vlan.id"
    },
    "network.vlan.name": {
      "$ref": "#/definitions/network.vlan.name"
    },
    "observer": {
      "description": "An observer is defined as a special network, security, or application device used to detect, observe, or create network, security, or application-related events and metrics.\nThis could be a custom hardware appliance or a server that has been configured to run special network, security, or application software. Examples include firewalls, web proxies, intrusion detection/prevention systems, network monitoring sensors, web application firewalls, data loss prevention systems, and APM servers. The observer.* fields shall be populated with details of the system, if any, that detects, observes and/or creates a network, security, or application event or metric. Message queues and ETL components used in processing events or metrics are not considered observers in ECS.",
      "type": [
        "object"
      ],
      "properties": {
        "egress": {
          "$ref": "#/definitions/observer.egress"
        },
        "egress.interface.alias": {
          "$ref": "#/definitions/observer.egress.interface.alias"
        },
        "egress.interface.id": {
          "$ref": "#/definitions/observer.egress.interface.id"
        },
        "egress.interface.name": {
          "$ref": "#/definitions/observer.egress.interface.name"
        },
        "egress.vlan.id": {
          "$ref": "#/definitions/observer.egress.vlan.id"
        },
        "egress.vlan.name": {
          "$ref": "#/definitions/observer.egress.vlan.name"
        },
        "egress.zone": {
          "$ref": "#/definitions/observer.egress.zone"
        },
        "geo.city_name": {
          "$ref": "#/definitions/observer.geo.city_name"
        },
        "geo.continent_code": {
          "$ref": "#/definitions/observer.geo.continent_code"
        },
        "geo.continent_name": {
          "$ref": "#/definitions/observer.geo.continent_name"
        },
        "geo.country_iso_code": {
          "$ref": "#/definitions/observer.geo.country_iso_code"
        },
        "geo.country_name": {
          "$ref": "#/definitions/observer.geo.country_name"
        },
        "geo.location": {
          "$ref": "#/definitions/observer.geo.location"
        },
        "geo.name": {
          "$ref": "#/definitions/observer.geo.name"
        },
        "geo.postal_code": {
          "$ref": "#/definitions/observer.geo.postal_code"
        },
        "geo.region_iso_code": {
          "$ref": "#/definitions/observer.geo.region_iso_code"
        },
        "geo.region_name": {
          "$ref": "#/definitions/observer.geo.region_name"
        },
        "geo.timezone": {
          "$ref": "#/definitions/observer.geo.timezone"
        },
        "hostname": {
          "$ref": "#/definitions/observer.hostname"
        },
        "ingress": {
          "$ref": "#/definitions/observer.ingress"
        },
        "ingress.interface.alias": {
          "$ref": "#/definitions/observer.ingress.interface.alias"
        },
        "ingress.interface.id": {
          "$ref": "#/definitions/observer.ingress.interface.id"
        },
        "ingress.interface.name": {
          "$ref": "#/definitions/observer.ingress.interface.name"
        },
        "ingress.vlan.id": {
          "$ref": "#/definitions/observer.ingress.vlan.id"
        },
        "ingress.vlan.name": {
          "$ref": "#/definitions/observer.ingress.vlan.name"
        },
        "ingress.zone": {
          "$ref": "#/definitions/observer.ingress.zone"
        },
        "ip": {
          "$ref": "#/definitions/observer.ip"
        },
        "mac": {
          "$ref": "#/definitions/observer.mac"
        },
        "name": {
          "$ref": "#/definitions/observer.name"
        },
        "os.family": {
          "$ref": "#/definitions/observer.os.family"
        },
        "os.full": {
          "$ref": "#/definitions/observer.os.full"
        },
        "os.kernel": {
          "$ref": "#/definitions/observer.os.kernel"
        },
        "os.name": {
          "$ref": "#/definitions/observer.os.name"
        },
        "os.platform": {
          "$ref": "#/definitions/observer.os.platform"
        },
        "os.type": {
          "$ref": "#/definitions/observer.os.type"
        },
        "os.version": {
          "$ref": "#/definitions/observer.os.version"
        },
        "product": {
          "$ref": "#/definitions/observer.product"
        },
        "serial_number": {
          "$ref": "#/definitions/observer.serial_number"
        },
        "type": {
          "$ref": "#/definitions/observer.type"
        },
        "vendor": {
          "$ref": "#/definitions/observer.vendor"
        },
        "version": {
          "$ref": "#/definitions/observer.version"
        }
      }
    },
    "observer.egress": {
      "$ref": "#/definitions/observer.egress"
    },
    "observer.egress.interface.alias": {
      "$ref": "#/definitions/observer.egress.interface.alias"
    },
    "observer.egress.interface.id": {
      "$ref": "#/definitions/observer.egress.interface.id"
    },
    "observer.egress.interface.name": {
      "$ref": "#/definitions/observer.egress.interface.name"
    },
    "observer.egress.vlan.id": {
      "$ref": "#/definitions/observer.egress.vlan.id"
    },
    "observer.egress.vlan.name": {
      "$ref": "#/definitions/observer.egress.vlan.name"
    },
    "observer.egress.zone": {
      "$ref": "#/definitions/observer.egress.zone"
    },
    "observer.geo.city_name": {
      "$ref": "#/definitions/observer.geo.city_name"
    },
    "observer.geo.continent_code": {
      "$ref": "#/definitions/observer.geo.continent_code"
    },
    "observer.geo.continent_name": {
      "$ref": "#/definitions/observer.geo.continent_name"
    },
    "observer.geo.country_iso_code": {
      "$ref": "#/definitions/observer.geo.country_iso_code"
    },
    "observer.geo.country_name": {
      "$ref": "#/definitions/observer.geo.country_name"
    },
    "observer.geo.location": {
      "$ref": "#/definitions/observer.geo.location"
    },
    "observer.geo.name": {
      "$ref": "#/definitions/observer.geo.name"
    },
    "observer.geo.postal_code": {
      "$ref": "#/definitions/observer.geo.postal_code"
    },
    "observer.geo.region_iso_code": {
      "$ref": "#/definitions/observer.geo.region_iso_code"
    },
    "observer.geo.region_name": {
      "$ref": "#/definitions/observer.geo.region_name"
    },
    "observer.geo.timezone": {
      "$ref": "#/definitions/observer.geo.timezone"
    },
    "observer.hostname": {
      "$ref": "#/definitions/observer.hostname"
    },
    "observer.ingress": {
      "$ref": "#/definitions/observer.ingress"
    },
    "observer.ingress.interface.alias": {
      "$ref": "#/definitions/observer.ingress.interface.alias"
    },
    "observer.ingress.interface.id": {
      "$ref": "#/definitions/observer.ingress.interface.id"
    },
    "observer.ingress.interface.name": {
      "$ref": "#/definitions/observer.ingress.interface.name"
    },
    "observer.ingress.vlan.id": {
      "$ref": "#/definitions/observer.ingress.vlan.id"
    },
    "observer.ingress.vlan.name": {
      "$ref": "#/definitions/observer.ingress.vlan.name"
    },
    "observer.ingress.zone": {
      "$ref": "#/definitions/observer.ingress.zone"
    },
    "observer.ip": {
      "$ref": "#/definitions/observer.ip"
    },
    "observer.mac": {
      "$ref": "#/definitions/observer.mac"
    },
    "observer.name": {
      "$ref": "#/definitions/observer.name"
    },
    "observer.os.family": {
      "$ref": "#/definitions/observer.os.family"
    },
    "observer.os.full": {
      "$ref": "#/definitions/observer.os.full"
    },
    "observer.os.kernel": {
      "$ref": "#/definitions/observer.os.kernel"
    },
    "observer.os.name": {
      "$ref": "#/definitions/observer.os.name"
    },
    "observer.os.platform": {
      "$ref": "#/definitions/observer.os.platform"
    },
    "observer.os.type": {
      "$ref": "#/definitions/observer.os.type"
    },
    "observer.os.version": {
      "$ref": "#/definitions/observer.os.version"
    },
    "observer.product": {
      "$ref": "#/definitions/observer.product"
    },
    "observer.serial_number": {
      "$ref": "#/definitions/observer.serial_number"
    },
    "observer.type": {
      "$ref": "#/definitions/observer.type"
    },
    "observer.vendor": {
      "$ref": "#/definitions/observer.vendor"
    },
    "observer.version": {
      "$ref": "#/definitions/observer.version"
    },
    "opcode": {
      "$ref": "#/definitions/opcode"
    },
    "orchestrator": {
      "description": "Fields that describe the resources which container orchestrators manage or act upon.",
      "type": [
        "object"
      ],
      "properties": {
        "api_version": {
          "$ref": "#/definitions/orchestrator.api_version"
        },
        "cluster.name": {
          "$ref": "#/definitions/orchestrator.cluster.name"
        },
        "cluster.url": {
          "$ref": "#/definitions/orchestrator.cluster.url"
        },
        "cluster.version": {
          "$ref": "#/definitions/orchestrator.cluster.version"
        },
        "namespace": {
          "$ref": "#/definitions/orchestrator.namespace"
        },
        "organization": {
          "$ref": "#/definitions/orchestrator.organization"
        },
        "resource.name": {
          "$ref": "#/definitions/orchestrator.resource.name"
        },
        "resource.type": {
          "$ref": "#/definitions/orchestrator.resource.type"
        },
        "type": {
          "$ref": "#/definitions/orchestrator.type"
        }
      }
    },
    "orchestrator.api_version": {
      "$ref": "#/definitions/orchestrator.api_version"
    },
    "orchestrator.cluster.name": {
      "$ref": "#/definitions/orchestrator.cluster.name"
    },
    "orchestrator.cluster.url": {
      "$ref": "#/definitions/orchestrator.cluster.url"
    },
    "orchestrator.cluster.version": {
      "$ref": "#/definitions/orchestrator.cluster.version"
    },
    "orchestrator.namespace": {
      "$ref": "#/definitions/orchestrator.namespace"
    },
    "orchestrator.organization": {
      "$ref": "#/definitions/orchestrator.organization"
    },
    "orchestrator.resource.name": {
      "$ref": "#/definitions/orchestrator.resource.name"
    },
    "orchestrator.resource.type": {
      "$ref": "#/definitions/orchestrator.resource.type"
    },
    "orchestrator.type": {
      "$ref": "#/definitions/orchestrator.type"
    },
    "organization": {
      "description": "The organization fields enrich data with information about the company or entity the data is associated with.\nThese fields help you arrange or filter data stored in an index by one or multiple organizations.",
      "type": [
        "object"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/organization.id"
        },
        "name": {
          "$ref": "#/definitions/organization.name"
        }
      }
    },
    "organization.id": {
      "$ref": "#/definitions/organization.id"
    },
    "organization.name": {
      "$ref": "#/definitions/organization.name"
    },
    "os": {
      "description": "The OS fields contain information about the operating system.",
      "type": [
        "object"
      ],
      "properties": {
        "family": {
          "$ref": "#/definitions/os.family"
        },
        "full": {
          "$ref": "#/definitions/os.full"
        },
        "kernel": {
          "$ref": "#/definitions/os.kernel"
        },
        "name": {
          "$ref": "#/definitions/os.name"
        },
        "platform": {
          "$ref": "#/definitions/os.platform"
        },
        "type": {
          "$ref": "#/definitions/os.type"
        },
        "version": {
          "$ref": "#/definitions/os.version"
        }
      }
    },
    "os.family": {
      "$ref": "#/definitions/os.family"
    },
    "os.full": {
      "$ref": "#/definitions/os.full"
    },
    "os.kernel": {
      "$ref": "#/definitions/os.kernel"
    },
    "os.name": {
      "$ref": "#/definitions/os.name"
    },
    "os.platform": {
      "$ref": "#/definitions/os.platform"
    },
    "os.type": {
      "$ref": "#/definitions/os.type"
    },
    "os.version": {
      "$ref": "#/definitions/os.version"
    },
    "package": {
      "description": "These fields contain information about an installed software package. It contains general information about a package, such as name, version or size. It also contains installation details, such as time or location.",
      "type": [
        "object"
      ],
      "properties": {
        "architecture": {
          "$ref": "#/definitions/package.architecture"
        },
        "build_version": {
          "$ref": "#/definitions/package.build_version"
        },
        "checksum": {
          "$ref": "#/definitions/package.checksum"
        },
        "description": {
          "$ref": "#/definitions/package.description"
        },
        "install_scope": {
          "$ref": "#/definitions/package.install_scope"
        },
        "installed": {
          "$ref": "#/definitions/package.installed"
        },
        "license": {
          "$ref": "#/definitions/package.license"
        },
        "name": {
          "$ref": "#/definitions/package.name"
        },
        "path": {
          "$ref": "#/definitions/package.path"
        },
        "reference": {
          "$ref": "#/definitions/package.reference"
        },
        "size": {
          "$ref": "#/definitions/package.size"
        },
        "type": {
          "$ref": "#/definitions/package.type"
        },
        "version": {
          "$ref": "#/definitions/package.version"
        }
      }
    },
    "package.architecture": {
      "$ref": "#/definitions/package.architecture"
    },
    "package.build_version": {
      "$ref": "#/definitions/package.build_version"
    },
    "package.checksum": {
      "$ref": "#/definitions/package.checksum"
    },
    "package.description": {
      "$ref": "#/definitions/package.description"
    },
    "package.install_scope": {
      "$ref": "#/definitions/package.install_scope"
    },
    "package.installed": {
      "$ref": "#/definitions/package.installed"
    },
    "package.license": {
      "$ref": "#/definitions/package.license"
    },
    "package.name": {
      "$ref": "#/definitions/package.name"
    },
    "package.path": {
      "$ref": "#/definitions/package.path"
    },
    "package.reference": {
      "$ref": "#/definitions/package.reference"
    },
    "package.size": {
      "$ref": "#/definitions/package.size"
    },
    "package.type": {
      "$ref": "#/definitions/package.type"
    },
    "package.version": {
      "$ref": "#/definitions/package.version"
    },
    "pe": {
      "description": "These fields contain Windows Portable Executable (PE) metadata.",
      "type": [
        "object"
      ],
      "properties": {
        "architecture": {
          "$ref": "#/definitions/pe.architecture"
        },
        "company": {
          "$ref": "#/definitions/pe.company"
        },
        "description": {
          "$ref": "#/definitions/pe.description"
        },
        "file_version": {
          "$ref": "#/definitions/pe.file_version"
        },
        "imphash": {
          "$ref": "#/definitions/pe.imphash"
        },
        "original_file_name": {
          "$ref": "#/definitions/pe.original_file_name"
        },
        "product": {
          "$ref": "#/definitions/pe.product"
        }
      }
    },
    "pe.architecture": {
      "$ref": "#/definitions/pe.architecture"
    },
    "pe.company": {
      "$ref": "#/definitions/pe.company"
    },
    "pe.description": {
      "$ref": "#/definitions/pe.description"
    },
    "pe.file_version": {
      "$ref": "#/definitions/pe.file_version"
    },
    "pe.imphash": {
      "$ref": "#/definitions/pe.imphash"
    },
    "pe.original_file_name": {
      "$ref": "#/definitions/pe.original_file_name"
    },
    "pe.product": {
      "$ref": "#/definitions/pe.product"
    },
    "process": {
      "type": [
        "object"
      ],
      "properties": {
        "exe": {
          "$ref": "#/definitions/process.exe"
        },
        "owner": {
          "description": "Process owner information.",
          "type": [
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/process.owner.id"
            },
            "name": {
              "$ref": "#/definitions/process.owner.name"
            }
          }
        }
      }
    },
    "process.args": {
      "$ref": "#/definitions/process.args"
    },
    "process.args_count": {
      "$ref": "#/definitions/process.args_count"
    },
    "process.code_signature.digest_algorithm": {
      "$ref": "#/definitions/process.code_signature.digest_algorithm"
    },
    "process.code_signature.exists": {
      "$ref": "#/definitions/process.code_signature.exists"
    },
    "process.code_signature.signing_id": {
      "$ref": "#/definitions/process.code_signature.signing_id"
    },
    "process.code_signature.status": {
      "$ref": "#/definitions/process.code_signature.status"
    },
    "process.code_signature.subject_name": {
      "$ref": "#/definitions/process.code_signature.subject_name"
    },
    "process.code_signature.team_id": {
      "$ref": "#/definitions/process.code_signature.team_id"
    },
    "process.code_signature.timestamp": {
      "$ref": "#/definitions/process.code_signature.timestamp"
    },
    "process.code_signature.trusted": {
      "$ref": "#/definitions/process.code_signature.trusted"
    },
    "process.code_signature.valid": {
      "$ref": "#/definitions/process.code_signature.valid"
    },
    "process.command_line": {
      "$ref": "#/definitions/process.command_line"
    },
    "process.elf.architecture": {
      "$ref": "#/definitions/process.elf.architecture"
    },
    "process.elf.byte_order": {
      "$ref": "#/definitions/process.elf.byte_order"
    },
    "process.elf.cpu_type": {
      "$ref": "#/definitions/process.elf.cpu_type"
    },
    "process.elf.creation_date": {
      "$ref": "#/definitions/process.elf.creation_date"
    },
    "process.elf.exports": {
      "$ref": "#/definitions/process.elf.exports"
    },
    "process.elf.header.abi_version": {
      "$ref": "#/definitions/process.elf.header.abi_version"
    },
    "process.elf.header.class": {
      "$ref": "#/definitions/process.elf.header.class"
    },
    "process.elf.header.data": {
      "$ref": "#/definitions/process.elf.header.data"
    },
    "process.elf.header.entrypoint": {
      "$ref": "#/definitions/process.elf.header.entrypoint"
    },
    "process.elf.header.object_version": {
      "$ref": "#/definitions/process.elf.header.object_version"
    },
    "process.elf.header.os_abi": {
      "$ref": "#/definitions/process.elf.header.os_abi"
    },
    "process.elf.header.type": {
      "$ref": "#/definitions/process.elf.header.type"
    },
    "process.elf.header.version": {
      "$ref": "#/definitions/process.elf.header.version"
    },
    "process.elf.imports": {
      "$ref": "#/definitions/process.elf.imports"
    },
    "process.elf.sections": {
      "$ref": "#/definitions/process.elf.sections"
    },
    "process.elf.sections.chi2": {
      "$ref": "#/definitions/process.elf.sections.chi2"
    },
    "process.elf.sections.entropy": {
      "$ref": "#/definitions/process.elf.sections.entropy"
    },
    "process.elf.sections.flags": {
      "$ref": "#/definitions/process.elf.sections.flags"
    },
    "process.elf.sections.name": {
      "$ref": "#/definitions/process.elf.sections.name"
    },
    "process.elf.sections.physical_offset": {
      "$ref": "#/definitions/process.elf.sections.physical_offset"
    },
    "process.elf.sections.physical_size": {
      "$ref": "#/definitions/process.elf.sections.physical_size"
    },
    "process.elf.sections.type": {
      "$ref": "#/definitions/process.elf.sections.type"
    },
    "process.elf.sections.virtual_address": {
      "$ref": "#/definitions/process.elf.sections.virtual_address"
    },
    "process.elf.sections.virtual_size": {
      "$ref": "#/definitions/process.elf.sections.virtual_size"
    },
    "process.elf.segments": {
      "$ref": "#/definitions/process.elf.segments"
    },
    "process.elf.segments.sections": {
      "$ref": "#/definitions/process.elf.segments.sections"
    },
    "process.elf.segments.type": {
      "$ref": "#/definitions/process.elf.segments.type"
    },
    "process.elf.shared_libraries": {
      "$ref": "#/definitions/process.elf.shared_libraries"
    },
    "process.elf.telfhash": {
      "$ref": "#/definitions/process.elf.telfhash"
    },
    "process.end": {
      "$ref": "#/definitions/process.end"
    },
    "process.entity_id": {
      "$ref": "#/definitions/process.entity_id"
    },
    "process.exe": {
      "$ref": "#/definitions/process.exe"
    },
    "process.executable": {
      "$ref": "#/definitions/process.executable"
    },
    "process.exit_code": {
      "$ref": "#/definitions/process.exit_code"
    },
    "process.hash.md5": {
      "$ref": "#/definitions/process.hash.md5"
    },
    "process.hash.sha1": {
      "$ref": "#/definitions/process.hash.sha1"
    },
    "process.hash.sha256": {
      "$ref": "#/definitions/process.hash.sha256"
    },
    "process.hash.sha512": {
      "$ref": "#/definitions/process.hash.sha512"
    },
    "process.hash.ssdeep": {
      "$ref": "#/definitions/process.hash.ssdeep"
    },
    "process.name": {
      "$ref": "#/definitions/process.name"
    },
    "process.owner.id": {
      "$ref": "#/definitions/process.owner.id"
    },
    "process.owner.name": {
      "$ref": "#/definitions/process.owner.name"
    },
    "process.parent.args": {
      "$ref": "#/definitions/process.parent.args"
    },
    "process.parent.args_count": {
      "$ref": "#/definitions/process.parent.args_count"
    },
    "process.parent.code_signature.digest_algorithm": {
      "$ref": "#/definitions/process.parent.code_signature.digest_algorithm"
    },
    "process.parent.code_signature.exists": {
      "$ref": "#/definitions/process.parent.code_signature.exists"
    },
    "process.parent.code_signature.signing_id": {
      "$ref": "#/definitions/process.parent.code_signature.signing_id"
    },
    "process.parent.code_signature.status": {
      "$ref": "#/definitions/process.parent.code_signature.status"
    },
    "process.parent.code_signature.subject_name": {
      "$ref": "#/definitions/process.parent.code_signature.subject_name"
    },
    "process.parent.code_signature.team_id": {
      "$ref": "#/definitions/process.parent.code_signature.team_id"
    },
    "process.parent.code_signature.timestamp": {
      "$ref": "#/definitions/process.parent.code_signature.timestamp"
    },
    "process.parent.code_signature.trusted": {
      "$ref": "#/definitions/process.parent.code_signature.trusted"
    },
    "process.parent.code_signature.valid": {
      "$ref": "#/definitions/process.parent.code_signature.valid"
    },
    "process.parent.command_line": {
      "$ref": "#/definitions/process.parent.command_line"
    },
    "process.parent.elf.architecture": {
      "$ref": "#/definitions/process.parent.elf.architecture"
    },
    "process.parent.elf.byte_order": {
      "$ref": "#/definitions/process.parent.elf.byte_order"
    },
    "process.parent.elf.cpu_type": {
      "$ref": "#/definitions/process.parent.elf.cpu_type"
    },
    "process.parent.elf.creation_date": {
      "$ref": "#/definitions/process.parent.elf.creation_date"
    },
    "process.parent.elf.exports": {
      "$ref": "#/definitions/process.parent.elf.exports"
    },
    "process.parent.elf.header.abi_version": {
      "$ref": "#/definitions/process.parent.elf.header.abi_version"
    },
    "process.parent.elf.header.class": {
      "$ref": "#/definitions/process.parent.elf.header.class"
    },
    "process.parent.elf.header.data": {
      "$ref": "#/definitions/process.parent.elf.header.data"
    },
    "process.parent.elf.header.entrypoint": {
      "$ref": "#/definitions/process.parent.elf.header.entrypoint"
    },
    "process.parent.elf.header.object_version": {
      "$ref": "#/definitions/process.parent.elf.header.object_version"
    },
    "process.parent.elf.header.os_abi": {
      "$ref": "#/definitions/process.parent.elf.header.os_abi"
    },
    "process.parent.elf.header.type": {
      "$ref": "#/definitions/process.parent.elf.header.type"
    },
    "process.parent.elf.header.version": {
      "$ref": "#/definitions/process.parent.elf.header.version"
    },
    "process.parent.elf.imports": {
      "$ref": "#/definitions/process.parent.elf.imports"
    },
    "process.parent.elf.sections": {
      "$ref": "#/definitions/process.parent.elf.sections"
    },
    "process.parent.elf.sections.chi2": {
      "$ref": "#/definitions/process.parent.elf.sections.chi2"
    },
    "process.parent.elf.sections.entropy": {
      "$ref": "#/definitions/process.parent.elf.sections.entropy"
    },
    "process.parent.elf.sections.flags": {
      "$ref": "#/definitions/process.parent.elf.sections.flags"
    },
    "process.parent.elf.sections.name": {
      "$ref": "#/definitions/process.parent.elf.sections.name"
    },
    "process.parent.elf.sections.physical_offset": {
      "$ref": "#/definitions/process.parent.elf.sections.physical_offset"
    },
    "process.parent.elf.sections.physical_size": {
      "$ref": "#/definitions/process.parent.elf.sections.physical_size"
    },
    "process.parent.elf.sections.type": {
      "$ref": "#/definitions/process.parent.elf.sections.type"
    },
    "process.parent.elf.sections.virtual_address": {
      "$ref": "#/definitions/process.parent.elf.sections.virtual_address"
    },
    "process.parent.elf.sections.virtual_size": {
      "$ref": "#/definitions/process.parent.elf.sections.virtual_size"
    },
    "process.parent.elf.segments": {
      "$ref": "#/definitions/process.parent.elf.segments"
    },
    "process.parent.elf.segments.sections": {
      "$ref": "#/definitions/process.parent.elf.segments.sections"
    },
    "process.parent.elf.segments.type": {
      "$ref": "#/definitions/process.parent.elf.segments.type"
    },
    "process.parent.elf.shared_libraries": {
      "$ref": "#/definitions/process.parent.elf.shared_libraries"
    },
    "process.parent.elf.telfhash": {
      "$ref": "#/definitions/process.parent.elf.telfhash"
    },
    "process.parent.end": {
      "$ref": "#/definitions/process.parent.end"
    },
    "process.parent.entity_id": {
      "$ref": "#/definitions/process.parent.entity_id"
    },
    "process.parent.executable": {
      "$ref": "#/definitions/process.parent.executable"
    },
    "process.parent.exit_code": {
      "$ref": "#/definitions/process.parent.exit_code"
    },
    "process.parent.hash.md5": {
      "$ref": "#/definitions/process.parent.hash.md5"
    },
    "process.parent.hash.sha1": {
      "$ref": "#/definitions/process.parent.hash.sha1"
    },
    "process.parent.hash.sha256": {
      "$ref": "#/definitions/process.parent.hash.sha256"
    },
    "process.parent.hash.sha512": {
      "$ref": "#/definitions/process.parent.hash.sha512"
    },
    "process.parent.hash.ssdeep": {
      "$ref": "#/definitions/process.parent.hash.ssdeep"
    },
    "process.parent.name": {
      "$ref": "#/definitions/process.parent.name"
    },
    "process.parent.pe.architecture": {
      "$ref": "#/definitions/process.parent.pe.architecture"
    },
    "process.parent.pe.company": {
      "$ref": "#/definitions/process.parent.pe.company"
    },
    "process.parent.pe.description": {
      "$ref": "#/definitions/process.parent.pe.description"
    },
    "process.parent.pe.file_version": {
      "$ref": "#/definitions/process.parent.pe.file_version"
    },
    "process.parent.pe.imphash": {
      "$ref": "#/definitions/process.parent.pe.imphash"
    },
    "process.parent.pe.original_file_name": {
      "$ref": "#/definitions/process.parent.pe.original_file_name"
    },
    "process.parent.pe.product": {
      "$ref": "#/definitions/process.parent.pe.product"
    },
    "process.parent.pgid": {
      "$ref": "#/definitions/process.parent.pgid"
    },
    "process.parent.pid": {
      "$ref": "#/definitions/process.parent.pid"
    },
    "process.parent.start": {
      "$ref": "#/definitions/process.parent.start"
    },
    "process.parent.thread.id": {
      "$ref": "#/definitions/process.parent.thread.id"
    },
    "process.parent.thread.name": {
      "$ref": "#/definitions/process.parent.thread.name"
    },
    "process.parent.title": {
      "$ref": "#/definitions/process.parent.title"
    },
    "process.parent.uptime": {
      "$ref": "#/definitions/process.parent.uptime"
    },
    "process.parent.working_directory": {
      "$ref": "#/definitions/process.parent.working_directory"
    },
    "process.pe.architecture": {
      "$ref": "#/definitions/process.pe.architecture"
    },
    "process.pe.company": {
      "$ref": "#/definitions/process.pe.company"
    },
    "process.pe.description": {
      "$ref": "#/definitions/process.pe.description"
    },
    "process.pe.file_version": {
      "$ref": "#/definitions/process.pe.file_version"
    },
    "process.pe.imphash": {
      "$ref": "#/definitions/process.pe.imphash"
    },
    "process.pe.original_file_name": {
      "$ref": "#/definitions/process.pe.original_file_name"
    },
    "process.pe.product": {
      "$ref": "#/definitions/process.pe.product"
    },
    "process.pgid": {
      "$ref": "#/definitions/process.pgid"
    },
    "process.pid": {
      "$ref": "#/definitions/process.pid"
    },
    "process.start": {
      "$ref": "#/definitions/process.start"
    },
    "process.thread.id": {
      "$ref": "#/definitions/process.thread.id"
    },
    "process.thread.name": {
      "$ref": "#/definitions/process.thread.name"
    },
    "process.title": {
      "$ref": "#/definitions/process.title"
    },
    "process.uptime": {
      "$ref": "#/definitions/process.uptime"
    },
    "process.working_directory": {
      "$ref": "#/definitions/process.working_directory"
    },
    "process_id": {
      "$ref": "#/definitions/process_id"
    },
    "provider_guid": {
      "$ref": "#/definitions/provider_guid"
    },
    "record_number": {
      "$ref": "#/definitions/record_number"
    },
    "registry": {
      "description": "Fields related to Windows Registry operations.",
      "type": [
        "object"
      ],
      "properties": {
        "data.bytes": {
          "$ref": "#/definitions/registry.data.bytes"
        },
        "data.strings": {
          "$ref": "#/definitions/registry.data.strings"
        },
        "data.type": {
          "$ref": "#/definitions/registry.data.type"
        },
        "hive": {
          "$ref": "#/definitions/registry.hive"
        },
        "key": {
          "$ref": "#/definitions/registry.key"
        },
        "path": {
          "$ref": "#/definitions/registry.path"
        },
        "value": {
          "$ref": "#/definitions/registry.value"
        }
      }
    },
    "registry.data.bytes": {
      "$ref": "#/definitions/registry.data.bytes"
    },
    "registry.data.strings": {
      "$ref": "#/definitions/registry.data.strings"
    },
    "registry.data.type": {
      "$ref": "#/definitions/registry.data.type"
    },
    "registry.hive": {
      "$ref": "#/definitions/registry.hive"
    },
    "registry.key": {
      "$ref": "#/definitions/registry.key"
    },
    "registry.path": {
      "$ref": "#/definitions/registry.path"
    },
    "registry.value": {
      "$ref": "#/definitions/registry.value"
    },
    "related": {
      "description": "This field set is meant to facilitate pivoting around a piece of data.\nSome pieces of information can be seen in many places in an ECS event. To facilitate searching for them, store an array of all seen values to their corresponding field in `related.`.\nA concrete example is IP addresses, which can be under host, observer, source, destination, client, server, and network.forwarded_ip. If you append all IPs to `related.ip`, you can then search for a given IP trivially, no matter where it appeared, by querying `related.ip:192.0.2.15`.",
      "type": [
        "object"
      ],
      "properties": {
        "hash": {
          "$ref": "#/definitions/related.hash"
        },
        "hosts": {
          "$ref": "#/definitions/related.hosts"
        },
        "ip": {
          "$ref": "#/definitions/related.ip"
        },
        "user": {
          "$ref": "#/definitions/related.user"
        }
      }
    },
    "related.hash": {
      "$ref": "#/definitions/related.hash"
    },
    "related.hosts": {
      "$ref": "#/definitions/related.hosts"
    },
    "related.ip": {
      "$ref": "#/definitions/related.ip"
    },
    "related.user": {
      "$ref": "#/definitions/related.user"
    },
    "related_activity_id": {
      "$ref": "#/definitions/related_activity_id"
    },
    "rule": {
      "description": "Rule fields are used to capture the specifics of any observer or agent rules that generate alerts or other notable events.\nExamples of data sources that would populate the rule fields include: network admission control platforms, network or host IDS/IPS, network firewalls, web application firewalls, url filters, endpoint detection and response (EDR) systems, etc.",
      "type": [
        "object"
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/rule.author"
        },
        "category": {
          "$ref": "#/definitions/rule.category"
        },
        "description": {
          "$ref": "#/definitions/rule.description"
        },
        "id": {
          "$ref": "#/definitions/rule.id"
        },
        "license": {
          "$ref": "#/definitions/rule.license"
        },
        "name": {
          "$ref": "#/definitions/rule.name"
        },
        "reference": {
          "$ref": "#/definitions/rule.reference"
        },
        "ruleset": {
          "$ref": "#/definitions/rule.ruleset"
        },
        "uuid": {
          "$ref": "#/definitions/rule.uuid"
        },
        "version": {
          "$ref": "#/definitions/rule.version"
        }
      }
    },
    "rule.author": {
      "$ref": "#/definitions/rule.author"
    },
    "rule.category": {
      "$ref": "#/definitions/rule.category"
    },
    "rule.description": {
      "$ref": "#/definitions/rule.description"
    },
    "rule.id": {
      "$ref": "#/definitions/rule.id"
    },
    "rule.license": {
      "$ref": "#/definitions/rule.license"
    },
    "rule.name": {
      "$ref": "#/definitions/rule.name"
    },
    "rule.reference": {
      "$ref": "#/definitions/rule.reference"
    },
    "rule.ruleset": {
      "$ref": "#/definitions/rule.ruleset"
    },
    "rule.uuid": {
      "$ref": "#/definitions/rule.uuid"
    },
    "rule.version": {
      "$ref": "#/definitions/rule.version"
    },
    "server": {
      "description": "A Server is defined as the responder in a network connection for events regarding sessions, connections, or bidirectional flow records.\nFor TCP events, the server is the receiver of the initial SYN packet(s) of the TCP connection. For other protocols, the server is generally the responder in the network transaction. Some systems actually use the term \"responder\" to refer the server in TCP connections. The server fields describe details about the system acting as the server in the network event. Server fields are usually populated in conjunction with client fields. Server fields are generally not populated for packet-level events.\nClient / server representations can add semantic context to an exchange, which is helpful to visualize the data in certain situations. If your context falls in that category, you should still ensure that source and destination are filled appropriately.",
      "type": [
        "object"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/server.address"
        },
        "as.number": {
          "$ref": "#/definitions/server.as.number"
        },
        "as.organization.name": {
          "$ref": "#/definitions/server.as.organization.name"
        },
        "bytes": {
          "$ref": "#/definitions/server.bytes"
        },
        "domain": {
          "$ref": "#/definitions/server.domain"
        },
        "geo.city_name": {
          "$ref": "#/definitions/server.geo.city_name"
        },
        "geo.continent_code": {
          "$ref": "#/definitions/server.geo.continent_code"
        },
        "geo.continent_name": {
          "$ref": "#/definitions/server.geo.continent_name"
        },
        "geo.country_iso_code": {
          "$ref": "#/definitions/server.geo.country_iso_code"
        },
        "geo.country_name": {
          "$ref": "#/definitions/server.geo.country_name"
        },
        "geo.location": {
          "$ref": "#/definitions/server.geo.location"
        },
        "geo.name": {
          "$ref": "#/definitions/server.geo.name"
        },
        "geo.postal_code": {
          "$ref": "#/definitions/server.geo.postal_code"
        },
        "geo.region_iso_code": {
          "$ref": "#/definitions/server.geo.region_iso_code"
        },
        "geo.region_name": {
          "$ref": "#/definitions/server.geo.region_name"
        },
        "geo.timezone": {
          "$ref": "#/definitions/server.geo.timezone"
        },
        "ip": {
          "$ref": "#/definitions/server.ip"
        },
        "mac": {
          "$ref": "#/definitions/server.mac"
        },
        "nat.ip": {
          "$ref": "#/definitions/server.nat.ip"
        },
        "nat.port": {
          "$ref": "#/definitions/server.nat.port"
        },
        "packets": {
          "$ref": "#/definitions/server.packets"
        },
        "port": {
          "$ref": "#/definitions/server.port"
        },
        "registered_domain": {
          "$ref": "#/definitions/server.registered_domain"
        },
        "subdomain": {
          "$ref": "#/definitions/server.subdomain"
        },
        "top_level_domain": {
          "$ref": "#/definitions/server.top_level_domain"
        },
        "user.domain": {
          "$ref": "#/definitions/server.user.domain"
        },
        "user.email": {
          "$ref": "#/definitions/server.user.email"
        },
        "user.full_name": {
          "$ref": "#/definitions/server.user.full_name"
        },
        "user.group.domain": {
          "$ref": "#/definitions/server.user.group.domain"
        },
        "user.group.id": {
          "$ref": "#/definitions/server.user.group.id"
        },
        "user.group.name": {
          "$ref": "#/definitions/server.user.group.name"
        },
        "user.hash": {
          "$ref": "#/definitions/server.user.hash"
        },
        "user.id": {
          "$ref": "#/definitions/server.user.id"
        },
        "user.name": {
          "$ref": "#/definitions/server.user.name"
        },
        "user.roles": {
          "$ref": "#/definitions/server.user.roles"
        }
      }
    },
    "server.address": {
      "$ref": "#/definitions/server.address"
    },
    "server.as.number": {
      "$ref": "#/definitions/server.as.number"
    },
    "server.as.organization.name": {
      "$ref": "#/definitions/server.as.organization.name"
    },
    "server.bytes": {
      "$ref": "#/definitions/server.bytes"
    },
    "server.domain": {
      "$ref": "#/definitions/server.domain"
    },
    "server.geo.city_name": {
      "$ref": "#/definitions/server.geo.city_name"
    },
    "server.geo.continent_code": {
      "$ref": "#/definitions/server.geo.continent_code"
    },
    "server.geo.continent_name": {
      "$ref": "#/definitions/server.geo.continent_name"
    },
    "server.geo.country_iso_code": {
      "$ref": "#/definitions/server.geo.country_iso_code"
    },
    "server.geo.country_name": {
      "$ref": "#/definitions/server.geo.country_name"
    },
    "server.geo.location": {
      "$ref": "#/definitions/server.geo.location"
    },
    "server.geo.name": {
      "$ref": "#/definitions/server.geo.name"
    },
    "server.geo.postal_code": {
      "$ref": "#/definitions/server.geo.postal_code"
    },
    "server.geo.region_iso_code": {
      "$ref": "#/definitions/server.geo.region_iso_code"
    },
    "server.geo.region_name": {
      "$ref": "#/definitions/server.geo.region_name"
    },
    "server.geo.timezone": {
      "$ref": "#/definitions/server.geo.timezone"
    },
    "server.ip": {
      "$ref": "#/definitions/server.ip"
    },
    "server.mac": {
      "$ref": "#/definitions/server.mac"
    },
    "server.nat.ip": {
      "$ref": "#/definitions/server.nat.ip"
    },
    "server.nat.port": {
      "$ref": "#/definitions/server.nat.port"
    },
    "server.packets": {
      "$ref": "#/definitions/server.packets"
    },
    "server.port": {
      "$ref": "#/definitions/server.port"
    },
    "server.registered_domain": {
      "$ref": "#/definitions/server.registered_domain"
    },
    "server.subdomain": {
      "$ref": "#/definitions/server.subdomain"
    },
    "server.top_level_domain": {
      "$ref": "#/definitions/server.top_level_domain"
    },
    "server.user.domain": {
      "$ref": "#/definitions/server.user.domain"
    },
    "server.user.email": {
      "$ref": "#/definitions/server.user.email"
    },
    "server.user.full_name": {
      "$ref": "#/definitions/server.user.full_name"
    },
    "server.user.group.domain": {
      "$ref": "#/definitions/server.user.group.domain"
    },
    "server.user.group.id": {
      "$ref": "#/definitions/server.user.group.id"
    },
    "server.user.group.name": {
      "$ref": "#/definitions/server.user.group.name"
    },
    "server.user.hash": {
      "$ref": "#/definitions/server.user.hash"
    },
    "server.user.id": {
      "$ref": "#/definitions/server.user.id"
    },
    "server.user.name": {
      "$ref": "#/definitions/server.user.name"
    },
    "server.user.roles": {
      "$ref": "#/definitions/server.user.roles"
    },
    "service": {
      "description": "The service fields describe the service for or from which the data was collected.\nThese fields help you find and correlate logs for a specific service and version.",
      "type": [
        "object"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/service.address"
        },
        "environment": {
          "$ref": "#/definitions/service.environment"
        },
        "ephemeral_id": {
          "$ref": "#/definitions/service.ephemeral_id"
        },
        "id": {
          "$ref": "#/definitions/service.id"
        },
        "name": {
          "$ref": "#/definitions/service.name"
        },
        "node.name": {
          "$ref": "#/definitions/service.node.name"
        },
        "origin.address": {
          "$ref": "#/definitions/service.origin.address"
        },
        "origin.environment": {
          "$ref": "#/definitions/service.origin.environment"
        },
        "origin.ephemeral_id": {
          "$ref": "#/definitions/service.origin.ephemeral_id"
        },
        "origin.id": {
          "$ref": "#/definitions/service.origin.id"
        },
        "origin.name": {
          "$ref": "#/definitions/service.origin.name"
        },
        "origin.node.name": {
          "$ref": "#/definitions/service.origin.node.name"
        },
        "origin.state": {
          "$ref": "#/definitions/service.origin.state"
        },
        "origin.type": {
          "$ref": "#/definitions/service.origin.type"
        },
        "origin.version": {
          "$ref": "#/definitions/service.origin.version"
        },
        "state": {
          "$ref": "#/definitions/service.state"
        },
        "target.address": {
          "$ref": "#/definitions/service.target.address"
        },
        "target.environment": {
          "$ref": "#/definitions/service.target.environment"
        },
        "target.ephemeral_id": {
          "$ref": "#/definitions/service.target.ephemeral_id"
        },
        "target.id": {
          "$ref": "#/definitions/service.target.id"
        },
        "target.name": {
          "$ref": "#/definitions/service.target.name"
        },
        "target.node.name": {
          "$ref": "#/definitions/service.target.node.name"
        },
        "target.state": {
          "$ref": "#/definitions/service.target.state"
        },
        "target.type": {
          "$ref": "#/definitions/service.target.type"
        },
        "target.version": {
          "$ref": "#/definitions/service.target.version"
        },
        "type": {
          "$ref": "#/definitions/service.type"
        },
        "version": {
          "$ref": "#/definitions/service.version"
        }
      }
    },
    "service.address": {
      "$ref": "#/definitions/service.address"
    },
    "service.environment": {
      "$ref": "#/definitions/service.environment"
    },
    "service.ephemeral_id": {
      "$ref": "#/definitions/service.ephemeral_id"
    },
    "service.id": {
      "$ref": "#/definitions/service.id"
    },
    "service.name": {
      "$ref": "#/definitions/service.name"
    },
    "service.node.name": {
      "$ref": "#/definitions/service.node.name"
    },
    "service.origin.address": {
      "$ref": "#/definitions/service.origin.address"
    },
    "service.origin.environment": {
      "$ref": "#/definitions/service.origin.environment"
    },
    "service.origin.ephemeral_id": {
      "$ref": "#/definitions/service.origin.ephemeral_id"
    },
    "service.origin.id": {
      "$ref": "#/definitions/service.origin.id"
    },
    "service.origin.name": {
      "$ref": "#/definitions/service.origin.name"
    },
    "service.origin.node.name": {
      "$ref": "#/definitions/service.origin.node.name"
    },
    "service.origin.state": {
      "$ref": "#/definitions/service.origin.state"
    },
    "service.origin.type": {
      "$ref": "#/definitions/service.origin.type"
    },
    "service.origin.version": {
      "$ref": "#/definitions/service.origin.version"
    },
    "service.state": {
      "$ref": "#/definitions/service.state"
    },
    "service.target.address": {
      "$ref": "#/definitions/service.target.address"
    },
    "service.target.environment": {
      "$ref": "#/definitions/service.target.environment"
    },
    "service.target.ephemeral_id": {
      "$ref": "#/definitions/service.target.ephemeral_id"
    },
    "service.target.id": {
      "$ref": "#/definitions/service.target.id"
    },
    "service.target.name": {
      "$ref": "#/definitions/service.target.name"
    },
    "service.target.node.name": {
      "$ref": "#/definitions/service.target.node.name"
    },
    "service.target.state": {
      "$ref": "#/definitions/service.target.state"
    },
    "service.target.type": {
      "$ref": "#/definitions/service.target.type"
    },
    "service.target.version": {
      "$ref": "#/definitions/service.target.version"
    },
    "service.type": {
      "$ref": "#/definitions/service.type"
    },
    "service.version": {
      "$ref": "#/definitions/service.version"
    },
    "source": {
      "description": "Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.\nSource fields are usually populated in conjunction with destination fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.",
      "type": [
        "object"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/source.address"
        },
        "as.number": {
          "$ref": "#/definitions/source.as.number"
        },
        "as.organization.name": {
          "$ref": "#/definitions/source.as.organization.name"
        },
        "bytes": {
          "$ref": "#/definitions/source.bytes"
        },
        "domain": {
          "$ref": "#/definitions/source.domain"
        },
        "geo.city_name": {
          "$ref": "#/definitions/source.geo.city_name"
        },
        "geo.continent_code": {
          "$ref": "#/definitions/source.geo.continent_code"
        },
        "geo.continent_name": {
          "$ref": "#/definitions/source.geo.continent_name"
        },
        "geo.country_iso_code": {
          "$ref": "#/definitions/source.geo.country_iso_code"
        },
        "geo.country_name": {
          "$ref": "#/definitions/source.geo.country_name"
        },
        "geo.location": {
          "$ref": "#/definitions/source.geo.location"
        },
        "geo.name": {
          "$ref": "#/definitions/source.geo.name"
        },
        "geo.postal_code": {
          "$ref": "#/definitions/source.geo.postal_code"
        },
        "geo.region_iso_code": {
          "$ref": "#/definitions/source.geo.region_iso_code"
        },
        "geo.region_name": {
          "$ref": "#/definitions/source.geo.region_name"
        },
        "geo.timezone": {
          "$ref": "#/definitions/source.geo.timezone"
        },
        "ip": {
          "$ref": "#/definitions/source.ip"
        },
        "mac": {
          "$ref": "#/definitions/source.mac"
        },
        "nat.ip": {
          "$ref": "#/definitions/source.nat.ip"
        },
        "nat.port": {
          "$ref": "#/definitions/source.nat.port"
        },
        "packets": {
          "$ref": "#/definitions/source.packets"
        },
        "port": {
          "$ref": "#/definitions/source.port"
        },
        "registered_domain": {
          "$ref": "#/definitions/source.registered_domain"
        },
        "subdomain": {
          "$ref": "#/definitions/source.subdomain"
        },
        "top_level_domain": {
          "$ref": "#/definitions/source.top_level_domain"
        },
        "user.domain": {
          "$ref": "#/definitions/source.user.domain"
        },
        "user.email": {
          "$ref": "#/definitions/source.user.email"
        },
        "user.full_name": {
          "$ref": "#/definitions/source.user.full_name"
        },
        "user.group.domain": {
          "$ref": "#/definitions/source.user.group.domain"
        },
        "user.group.id": {
          "$ref": "#/definitions/source.user.group.id"
        },
        "user.group.name": {
          "$ref": "#/definitions/source.user.group.name"
        },
        "user.hash": {
          "$ref": "#/definitions/source.user.hash"
        },
        "user.id": {
          "$ref": "#/definitions/source.user.id"
        },
        "user.name": {
          "$ref": "#/definitions/source.user.name"
        },
        "user.roles": {
          "$ref": "#/definitions/source.user.roles"
        }
      }
    },
    "source.address": {
      "$ref": "#/definitions/source.address"
    },
    "source.as.number": {
      "$ref": "#/definitions/source.as.number"
    },
    "source.as.organization.name": {
      "$ref": "#/definitions/source.as.organization.name"
    },
    "source.bytes": {
      "$ref": "#/definitions/source.bytes"
    },
    "source.domain": {
      "$ref": "#/definitions/source.domain"
    },
    "source.geo.city_name": {
      "$ref": "#/definitions/source.geo.city_name"
    },
    "source.geo.continent_code": {
      "$ref": "#/definitions/source.geo.continent_code"
    },
    "source.geo.continent_name": {
      "$ref": "#/definitions/source.geo.continent_name"
    },
    "source.geo.country_iso_code": {
      "$ref": "#/definitions/source.geo.country_iso_code"
    },
    "source.geo.country_name": {
      "$ref": "#/definitions/source.geo.country_name"
    },
    "source.geo.location": {
      "$ref": "#/definitions/source.geo.location"
    },
    "source.geo.name": {
      "$ref": "#/definitions/source.geo.name"
    },
    "source.geo.postal_code": {
      "$ref": "#/definitions/source.geo.postal_code"
    },
    "source.geo.region_iso_code": {
      "$ref": "#/definitions/source.geo.region_iso_code"
    },
    "source.geo.region_name": {
      "$ref": "#/definitions/source.geo.region_name"
    },
    "source.geo.timezone": {
      "$ref": "#/definitions/source.geo.timezone"
    },
    "source.ip": {
      "$ref": "#/definitions/source.ip"
    },
    "source.mac": {
      "$ref": "#/definitions/source.mac"
    },
    "source.nat.ip": {
      "$ref": "#/definitions/source.nat.ip"
    },
    "source.nat.port": {
      "$ref": "#/definitions/source.nat.port"
    },
    "source.packets": {
      "$ref": "#/definitions/source.packets"
    },
    "source.port": {
      "$ref": "#/definitions/source.port"
    },
    "source.registered_domain": {
      "$ref": "#/definitions/source.registered_domain"
    },
    "source.subdomain": {
      "$ref": "#/definitions/source.subdomain"
    },
    "source.top_level_domain": {
      "$ref": "#/definitions/source.top_level_domain"
    },
    "source.user.domain": {
      "$ref": "#/definitions/source.user.domain"
    },
    "source.user.email": {
      "$ref": "#/definitions/source.user.email"
    },
    "source.user.full_name": {
      "$ref": "#/definitions/source.user.full_name"
    },
    "source.user.group.domain": {
      "$ref": "#/definitions/source.user.group.domain"
    },
    "source.user.group.id": {
      "$ref": "#/definitions/source.user.group.id"
    },
    "source.user.group.name": {
      "$ref": "#/definitions/source.user.group.name"
    },
    "source.user.hash": {
      "$ref": "#/definitions/source.user.hash"
    },
    "source.user.id": {
      "$ref": "#/definitions/source.user.id"
    },
    "source.user.name": {
      "$ref": "#/definitions/source.user.name"
    },
    "source.user.roles": {
      "$ref": "#/definitions/source.user.roles"
    },
    "source_name": {
      "$ref": "#/definitions/source_name"
    },
    "span.id": {
      "$ref": "#/definitions/span.id"
    },
    "tags": {
      "$ref": "#/definitions/tags"
    },
    "task": {
      "$ref": "#/definitions/task"
    },
    "thread_id": {
      "$ref": "#/definitions/thread_id"
    },
    "threat": {
      "description": "Fields to classify events and alerts according to a threat taxonomy such as the MITRE ATT\u0026CK® framework.\nThese fields are for users to classify alerts from all of their sources (e.g. IDS, NGFW, etc.) within a common taxonomy. The threat.tactic.* fields are meant to capture the high level category of the threat (e.g. \"impact\"). The threat.technique.* fields are meant to capture which kind of approach is used by this detected threat, to accomplish the goal (e.g. \"endpoint denial of service\").",
      "type": [
        "object"
      ],
      "properties": {
        "enrichments": {
          "$ref": "#/definitions/threat.enrichments"
        },
        "enrichments.indicator": {
          "$ref": "#/definitions/threat.enrichments.indicator"
        },
        "enrichments.indicator.as.number": {
          "$ref": "#/definitions/threat.enrichments.indicator.as.number"
        },
        "enrichments.indicator.as.organization.name": {
          "$ref": "#/definitions/threat.enrichments.indicator.as.organization.name"
        },
        "enrichments.indicator.confidence": {
          "$ref": "#/definitions/threat.enrichments.indicator.confidence"
        },
        "enrichments.indicator.description": {
          "$ref": "#/definitions/threat.enrichments.indicator.description"
        },
        "enrichments.indicator.email.address": {
          "$ref": "#/definitions/threat.enrichments.indicator.email.address"
        },
        "enrichments.indicator.file.accessed": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.accessed"
        },
        "enrichments.indicator.file.attributes": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.attributes"
        },
        "enrichments.indicator.file.code_signature.digest_algorithm": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.digest_algorithm"
        },
        "enrichments.indicator.file.code_signature.exists": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.exists"
        },
        "enrichments.indicator.file.code_signature.signing_id": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.signing_id"
        },
        "enrichments.indicator.file.code_signature.status": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.status"
        },
        "enrichments.indicator.file.code_signature.subject_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.subject_name"
        },
        "enrichments.indicator.file.code_signature.team_id": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.team_id"
        },
        "enrichments.indicator.file.code_signature.timestamp": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.timestamp"
        },
        "enrichments.indicator.file.code_signature.trusted": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.trusted"
        },
        "enrichments.indicator.file.code_signature.valid": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.valid"
        },
        "enrichments.indicator.file.created": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.created"
        },
        "enrichments.indicator.file.ctime": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.ctime"
        },
        "enrichments.indicator.file.device": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.device"
        },
        "enrichments.indicator.file.directory": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.directory"
        },
        "enrichments.indicator.file.drive_letter": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.drive_letter"
        },
        "enrichments.indicator.file.elf.architecture": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.architecture"
        },
        "enrichments.indicator.file.elf.byte_order": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.byte_order"
        },
        "enrichments.indicator.file.elf.cpu_type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.cpu_type"
        },
        "enrichments.indicator.file.elf.creation_date": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.creation_date"
        },
        "enrichments.indicator.file.elf.exports": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.exports"
        },
        "enrichments.indicator.file.elf.header.abi_version": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.abi_version"
        },
        "enrichments.indicator.file.elf.header.class": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.class"
        },
        "enrichments.indicator.file.elf.header.data": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.data"
        },
        "enrichments.indicator.file.elf.header.entrypoint": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.entrypoint"
        },
        "enrichments.indicator.file.elf.header.object_version": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.object_version"
        },
        "enrichments.indicator.file.elf.header.os_abi": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.os_abi"
        },
        "enrichments.indicator.file.elf.header.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.type"
        },
        "enrichments.indicator.file.elf.header.version": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.version"
        },
        "enrichments.indicator.file.elf.imports": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.imports"
        },
        "enrichments.indicator.file.elf.sections": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections"
        },
        "enrichments.indicator.file.elf.sections.chi2": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.chi2"
        },
        "enrichments.indicator.file.elf.sections.entropy": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.entropy"
        },
        "enrichments.indicator.file.elf.sections.flags": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.flags"
        },
        "enrichments.indicator.file.elf.sections.name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.name"
        },
        "enrichments.indicator.file.elf.sections.physical_offset": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.physical_offset"
        },
        "enrichments.indicator.file.elf.sections.physical_size": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.physical_size"
        },
        "enrichments.indicator.file.elf.sections.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.type"
        },
        "enrichments.indicator.file.elf.sections.virtual_address": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.virtual_address"
        },
        "enrichments.indicator.file.elf.sections.virtual_size": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.virtual_size"
        },
        "enrichments.indicator.file.elf.segments": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments"
        },
        "enrichments.indicator.file.elf.segments.sections": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments.sections"
        },
        "enrichments.indicator.file.elf.segments.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments.type"
        },
        "enrichments.indicator.file.elf.shared_libraries": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.shared_libraries"
        },
        "enrichments.indicator.file.elf.telfhash": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.elf.telfhash"
        },
        "enrichments.indicator.file.extension": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.extension"
        },
        "enrichments.indicator.file.fork_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.fork_name"
        },
        "enrichments.indicator.file.gid": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.gid"
        },
        "enrichments.indicator.file.group": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.group"
        },
        "enrichments.indicator.file.hash.md5": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.hash.md5"
        },
        "enrichments.indicator.file.hash.sha1": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha1"
        },
        "enrichments.indicator.file.hash.sha256": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha256"
        },
        "enrichments.indicator.file.hash.sha512": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha512"
        },
        "enrichments.indicator.file.hash.ssdeep": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.hash.ssdeep"
        },
        "enrichments.indicator.file.inode": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.inode"
        },
        "enrichments.indicator.file.mime_type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.mime_type"
        },
        "enrichments.indicator.file.mode": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.mode"
        },
        "enrichments.indicator.file.mtime": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.mtime"
        },
        "enrichments.indicator.file.name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.name"
        },
        "enrichments.indicator.file.owner": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.owner"
        },
        "enrichments.indicator.file.path": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.path"
        },
        "enrichments.indicator.file.pe.architecture": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.architecture"
        },
        "enrichments.indicator.file.pe.company": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.company"
        },
        "enrichments.indicator.file.pe.description": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.description"
        },
        "enrichments.indicator.file.pe.file_version": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.file_version"
        },
        "enrichments.indicator.file.pe.imphash": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.imphash"
        },
        "enrichments.indicator.file.pe.original_file_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.original_file_name"
        },
        "enrichments.indicator.file.pe.product": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.pe.product"
        },
        "enrichments.indicator.file.size": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.size"
        },
        "enrichments.indicator.file.target_path": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.target_path"
        },
        "enrichments.indicator.file.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.type"
        },
        "enrichments.indicator.file.uid": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.uid"
        },
        "enrichments.indicator.file.x509.alternative_names": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.alternative_names"
        },
        "enrichments.indicator.file.x509.issuer.common_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.common_name"
        },
        "enrichments.indicator.file.x509.issuer.country": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.country"
        },
        "enrichments.indicator.file.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.distinguished_name"
        },
        "enrichments.indicator.file.x509.issuer.locality": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.locality"
        },
        "enrichments.indicator.file.x509.issuer.organization": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.organization"
        },
        "enrichments.indicator.file.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.organizational_unit"
        },
        "enrichments.indicator.file.x509.issuer.state_or_province": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.state_or_province"
        },
        "enrichments.indicator.file.x509.not_after": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.not_after"
        },
        "enrichments.indicator.file.x509.not_before": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.not_before"
        },
        "enrichments.indicator.file.x509.public_key_algorithm": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_algorithm"
        },
        "enrichments.indicator.file.x509.public_key_curve": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_curve"
        },
        "enrichments.indicator.file.x509.public_key_exponent": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_exponent"
        },
        "enrichments.indicator.file.x509.public_key_size": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_size"
        },
        "enrichments.indicator.file.x509.serial_number": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.serial_number"
        },
        "enrichments.indicator.file.x509.signature_algorithm": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.signature_algorithm"
        },
        "enrichments.indicator.file.x509.subject.common_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.common_name"
        },
        "enrichments.indicator.file.x509.subject.country": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.country"
        },
        "enrichments.indicator.file.x509.subject.distinguished_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.distinguished_name"
        },
        "enrichments.indicator.file.x509.subject.locality": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.locality"
        },
        "enrichments.indicator.file.x509.subject.organization": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.organization"
        },
        "enrichments.indicator.file.x509.subject.organizational_unit": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.organizational_unit"
        },
        "enrichments.indicator.file.x509.subject.state_or_province": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.state_or_province"
        },
        "enrichments.indicator.file.x509.version_number": {
          "$ref": "#/definitions/threat.enrichments.indicator.file.x509.version_number"
        },
        "enrichments.indicator.first_seen": {
          "$ref": "#/definitions/threat.enrichments.indicator.first_seen"
        },
        "enrichments.indicator.geo.city_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.city_name"
        },
        "enrichments.indicator.geo.continent_code": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.continent_code"
        },
        "enrichments.indicator.geo.continent_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.continent_name"
        },
        "enrichments.indicator.geo.country_iso_code": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.country_iso_code"
        },
        "enrichments.indicator.geo.country_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.country_name"
        },
        "enrichments.indicator.geo.location": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.location"
        },
        "enrichments.indicator.geo.name": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.name"
        },
        "enrichments.indicator.geo.postal_code": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.postal_code"
        },
        "enrichments.indicator.geo.region_iso_code": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.region_iso_code"
        },
        "enrichments.indicator.geo.region_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.region_name"
        },
        "enrichments.indicator.geo.timezone": {
          "$ref": "#/definitions/threat.enrichments.indicator.geo.timezone"
        },
        "enrichments.indicator.ip": {
          "$ref": "#/definitions/threat.enrichments.indicator.ip"
        },
        "enrichments.indicator.last_seen": {
          "$ref": "#/definitions/threat.enrichments.indicator.last_seen"
        },
        "enrichments.indicator.marking.tlp": {
          "$ref": "#/definitions/threat.enrichments.indicator.marking.tlp"
        },
        "enrichments.indicator.modified_at": {
          "$ref": "#/definitions/threat.enrichments.indicator.modified_at"
        },
        "enrichments.indicator.port": {
          "$ref": "#/definitions/threat.enrichments.indicator.port"
        },
        "enrichments.indicator.provider": {
          "$ref": "#/definitions/threat.enrichments.indicator.provider"
        },
        "enrichments.indicator.reference": {
          "$ref": "#/definitions/threat.enrichments.indicator.reference"
        },
        "enrichments.indicator.registry.data.bytes": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.data.bytes"
        },
        "enrichments.indicator.registry.data.strings": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.data.strings"
        },
        "enrichments.indicator.registry.data.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.data.type"
        },
        "enrichments.indicator.registry.hive": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.hive"
        },
        "enrichments.indicator.registry.key": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.key"
        },
        "enrichments.indicator.registry.path": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.path"
        },
        "enrichments.indicator.registry.value": {
          "$ref": "#/definitions/threat.enrichments.indicator.registry.value"
        },
        "enrichments.indicator.scanner_stats": {
          "$ref": "#/definitions/threat.enrichments.indicator.scanner_stats"
        },
        "enrichments.indicator.sightings": {
          "$ref": "#/definitions/threat.enrichments.indicator.sightings"
        },
        "enrichments.indicator.type": {
          "$ref": "#/definitions/threat.enrichments.indicator.type"
        },
        "enrichments.indicator.url.domain": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.domain"
        },
        "enrichments.indicator.url.extension": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.extension"
        },
        "enrichments.indicator.url.fragment": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.fragment"
        },
        "enrichments.indicator.url.full": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.full"
        },
        "enrichments.indicator.url.original": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.original"
        },
        "enrichments.indicator.url.password": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.password"
        },
        "enrichments.indicator.url.path": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.path"
        },
        "enrichments.indicator.url.port": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.port"
        },
        "enrichments.indicator.url.query": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.query"
        },
        "enrichments.indicator.url.registered_domain": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.registered_domain"
        },
        "enrichments.indicator.url.scheme": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.scheme"
        },
        "enrichments.indicator.url.subdomain": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.subdomain"
        },
        "enrichments.indicator.url.top_level_domain": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.top_level_domain"
        },
        "enrichments.indicator.url.username": {
          "$ref": "#/definitions/threat.enrichments.indicator.url.username"
        },
        "enrichments.indicator.x509.alternative_names": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.alternative_names"
        },
        "enrichments.indicator.x509.issuer.common_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.common_name"
        },
        "enrichments.indicator.x509.issuer.country": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.country"
        },
        "enrichments.indicator.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.distinguished_name"
        },
        "enrichments.indicator.x509.issuer.locality": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.locality"
        },
        "enrichments.indicator.x509.issuer.organization": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.organization"
        },
        "enrichments.indicator.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.organizational_unit"
        },
        "enrichments.indicator.x509.issuer.state_or_province": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.state_or_province"
        },
        "enrichments.indicator.x509.not_after": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.not_after"
        },
        "enrichments.indicator.x509.not_before": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.not_before"
        },
        "enrichments.indicator.x509.public_key_algorithm": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_algorithm"
        },
        "enrichments.indicator.x509.public_key_curve": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_curve"
        },
        "enrichments.indicator.x509.public_key_exponent": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_exponent"
        },
        "enrichments.indicator.x509.public_key_size": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_size"
        },
        "enrichments.indicator.x509.serial_number": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.serial_number"
        },
        "enrichments.indicator.x509.signature_algorithm": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.signature_algorithm"
        },
        "enrichments.indicator.x509.subject.common_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.common_name"
        },
        "enrichments.indicator.x509.subject.country": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.country"
        },
        "enrichments.indicator.x509.subject.distinguished_name": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.distinguished_name"
        },
        "enrichments.indicator.x509.subject.locality": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.locality"
        },
        "enrichments.indicator.x509.subject.organization": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.organization"
        },
        "enrichments.indicator.x509.subject.organizational_unit": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.organizational_unit"
        },
        "enrichments.indicator.x509.subject.state_or_province": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.state_or_province"
        },
        "enrichments.indicator.x509.version_number": {
          "$ref": "#/definitions/threat.enrichments.indicator.x509.version_number"
        },
        "enrichments.matched.atomic": {
          "$ref": "#/definitions/threat.enrichments.matched.atomic"
        },
        "enrichments.matched.field": {
          "$ref": "#/definitions/threat.enrichments.matched.field"
        },
        "enrichments.matched.id": {
          "$ref": "#/definitions/threat.enrichments.matched.id"
        },
        "enrichments.matched.index": {
          "$ref": "#/definitions/threat.enrichments.matched.index"
        },
        "enrichments.matched.type": {
          "$ref": "#/definitions/threat.enrichments.matched.type"
        },
        "framework": {
          "$ref": "#/definitions/threat.framework"
        },
        "group.alias": {
          "$ref": "#/definitions/threat.group.alias"
        },
        "group.id": {
          "$ref": "#/definitions/threat.group.id"
        },
        "group.name": {
          "$ref": "#/definitions/threat.group.name"
        },
        "group.reference": {
          "$ref": "#/definitions/threat.group.reference"
        },
        "indicator.as.number": {
          "$ref": "#/definitions/threat.indicator.as.number"
        },
        "indicator.as.organization.name": {
          "$ref": "#/definitions/threat.indicator.as.organization.name"
        },
        "indicator.confidence": {
          "$ref": "#/definitions/threat.indicator.confidence"
        },
        "indicator.description": {
          "$ref": "#/definitions/threat.indicator.description"
        },
        "indicator.email.address": {
          "$ref": "#/definitions/threat.indicator.email.address"
        },
        "indicator.file.accessed": {
          "$ref": "#/definitions/threat.indicator.file.accessed"
        },
        "indicator.file.attributes": {
          "$ref": "#/definitions/threat.indicator.file.attributes"
        },
        "indicator.file.code_signature.digest_algorithm": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.digest_algorithm"
        },
        "indicator.file.code_signature.exists": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.exists"
        },
        "indicator.file.code_signature.signing_id": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.signing_id"
        },
        "indicator.file.code_signature.status": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.status"
        },
        "indicator.file.code_signature.subject_name": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.subject_name"
        },
        "indicator.file.code_signature.team_id": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.team_id"
        },
        "indicator.file.code_signature.timestamp": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.timestamp"
        },
        "indicator.file.code_signature.trusted": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.trusted"
        },
        "indicator.file.code_signature.valid": {
          "$ref": "#/definitions/threat.indicator.file.code_signature.valid"
        },
        "indicator.file.created": {
          "$ref": "#/definitions/threat.indicator.file.created"
        },
        "indicator.file.ctime": {
          "$ref": "#/definitions/threat.indicator.file.ctime"
        },
        "indicator.file.device": {
          "$ref": "#/definitions/threat.indicator.file.device"
        },
        "indicator.file.directory": {
          "$ref": "#/definitions/threat.indicator.file.directory"
        },
        "indicator.file.drive_letter": {
          "$ref": "#/definitions/threat.indicator.file.drive_letter"
        },
        "indicator.file.elf.architecture": {
          "$ref": "#/definitions/threat.indicator.file.elf.architecture"
        },
        "indicator.file.elf.byte_order": {
          "$ref": "#/definitions/threat.indicator.file.elf.byte_order"
        },
        "indicator.file.elf.cpu_type": {
          "$ref": "#/definitions/threat.indicator.file.elf.cpu_type"
        },
        "indicator.file.elf.creation_date": {
          "$ref": "#/definitions/threat.indicator.file.elf.creation_date"
        },
        "indicator.file.elf.exports": {
          "$ref": "#/definitions/threat.indicator.file.elf.exports"
        },
        "indicator.file.elf.header.abi_version": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.abi_version"
        },
        "indicator.file.elf.header.class": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.class"
        },
        "indicator.file.elf.header.data": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.data"
        },
        "indicator.file.elf.header.entrypoint": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.entrypoint"
        },
        "indicator.file.elf.header.object_version": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.object_version"
        },
        "indicator.file.elf.header.os_abi": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.os_abi"
        },
        "indicator.file.elf.header.type": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.type"
        },
        "indicator.file.elf.header.version": {
          "$ref": "#/definitions/threat.indicator.file.elf.header.version"
        },
        "indicator.file.elf.imports": {
          "$ref": "#/definitions/threat.indicator.file.elf.imports"
        },
        "indicator.file.elf.sections": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections"
        },
        "indicator.file.elf.sections.chi2": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.chi2"
        },
        "indicator.file.elf.sections.entropy": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.entropy"
        },
        "indicator.file.elf.sections.flags": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.flags"
        },
        "indicator.file.elf.sections.name": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.name"
        },
        "indicator.file.elf.sections.physical_offset": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.physical_offset"
        },
        "indicator.file.elf.sections.physical_size": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.physical_size"
        },
        "indicator.file.elf.sections.type": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.type"
        },
        "indicator.file.elf.sections.virtual_address": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.virtual_address"
        },
        "indicator.file.elf.sections.virtual_size": {
          "$ref": "#/definitions/threat.indicator.file.elf.sections.virtual_size"
        },
        "indicator.file.elf.segments": {
          "$ref": "#/definitions/threat.indicator.file.elf.segments"
        },
        "indicator.file.elf.segments.sections": {
          "$ref": "#/definitions/threat.indicator.file.elf.segments.sections"
        },
        "indicator.file.elf.segments.type": {
          "$ref": "#/definitions/threat.indicator.file.elf.segments.type"
        },
        "indicator.file.elf.shared_libraries": {
          "$ref": "#/definitions/threat.indicator.file.elf.shared_libraries"
        },
        "indicator.file.elf.telfhash": {
          "$ref": "#/definitions/threat.indicator.file.elf.telfhash"
        },
        "indicator.file.extension": {
          "$ref": "#/definitions/threat.indicator.file.extension"
        },
        "indicator.file.fork_name": {
          "$ref": "#/definitions/threat.indicator.file.fork_name"
        },
        "indicator.file.gid": {
          "$ref": "#/definitions/threat.indicator.file.gid"
        },
        "indicator.file.group": {
          "$ref": "#/definitions/threat.indicator.file.group"
        },
        "indicator.file.hash.md5": {
          "$ref": "#/definitions/threat.indicator.file.hash.md5"
        },
        "indicator.file.hash.sha1": {
          "$ref": "#/definitions/threat.indicator.file.hash.sha1"
        },
        "indicator.file.hash.sha256": {
          "$ref": "#/definitions/threat.indicator.file.hash.sha256"
        },
        "indicator.file.hash.sha512": {
          "$ref": "#/definitions/threat.indicator.file.hash.sha512"
        },
        "indicator.file.hash.ssdeep": {
          "$ref": "#/definitions/threat.indicator.file.hash.ssdeep"
        },
        "indicator.file.inode": {
          "$ref": "#/definitions/threat.indicator.file.inode"
        },
        "indicator.file.mime_type": {
          "$ref": "#/definitions/threat.indicator.file.mime_type"
        },
        "indicator.file.mode": {
          "$ref": "#/definitions/threat.indicator.file.mode"
        },
        "indicator.file.mtime": {
          "$ref": "#/definitions/threat.indicator.file.mtime"
        },
        "indicator.file.name": {
          "$ref": "#/definitions/threat.indicator.file.name"
        },
        "indicator.file.owner": {
          "$ref": "#/definitions/threat.indicator.file.owner"
        },
        "indicator.file.path": {
          "$ref": "#/definitions/threat.indicator.file.path"
        },
        "indicator.file.pe.architecture": {
          "$ref": "#/definitions/threat.indicator.file.pe.architecture"
        },
        "indicator.file.pe.company": {
          "$ref": "#/definitions/threat.indicator.file.pe.company"
        },
        "indicator.file.pe.description": {
          "$ref": "#/definitions/threat.indicator.file.pe.description"
        },
        "indicator.file.pe.file_version": {
          "$ref": "#/definitions/threat.indicator.file.pe.file_version"
        },
        "indicator.file.pe.imphash": {
          "$ref": "#/definitions/threat.indicator.file.pe.imphash"
        },
        "indicator.file.pe.original_file_name": {
          "$ref": "#/definitions/threat.indicator.file.pe.original_file_name"
        },
        "indicator.file.pe.product": {
          "$ref": "#/definitions/threat.indicator.file.pe.product"
        },
        "indicator.file.size": {
          "$ref": "#/definitions/threat.indicator.file.size"
        },
        "indicator.file.target_path": {
          "$ref": "#/definitions/threat.indicator.file.target_path"
        },
        "indicator.file.type": {
          "$ref": "#/definitions/threat.indicator.file.type"
        },
        "indicator.file.uid": {
          "$ref": "#/definitions/threat.indicator.file.uid"
        },
        "indicator.file.x509.alternative_names": {
          "$ref": "#/definitions/threat.indicator.file.x509.alternative_names"
        },
        "indicator.file.x509.issuer.common_name": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.common_name"
        },
        "indicator.file.x509.issuer.country": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.country"
        },
        "indicator.file.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.distinguished_name"
        },
        "indicator.file.x509.issuer.locality": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.locality"
        },
        "indicator.file.x509.issuer.organization": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.organization"
        },
        "indicator.file.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.organizational_unit"
        },
        "indicator.file.x509.issuer.state_or_province": {
          "$ref": "#/definitions/threat.indicator.file.x509.issuer.state_or_province"
        },
        "indicator.file.x509.not_after": {
          "$ref": "#/definitions/threat.indicator.file.x509.not_after"
        },
        "indicator.file.x509.not_before": {
          "$ref": "#/definitions/threat.indicator.file.x509.not_before"
        },
        "indicator.file.x509.public_key_algorithm": {
          "$ref": "#/definitions/threat.indicator.file.x509.public_key_algorithm"
        },
        "indicator.file.x509.public_key_curve": {
          "$ref": "#/definitions/threat.indicator.file.x509.public_key_curve"
        },
        "indicator.file.x509.public_key_exponent": {
          "$ref": "#/definitions/threat.indicator.file.x509.public_key_exponent"
        },
        "indicator.file.x509.public_key_size": {
          "$ref": "#/definitions/threat.indicator.file.x509.public_key_size"
        },
        "indicator.file.x509.serial_number": {
          "$ref": "#/definitions/threat.indicator.file.x509.serial_number"
        },
        "indicator.file.x509.signature_algorithm": {
          "$ref": "#/definitions/threat.indicator.file.x509.signature_algorithm"
        },
        "indicator.file.x509.subject.common_name": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.common_name"
        },
        "indicator.file.x509.subject.country": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.country"
        },
        "indicator.file.x509.subject.distinguished_name": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.distinguished_name"
        },
        "indicator.file.x509.subject.locality": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.locality"
        },
        "indicator.file.x509.subject.organization": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.organization"
        },
        "indicator.file.x509.subject.organizational_unit": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.organizational_unit"
        },
        "indicator.file.x509.subject.state_or_province": {
          "$ref": "#/definitions/threat.indicator.file.x509.subject.state_or_province"
        },
        "indicator.file.x509.version_number": {
          "$ref": "#/definitions/threat.indicator.file.x509.version_number"
        },
        "indicator.first_seen": {
          "$ref": "#/definitions/threat.indicator.first_seen"
        },
        "indicator.geo.city_name": {
          "$ref": "#/definitions/threat.indicator.geo.city_name"
        },
        "indicator.geo.continent_code": {
          "$ref": "#/definitions/threat.indicator.geo.continent_code"
        },
        "indicator.geo.continent_name": {
          "$ref": "#/definitions/threat.indicator.geo.continent_name"
        },
        "indicator.geo.country_iso_code": {
          "$ref": "#/definitions/threat.indicator.geo.country_iso_code"
        },
        "indicator.geo.country_name": {
          "$ref": "#/definitions/threat.indicator.geo.country_name"
        },
        "indicator.geo.location": {
          "$ref": "#/definitions/threat.indicator.geo.location"
        },
        "indicator.geo.name": {
          "$ref": "#/definitions/threat.indicator.geo.name"
        },
        "indicator.geo.postal_code": {
          "$ref": "#/definitions/threat.indicator.geo.postal_code"
        },
        "indicator.geo.region_iso_code": {
          "$ref": "#/definitions/threat.indicator.geo.region_iso_code"
        },
        "indicator.geo.region_name": {
          "$ref": "#/definitions/threat.indicator.geo.region_name"
        },
        "indicator.geo.timezone": {
          "$ref": "#/definitions/threat.indicator.geo.timezone"
        },
        "indicator.ip": {
          "$ref": "#/definitions/threat.indicator.ip"
        },
        "indicator.last_seen": {
          "$ref": "#/definitions/threat.indicator.last_seen"
        },
        "indicator.marking.tlp": {
          "$ref": "#/definitions/threat.indicator.marking.tlp"
        },
        "indicator.modified_at": {
          "$ref": "#/definitions/threat.indicator.modified_at"
        },
        "indicator.port": {
          "$ref": "#/definitions/threat.indicator.port"
        },
        "indicator.provider": {
          "$ref": "#/definitions/threat.indicator.provider"
        },
        "indicator.reference": {
          "$ref": "#/definitions/threat.indicator.reference"
        },
        "indicator.registry.data.bytes": {
          "$ref": "#/definitions/threat.indicator.registry.data.bytes"
        },
        "indicator.registry.data.strings": {
          "$ref": "#/definitions/threat.indicator.registry.data.strings"
        },
        "indicator.registry.data.type": {
          "$ref": "#/definitions/threat.indicator.registry.data.type"
        },
        "indicator.registry.hive": {
          "$ref": "#/definitions/threat.indicator.registry.hive"
        },
        "indicator.registry.key": {
          "$ref": "#/definitions/threat.indicator.registry.key"
        },
        "indicator.registry.path": {
          "$ref": "#/definitions/threat.indicator.registry.path"
        },
        "indicator.registry.value": {
          "$ref": "#/definitions/threat.indicator.registry.value"
        },
        "indicator.scanner_stats": {
          "$ref": "#/definitions/threat.indicator.scanner_stats"
        },
        "indicator.sightings": {
          "$ref": "#/definitions/threat.indicator.sightings"
        },
        "indicator.type": {
          "$ref": "#/definitions/threat.indicator.type"
        },
        "indicator.url.domain": {
          "$ref": "#/definitions/threat.indicator.url.domain"
        },
        "indicator.url.extension": {
          "$ref": "#/definitions/threat.indicator.url.extension"
        },
        "indicator.url.fragment": {
          "$ref": "#/definitions/threat.indicator.url.fragment"
        },
        "indicator.url.full": {
          "$ref": "#/definitions/threat.indicator.url.full"
        },
        "indicator.url.original": {
          "$ref": "#/definitions/threat.indicator.url.original"
        },
        "indicator.url.password": {
          "$ref": "#/definitions/threat.indicator.url.password"
        },
        "indicator.url.path": {
          "$ref": "#/definitions/threat.indicator.url.path"
        },
        "indicator.url.port": {
          "$ref": "#/definitions/threat.indicator.url.port"
        },
        "indicator.url.query": {
          "$ref": "#/definitions/threat.indicator.url.query"
        },
        "indicator.url.registered_domain": {
          "$ref": "#/definitions/threat.indicator.url.registered_domain"
        },
        "indicator.url.scheme": {
          "$ref": "#/definitions/threat.indicator.url.scheme"
        },
        "indicator.url.subdomain": {
          "$ref": "#/definitions/threat.indicator.url.subdomain"
        },
        "indicator.url.top_level_domain": {
          "$ref": "#/definitions/threat.indicator.url.top_level_domain"
        },
        "indicator.url.username": {
          "$ref": "#/definitions/threat.indicator.url.username"
        },
        "indicator.x509.alternative_names": {
          "$ref": "#/definitions/threat.indicator.x509.alternative_names"
        },
        "indicator.x509.issuer.common_name": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.common_name"
        },
        "indicator.x509.issuer.country": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.country"
        },
        "indicator.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.distinguished_name"
        },
        "indicator.x509.issuer.locality": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.locality"
        },
        "indicator.x509.issuer.organization": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.organization"
        },
        "indicator.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.organizational_unit"
        },
        "indicator.x509.issuer.state_or_province": {
          "$ref": "#/definitions/threat.indicator.x509.issuer.state_or_province"
        },
        "indicator.x509.not_after": {
          "$ref": "#/definitions/threat.indicator.x509.not_after"
        },
        "indicator.x509.not_before": {
          "$ref": "#/definitions/threat.indicator.x509.not_before"
        },
        "indicator.x509.public_key_algorithm": {
          "$ref": "#/definitions/threat.indicator.x509.public_key_algorithm"
        },
        "indicator.x509.public_key_curve": {
          "$ref": "#/definitions/threat.indicator.x509.public_key_curve"
        },
        "indicator.x509.public_key_exponent": {
          "$ref": "#/definitions/threat.indicator.x509.public_key_exponent"
        },
        "indicator.x509.public_key_size": {
          "$ref": "#/definitions/threat.indicator.x509.public_key_size"
        },
        "indicator.x509.serial_number": {
          "$ref": "#/definitions/threat.indicator.x509.serial_number"
        },
        "indicator.x509.signature_algorithm": {
          "$ref": "#/definitions/threat.indicator.x509.signature_algorithm"
        },
        "indicator.x509.subject.common_name": {
          "$ref": "#/definitions/threat.indicator.x509.subject.common_name"
        },
        "indicator.x509.subject.country": {
          "$ref": "#/definitions/threat.indicator.x509.subject.country"
        },
        "indicator.x509.subject.distinguished_name": {
          "$ref": "#/definitions/threat.indicator.x509.subject.distinguished_name"
        },
        "indicator.x509.subject.locality": {
          "$ref": "#/definitions/threat.indicator.x509.subject.locality"
        },
        "indicator.x509.subject.organization": {
          "$ref": "#/definitions/threat.indicator.x509.subject.organization"
        },
        "indicator.x509.subject.organizational_unit": {
          "$ref": "#/definitions/threat.indicator.x509.subject.organizational_unit"
        },
        "indicator.x509.subject.state_or_province": {
          "$ref": "#/definitions/threat.indicator.x509.subject.state_or_province"
        },
        "indicator.x509.version_number": {
          "$ref": "#/definitions/threat.indicator.x509.version_number"
        },
        "software.alias": {
          "$ref": "#/definitions/threat.software.alias"
        },
        "software.id": {
          "$ref": "#/definitions/threat.software.id"
        },
        "software.name": {
          "$ref": "#/definitions/threat.software.name"
        },
        "software.platforms": {
          "$ref": "#/definitions/threat.software.platforms"
        },
        "software.reference": {
          "$ref": "#/definitions/threat.software.reference"
        },
        "software.type": {
          "$ref": "#/definitions/threat.software.type"
        },
        "tactic.id": {
          "$ref": "#/definitions/threat.tactic.id"
        },
        "tactic.name": {
          "$ref": "#/definitions/threat.tactic.name"
        },
        "tactic.reference": {
          "$ref": "#/definitions/threat.tactic.reference"
        },
        "technique.id": {
          "$ref": "#/definitions/threat.technique.id"
        },
        "technique.name": {
          "$ref": "#/definitions/threat.technique.name"
        },
        "technique.reference": {
          "$ref": "#/definitions/threat.technique.reference"
        },
        "technique.subtechnique.id": {
          "$ref": "#/definitions/threat.technique.subtechnique.id"
        },
        "technique.subtechnique.name": {
          "$ref": "#/definitions/threat.technique.subtechnique.name"
        },
        "technique.subtechnique.reference": {
          "$ref": "#/definitions/threat.technique.subtechnique.reference"
        }
      }
    },
    "threat.enrichments": {
      "$ref": "#/definitions/threat.enrichments"
    },
    "threat.enrichments.indicator": {
      "$ref": "#/definitions/threat.enrichments.indicator"
    },
    "threat.enrichments.indicator.as.number": {
      "$ref": "#/definitions/threat.enrichments.indicator.as.number"
    },
    "threat.enrichments.indicator.as.organization.name": {
      "$ref": "#/definitions/threat.enrichments.indicator.as.organization.name"
    },
    "threat.enrichments.indicator.confidence": {
      "$ref": "#/definitions/threat.enrichments.indicator.confidence"
    },
    "threat.enrichments.indicator.description": {
      "$ref": "#/definitions/threat.enrichments.indicator.description"
    },
    "threat.enrichments.indicator.email.address": {
      "$ref": "#/definitions/threat.enrichments.indicator.email.address"
    },
    "threat.enrichments.indicator.file.accessed": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.accessed"
    },
    "threat.enrichments.indicator.file.attributes": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.attributes"
    },
    "threat.enrichments.indicator.file.code_signature.digest_algorithm": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.digest_algorithm"
    },
    "threat.enrichments.indicator.file.code_signature.exists": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.exists"
    },
    "threat.enrichments.indicator.file.code_signature.signing_id": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.signing_id"
    },
    "threat.enrichments.indicator.file.code_signature.status": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.status"
    },
    "threat.enrichments.indicator.file.code_signature.subject_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.subject_name"
    },
    "threat.enrichments.indicator.file.code_signature.team_id": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.team_id"
    },
    "threat.enrichments.indicator.file.code_signature.timestamp": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.timestamp"
    },
    "threat.enrichments.indicator.file.code_signature.trusted": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.trusted"
    },
    "threat.enrichments.indicator.file.code_signature.valid": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.code_signature.valid"
    },
    "threat.enrichments.indicator.file.created": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.created"
    },
    "threat.enrichments.indicator.file.ctime": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.ctime"
    },
    "threat.enrichments.indicator.file.device": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.device"
    },
    "threat.enrichments.indicator.file.directory": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.directory"
    },
    "threat.enrichments.indicator.file.drive_letter": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.drive_letter"
    },
    "threat.enrichments.indicator.file.elf.architecture": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.architecture"
    },
    "threat.enrichments.indicator.file.elf.byte_order": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.byte_order"
    },
    "threat.enrichments.indicator.file.elf.cpu_type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.cpu_type"
    },
    "threat.enrichments.indicator.file.elf.creation_date": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.creation_date"
    },
    "threat.enrichments.indicator.file.elf.exports": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.exports"
    },
    "threat.enrichments.indicator.file.elf.header.abi_version": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.abi_version"
    },
    "threat.enrichments.indicator.file.elf.header.class": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.class"
    },
    "threat.enrichments.indicator.file.elf.header.data": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.data"
    },
    "threat.enrichments.indicator.file.elf.header.entrypoint": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.entrypoint"
    },
    "threat.enrichments.indicator.file.elf.header.object_version": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.object_version"
    },
    "threat.enrichments.indicator.file.elf.header.os_abi": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.os_abi"
    },
    "threat.enrichments.indicator.file.elf.header.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.type"
    },
    "threat.enrichments.indicator.file.elf.header.version": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.header.version"
    },
    "threat.enrichments.indicator.file.elf.imports": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.imports"
    },
    "threat.enrichments.indicator.file.elf.sections": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections"
    },
    "threat.enrichments.indicator.file.elf.sections.chi2": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.chi2"
    },
    "threat.enrichments.indicator.file.elf.sections.entropy": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.entropy"
    },
    "threat.enrichments.indicator.file.elf.sections.flags": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.flags"
    },
    "threat.enrichments.indicator.file.elf.sections.name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.name"
    },
    "threat.enrichments.indicator.file.elf.sections.physical_offset": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.physical_offset"
    },
    "threat.enrichments.indicator.file.elf.sections.physical_size": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.physical_size"
    },
    "threat.enrichments.indicator.file.elf.sections.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.type"
    },
    "threat.enrichments.indicator.file.elf.sections.virtual_address": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.virtual_address"
    },
    "threat.enrichments.indicator.file.elf.sections.virtual_size": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.sections.virtual_size"
    },
    "threat.enrichments.indicator.file.elf.segments": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments"
    },
    "threat.enrichments.indicator.file.elf.segments.sections": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments.sections"
    },
    "threat.enrichments.indicator.file.elf.segments.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.segments.type"
    },
    "threat.enrichments.indicator.file.elf.shared_libraries": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.shared_libraries"
    },
    "threat.enrichments.indicator.file.elf.telfhash": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.elf.telfhash"
    },
    "threat.enrichments.indicator.file.extension": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.extension"
    },
    "threat.enrichments.indicator.file.fork_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.fork_name"
    },
    "threat.enrichments.indicator.file.gid": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.gid"
    },
    "threat.enrichments.indicator.file.group": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.group"
    },
    "threat.enrichments.indicator.file.hash.md5": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.hash.md5"
    },
    "threat.enrichments.indicator.file.hash.sha1": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha1"
    },
    "threat.enrichments.indicator.file.hash.sha256": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha256"
    },
    "threat.enrichments.indicator.file.hash.sha512": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.hash.sha512"
    },
    "threat.enrichments.indicator.file.hash.ssdeep": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.hash.ssdeep"
    },
    "threat.enrichments.indicator.file.inode": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.inode"
    },
    "threat.enrichments.indicator.file.mime_type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.mime_type"
    },
    "threat.enrichments.indicator.file.mode": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.mode"
    },
    "threat.enrichments.indicator.file.mtime": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.mtime"
    },
    "threat.enrichments.indicator.file.name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.name"
    },
    "threat.enrichments.indicator.file.owner": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.owner"
    },
    "threat.enrichments.indicator.file.path": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.path"
    },
    "threat.enrichments.indicator.file.pe.architecture": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.architecture"
    },
    "threat.enrichments.indicator.file.pe.company": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.company"
    },
    "threat.enrichments.indicator.file.pe.description": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.description"
    },
    "threat.enrichments.indicator.file.pe.file_version": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.file_version"
    },
    "threat.enrichments.indicator.file.pe.imphash": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.imphash"
    },
    "threat.enrichments.indicator.file.pe.original_file_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.original_file_name"
    },
    "threat.enrichments.indicator.file.pe.product": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.pe.product"
    },
    "threat.enrichments.indicator.file.size": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.size"
    },
    "threat.enrichments.indicator.file.target_path": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.target_path"
    },
    "threat.enrichments.indicator.file.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.type"
    },
    "threat.enrichments.indicator.file.uid": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.uid"
    },
    "threat.enrichments.indicator.file.x509.alternative_names": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.alternative_names"
    },
    "threat.enrichments.indicator.file.x509.issuer.common_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.common_name"
    },
    "threat.enrichments.indicator.file.x509.issuer.country": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.country"
    },
    "threat.enrichments.indicator.file.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.distinguished_name"
    },
    "threat.enrichments.indicator.file.x509.issuer.locality": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.locality"
    },
    "threat.enrichments.indicator.file.x509.issuer.organization": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.organization"
    },
    "threat.enrichments.indicator.file.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.organizational_unit"
    },
    "threat.enrichments.indicator.file.x509.issuer.state_or_province": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.issuer.state_or_province"
    },
    "threat.enrichments.indicator.file.x509.not_after": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.not_after"
    },
    "threat.enrichments.indicator.file.x509.not_before": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.not_before"
    },
    "threat.enrichments.indicator.file.x509.public_key_algorithm": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_algorithm"
    },
    "threat.enrichments.indicator.file.x509.public_key_curve": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_curve"
    },
    "threat.enrichments.indicator.file.x509.public_key_exponent": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_exponent"
    },
    "threat.enrichments.indicator.file.x509.public_key_size": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.public_key_size"
    },
    "threat.enrichments.indicator.file.x509.serial_number": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.serial_number"
    },
    "threat.enrichments.indicator.file.x509.signature_algorithm": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.signature_algorithm"
    },
    "threat.enrichments.indicator.file.x509.subject.common_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.common_name"
    },
    "threat.enrichments.indicator.file.x509.subject.country": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.country"
    },
    "threat.enrichments.indicator.file.x509.subject.distinguished_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.distinguished_name"
    },
    "threat.enrichments.indicator.file.x509.subject.locality": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.locality"
    },
    "threat.enrichments.indicator.file.x509.subject.organization": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.organization"
    },
    "threat.enrichments.indicator.file.x509.subject.organizational_unit": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.organizational_unit"
    },
    "threat.enrichments.indicator.file.x509.subject.state_or_province": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.subject.state_or_province"
    },
    "threat.enrichments.indicator.file.x509.version_number": {
      "$ref": "#/definitions/threat.enrichments.indicator.file.x509.version_number"
    },
    "threat.enrichments.indicator.first_seen": {
      "$ref": "#/definitions/threat.enrichments.indicator.first_seen"
    },
    "threat.enrichments.indicator.geo.city_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.city_name"
    },
    "threat.enrichments.indicator.geo.continent_code": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.continent_code"
    },
    "threat.enrichments.indicator.geo.continent_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.continent_name"
    },
    "threat.enrichments.indicator.geo.country_iso_code": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.country_iso_code"
    },
    "threat.enrichments.indicator.geo.country_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.country_name"
    },
    "threat.enrichments.indicator.geo.location": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.location"
    },
    "threat.enrichments.indicator.geo.name": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.name"
    },
    "threat.enrichments.indicator.geo.postal_code": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.postal_code"
    },
    "threat.enrichments.indicator.geo.region_iso_code": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.region_iso_code"
    },
    "threat.enrichments.indicator.geo.region_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.region_name"
    },
    "threat.enrichments.indicator.geo.timezone": {
      "$ref": "#/definitions/threat.enrichments.indicator.geo.timezone"
    },
    "threat.enrichments.indicator.ip": {
      "$ref": "#/definitions/threat.enrichments.indicator.ip"
    },
    "threat.enrichments.indicator.last_seen": {
      "$ref": "#/definitions/threat.enrichments.indicator.last_seen"
    },
    "threat.enrichments.indicator.marking.tlp": {
      "$ref": "#/definitions/threat.enrichments.indicator.marking.tlp"
    },
    "threat.enrichments.indicator.modified_at": {
      "$ref": "#/definitions/threat.enrichments.indicator.modified_at"
    },
    "threat.enrichments.indicator.port": {
      "$ref": "#/definitions/threat.enrichments.indicator.port"
    },
    "threat.enrichments.indicator.provider": {
      "$ref": "#/definitions/threat.enrichments.indicator.provider"
    },
    "threat.enrichments.indicator.reference": {
      "$ref": "#/definitions/threat.enrichments.indicator.reference"
    },
    "threat.enrichments.indicator.registry.data.bytes": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.data.bytes"
    },
    "threat.enrichments.indicator.registry.data.strings": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.data.strings"
    },
    "threat.enrichments.indicator.registry.data.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.data.type"
    },
    "threat.enrichments.indicator.registry.hive": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.hive"
    },
    "threat.enrichments.indicator.registry.key": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.key"
    },
    "threat.enrichments.indicator.registry.path": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.path"
    },
    "threat.enrichments.indicator.registry.value": {
      "$ref": "#/definitions/threat.enrichments.indicator.registry.value"
    },
    "threat.enrichments.indicator.scanner_stats": {
      "$ref": "#/definitions/threat.enrichments.indicator.scanner_stats"
    },
    "threat.enrichments.indicator.sightings": {
      "$ref": "#/definitions/threat.enrichments.indicator.sightings"
    },
    "threat.enrichments.indicator.type": {
      "$ref": "#/definitions/threat.enrichments.indicator.type"
    },
    "threat.enrichments.indicator.url.domain": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.domain"
    },
    "threat.enrichments.indicator.url.extension": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.extension"
    },
    "threat.enrichments.indicator.url.fragment": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.fragment"
    },
    "threat.enrichments.indicator.url.full": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.full"
    },
    "threat.enrichments.indicator.url.original": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.original"
    },
    "threat.enrichments.indicator.url.password": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.password"
    },
    "threat.enrichments.indicator.url.path": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.path"
    },
    "threat.enrichments.indicator.url.port": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.port"
    },
    "threat.enrichments.indicator.url.query": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.query"
    },
    "threat.enrichments.indicator.url.registered_domain": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.registered_domain"
    },
    "threat.enrichments.indicator.url.scheme": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.scheme"
    },
    "threat.enrichments.indicator.url.subdomain": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.subdomain"
    },
    "threat.enrichments.indicator.url.top_level_domain": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.top_level_domain"
    },
    "threat.enrichments.indicator.url.username": {
      "$ref": "#/definitions/threat.enrichments.indicator.url.username"
    },
    "threat.enrichments.indicator.x509.alternative_names": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.alternative_names"
    },
    "threat.enrichments.indicator.x509.issuer.common_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.common_name"
    },
    "threat.enrichments.indicator.x509.issuer.country": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.country"
    },
    "threat.enrichments.indicator.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.distinguished_name"
    },
    "threat.enrichments.indicator.x509.issuer.locality": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.locality"
    },
    "threat.enrichments.indicator.x509.issuer.organization": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.organization"
    },
    "threat.enrichments.indicator.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.organizational_unit"
    },
    "threat.enrichments.indicator.x509.issuer.state_or_province": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.issuer.state_or_province"
    },
    "threat.enrichments.indicator.x509.not_after": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.not_after"
    },
    "threat.enrichments.indicator.x509.not_before": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.not_before"
    },
    "threat.enrichments.indicator.x509.public_key_algorithm": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_algorithm"
    },
    "threat.enrichments.indicator.x509.public_key_curve": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_curve"
    },
    "threat.enrichments.indicator.x509.public_key_exponent": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_exponent"
    },
    "threat.enrichments.indicator.x509.public_key_size": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.public_key_size"
    },
    "threat.enrichments.indicator.x509.serial_number": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.serial_number"
    },
    "threat.enrichments.indicator.x509.signature_algorithm": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.signature_algorithm"
    },
    "threat.enrichments.indicator.x509.subject.common_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.common_name"
    },
    "threat.enrichments.indicator.x509.subject.country": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.country"
    },
    "threat.enrichments.indicator.x509.subject.distinguished_name": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.distinguished_name"
    },
    "threat.enrichments.indicator.x509.subject.locality": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.locality"
    },
    "threat.enrichments.indicator.x509.subject.organization": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.organization"
    },
    "threat.enrichments.indicator.x509.subject.organizational_unit": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.organizational_unit"
    },
    "threat.enrichments.indicator.x509.subject.state_or_province": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.subject.state_or_province"
    },
    "threat.enrichments.indicator.x509.version_number": {
      "$ref": "#/definitions/threat.enrichments.indicator.x509.version_number"
    },
    "threat.enrichments.matched.atomic": {
      "$ref": "#/definitions/threat.enrichments.matched.atomic"
    },
    "threat.enrichments.matched.field": {
      "$ref": "#/definitions/threat.enrichments.matched.field"
    },
    "threat.enrichments.matched.id": {
      "$ref": "#/definitions/threat.enrichments.matched.id"
    },
    "threat.enrichments.matched.index": {
      "$ref": "#/definitions/threat.enrichments.matched.index"
    },
    "threat.enrichments.matched.type": {
      "$ref": "#/definitions/threat.enrichments.matched.type"
    },
    "threat.framework": {
      "$ref": "#/definitions/threat.framework"
    },
    "threat.group.alias": {
      "$ref": "#/definitions/threat.group.alias"
    },
    "threat.group.id": {
      "$ref": "#/definitions/threat.group.id"
    },
    "threat.group.name": {
      "$ref": "#/definitions/threat.group.name"
    },
    "threat.group.reference": {
      "$ref": "#/definitions/threat.group.reference"
    },
    "threat.indicator.as.number": {
      "$ref": "#/definitions/threat.indicator.as.number"
    },
    "threat.indicator.as.organization.name": {
      "$ref": "#/definitions/threat.indicator.as.organization.name"
    },
    "threat.indicator.confidence": {
      "$ref": "#/definitions/threat.indicator.confidence"
    },
    "threat.indicator.description": {
      "$ref": "#/definitions/threat.indicator.description"
    },
    "threat.indicator.email.address": {
      "$ref": "#/definitions/threat.indicator.email.address"
    },
    "threat.indicator.file.accessed": {
      "$ref": "#/definitions/threat.indicator.file.accessed"
    },
    "threat.indicator.file.attributes": {
      "$ref": "#/definitions/threat.indicator.file.attributes"
    },
    "threat.indicator.file.code_signature.digest_algorithm": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.digest_algorithm"
    },
    "threat.indicator.file.code_signature.exists": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.exists"
    },
    "threat.indicator.file.code_signature.signing_id": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.signing_id"
    },
    "threat.indicator.file.code_signature.status": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.status"
    },
    "threat.indicator.file.code_signature.subject_name": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.subject_name"
    },
    "threat.indicator.file.code_signature.team_id": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.team_id"
    },
    "threat.indicator.file.code_signature.timestamp": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.timestamp"
    },
    "threat.indicator.file.code_signature.trusted": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.trusted"
    },
    "threat.indicator.file.code_signature.valid": {
      "$ref": "#/definitions/threat.indicator.file.code_signature.valid"
    },
    "threat.indicator.file.created": {
      "$ref": "#/definitions/threat.indicator.file.created"
    },
    "threat.indicator.file.ctime": {
      "$ref": "#/definitions/threat.indicator.file.ctime"
    },
    "threat.indicator.file.device": {
      "$ref": "#/definitions/threat.indicator.file.device"
    },
    "threat.indicator.file.directory": {
      "$ref": "#/definitions/threat.indicator.file.directory"
    },
    "threat.indicator.file.drive_letter": {
      "$ref": "#/definitions/threat.indicator.file.drive_letter"
    },
    "threat.indicator.file.elf.architecture": {
      "$ref": "#/definitions/threat.indicator.file.elf.architecture"
    },
    "threat.indicator.file.elf.byte_order": {
      "$ref": "#/definitions/threat.indicator.file.elf.byte_order"
    },
    "threat.indicator.file.elf.cpu_type": {
      "$ref": "#/definitions/threat.indicator.file.elf.cpu_type"
    },
    "threat.indicator.file.elf.creation_date": {
      "$ref": "#/definitions/threat.indicator.file.elf.creation_date"
    },
    "threat.indicator.file.elf.exports": {
      "$ref": "#/definitions/threat.indicator.file.elf.exports"
    },
    "threat.indicator.file.elf.header.abi_version": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.abi_version"
    },
    "threat.indicator.file.elf.header.class": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.class"
    },
    "threat.indicator.file.elf.header.data": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.data"
    },
    "threat.indicator.file.elf.header.entrypoint": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.entrypoint"
    },
    "threat.indicator.file.elf.header.object_version": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.object_version"
    },
    "threat.indicator.file.elf.header.os_abi": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.os_abi"
    },
    "threat.indicator.file.elf.header.type": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.type"
    },
    "threat.indicator.file.elf.header.version": {
      "$ref": "#/definitions/threat.indicator.file.elf.header.version"
    },
    "threat.indicator.file.elf.imports": {
      "$ref": "#/definitions/threat.indicator.file.elf.imports"
    },
    "threat.indicator.file.elf.sections": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections"
    },
    "threat.indicator.file.elf.sections.chi2": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.chi2"
    },
    "threat.indicator.file.elf.sections.entropy": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.entropy"
    },
    "threat.indicator.file.elf.sections.flags": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.flags"
    },
    "threat.indicator.file.elf.sections.name": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.name"
    },
    "threat.indicator.file.elf.sections.physical_offset": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.physical_offset"
    },
    "threat.indicator.file.elf.sections.physical_size": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.physical_size"
    },
    "threat.indicator.file.elf.sections.type": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.type"
    },
    "threat.indicator.file.elf.sections.virtual_address": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.virtual_address"
    },
    "threat.indicator.file.elf.sections.virtual_size": {
      "$ref": "#/definitions/threat.indicator.file.elf.sections.virtual_size"
    },
    "threat.indicator.file.elf.segments": {
      "$ref": "#/definitions/threat.indicator.file.elf.segments"
    },
    "threat.indicator.file.elf.segments.sections": {
      "$ref": "#/definitions/threat.indicator.file.elf.segments.sections"
    },
    "threat.indicator.file.elf.segments.type": {
      "$ref": "#/definitions/threat.indicator.file.elf.segments.type"
    },
    "threat.indicator.file.elf.shared_libraries": {
      "$ref": "#/definitions/threat.indicator.file.elf.shared_libraries"
    },
    "threat.indicator.file.elf.telfhash": {
      "$ref": "#/definitions/threat.indicator.file.elf.telfhash"
    },
    "threat.indicator.file.extension": {
      "$ref": "#/definitions/threat.indicator.file.extension"
    },
    "threat.indicator.file.fork_name": {
      "$ref": "#/definitions/threat.indicator.file.fork_name"
    },
    "threat.indicator.file.gid": {
      "$ref": "#/definitions/threat.indicator.file.gid"
    },
    "threat.indicator.file.group": {
      "$ref": "#/definitions/threat.indicator.file.group"
    },
    "threat.indicator.file.hash.md5": {
      "$ref": "#/definitions/threat.indicator.file.hash.md5"
    },
    "threat.indicator.file.hash.sha1": {
      "$ref": "#/definitions/threat.indicator.file.hash.sha1"
    },
    "threat.indicator.file.hash.sha256": {
      "$ref": "#/definitions/threat.indicator.file.hash.sha256"
    },
    "threat.indicator.file.hash.sha512": {
      "$ref": "#/definitions/threat.indicator.file.hash.sha512"
    },
    "threat.indicator.file.hash.ssdeep": {
      "$ref": "#/definitions/threat.indicator.file.hash.ssdeep"
    },
    "threat.indicator.file.inode": {
      "$ref": "#/definitions/threat.indicator.file.inode"
    },
    "threat.indicator.file.mime_type": {
      "$ref": "#/definitions/threat.indicator.file.mime_type"
    },
    "threat.indicator.file.mode": {
      "$ref": "#/definitions/threat.indicator.file.mode"
    },
    "threat.indicator.file.mtime": {
      "$ref": "#/definitions/threat.indicator.file.mtime"
    },
    "threat.indicator.file.name": {
      "$ref": "#/definitions/threat.indicator.file.name"
    },
    "threat.indicator.file.owner": {
      "$ref": "#/definitions/threat.indicator.file.owner"
    },
    "threat.indicator.file.path": {
      "$ref": "#/definitions/threat.indicator.file.path"
    },
    "threat.indicator.file.pe.architecture": {
      "$ref": "#/definitions/threat.indicator.file.pe.architecture"
    },
    "threat.indicator.file.pe.company": {
      "$ref": "#/definitions/threat.indicator.file.pe.company"
    },
    "threat.indicator.file.pe.description": {
      "$ref": "#/definitions/threat.indicator.file.pe.description"
    },
    "threat.indicator.file.pe.file_version": {
      "$ref": "#/definitions/threat.indicator.file.pe.file_version"
    },
    "threat.indicator.file.pe.imphash": {
      "$ref": "#/definitions/threat.indicator.file.pe.imphash"
    },
    "threat.indicator.file.pe.original_file_name": {
      "$ref": "#/definitions/threat.indicator.file.pe.original_file_name"
    },
    "threat.indicator.file.pe.product": {
      "$ref": "#/definitions/threat.indicator.file.pe.product"
    },
    "threat.indicator.file.size": {
      "$ref": "#/definitions/threat.indicator.file.size"
    },
    "threat.indicator.file.target_path": {
      "$ref": "#/definitions/threat.indicator.file.target_path"
    },
    "threat.indicator.file.type": {
      "$ref": "#/definitions/threat.indicator.file.type"
    },
    "threat.indicator.file.uid": {
      "$ref": "#/definitions/threat.indicator.file.uid"
    },
    "threat.indicator.file.x509.alternative_names": {
      "$ref": "#/definitions/threat.indicator.file.x509.alternative_names"
    },
    "threat.indicator.file.x509.issuer.common_name": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.common_name"
    },
    "threat.indicator.file.x509.issuer.country": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.country"
    },
    "threat.indicator.file.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.distinguished_name"
    },
    "threat.indicator.file.x509.issuer.locality": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.locality"
    },
    "threat.indicator.file.x509.issuer.organization": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.organization"
    },
    "threat.indicator.file.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.organizational_unit"
    },
    "threat.indicator.file.x509.issuer.state_or_province": {
      "$ref": "#/definitions/threat.indicator.file.x509.issuer.state_or_province"
    },
    "threat.indicator.file.x509.not_after": {
      "$ref": "#/definitions/threat.indicator.file.x509.not_after"
    },
    "threat.indicator.file.x509.not_before": {
      "$ref": "#/definitions/threat.indicator.file.x509.not_before"
    },
    "threat.indicator.file.x509.public_key_algorithm": {
      "$ref": "#/definitions/threat.indicator.file.x509.public_key_algorithm"
    },
    "threat.indicator.file.x509.public_key_curve": {
      "$ref": "#/definitions/threat.indicator.file.x509.public_key_curve"
    },
    "threat.indicator.file.x509.public_key_exponent": {
      "$ref": "#/definitions/threat.indicator.file.x509.public_key_exponent"
    },
    "threat.indicator.file.x509.public_key_size": {
      "$ref": "#/definitions/threat.indicator.file.x509.public_key_size"
    },
    "threat.indicator.file.x509.serial_number": {
      "$ref": "#/definitions/threat.indicator.file.x509.serial_number"
    },
    "threat.indicator.file.x509.signature_algorithm": {
      "$ref": "#/definitions/threat.indicator.file.x509.signature_algorithm"
    },
    "threat.indicator.file.x509.subject.common_name": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.common_name"
    },
    "threat.indicator.file.x509.subject.country": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.country"
    },
    "threat.indicator.file.x509.subject.distinguished_name": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.distinguished_name"
    },
    "threat.indicator.file.x509.subject.locality": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.locality"
    },
    "threat.indicator.file.x509.subject.organization": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.organization"
    },
    "threat.indicator.file.x509.subject.organizational_unit": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.organizational_unit"
    },
    "threat.indicator.file.x509.subject.state_or_province": {
      "$ref": "#/definitions/threat.indicator.file.x509.subject.state_or_province"
    },
    "threat.indicator.file.x509.version_number": {
      "$ref": "#/definitions/threat.indicator.file.x509.version_number"
    },
    "threat.indicator.first_seen": {
      "$ref": "#/definitions/threat.indicator.first_seen"
    },
    "threat.indicator.geo.city_name": {
      "$ref": "#/definitions/threat.indicator.geo.city_name"
    },
    "threat.indicator.geo.continent_code": {
      "$ref": "#/definitions/threat.indicator.geo.continent_code"
    },
    "threat.indicator.geo.continent_name": {
      "$ref": "#/definitions/threat.indicator.geo.continent_name"
    },
    "threat.indicator.geo.country_iso_code": {
      "$ref": "#/definitions/threat.indicator.geo.country_iso_code"
    },
    "threat.indicator.geo.country_name": {
      "$ref": "#/definitions/threat.indicator.geo.country_name"
    },
    "threat.indicator.geo.location": {
      "$ref": "#/definitions/threat.indicator.geo.location"
    },
    "threat.indicator.geo.name": {
      "$ref": "#/definitions/threat.indicator.geo.name"
    },
    "threat.indicator.geo.postal_code": {
      "$ref": "#/definitions/threat.indicator.geo.postal_code"
    },
    "threat.indicator.geo.region_iso_code": {
      "$ref": "#/definitions/threat.indicator.geo.region_iso_code"
    },
    "threat.indicator.geo.region_name": {
      "$ref": "#/definitions/threat.indicator.geo.region_name"
    },
    "threat.indicator.geo.timezone": {
      "$ref": "#/definitions/threat.indicator.geo.timezone"
    },
    "threat.indicator.ip": {
      "$ref": "#/definitions/threat.indicator.ip"
    },
    "threat.indicator.last_seen": {
      "$ref": "#/definitions/threat.indicator.last_seen"
    },
    "threat.indicator.marking.tlp": {
      "$ref": "#/definitions/threat.indicator.marking.tlp"
    },
    "threat.indicator.modified_at": {
      "$ref": "#/definitions/threat.indicator.modified_at"
    },
    "threat.indicator.port": {
      "$ref": "#/definitions/threat.indicator.port"
    },
    "threat.indicator.provider": {
      "$ref": "#/definitions/threat.indicator.provider"
    },
    "threat.indicator.reference": {
      "$ref": "#/definitions/threat.indicator.reference"
    },
    "threat.indicator.registry.data.bytes": {
      "$ref": "#/definitions/threat.indicator.registry.data.bytes"
    },
    "threat.indicator.registry.data.strings": {
      "$ref": "#/definitions/threat.indicator.registry.data.strings"
    },
    "threat.indicator.registry.data.type": {
      "$ref": "#/definitions/threat.indicator.registry.data.type"
    },
    "threat.indicator.registry.hive": {
      "$ref": "#/definitions/threat.indicator.registry.hive"
    },
    "threat.indicator.registry.key": {
      "$ref": "#/definitions/threat.indicator.registry.key"
    },
    "threat.indicator.registry.path": {
      "$ref": "#/definitions/threat.indicator.registry.path"
    },
    "threat.indicator.registry.value": {
      "$ref": "#/definitions/threat.indicator.registry.value"
    },
    "threat.indicator.scanner_stats": {
      "$ref": "#/definitions/threat.indicator.scanner_stats"
    },
    "threat.indicator.sightings": {
      "$ref": "#/definitions/threat.indicator.sightings"
    },
    "threat.indicator.type": {
      "$ref": "#/definitions/threat.indicator.type"
    },
    "threat.indicator.url.domain": {
      "$ref": "#/definitions/threat.indicator.url.domain"
    },
    "threat.indicator.url.extension": {
      "$ref": "#/definitions/threat.indicator.url.extension"
    },
    "threat.indicator.url.fragment": {
      "$ref": "#/definitions/threat.indicator.url.fragment"
    },
    "threat.indicator.url.full": {
      "$ref": "#/definitions/threat.indicator.url.full"
    },
    "threat.indicator.url.original": {
      "$ref": "#/definitions/threat.indicator.url.original"
    },
    "threat.indicator.url.password": {
      "$ref": "#/definitions/threat.indicator.url.password"
    },
    "threat.indicator.url.path": {
      "$ref": "#/definitions/threat.indicator.url.path"
    },
    "threat.indicator.url.port": {
      "$ref": "#/definitions/threat.indicator.url.port"
    },
    "threat.indicator.url.query": {
      "$ref": "#/definitions/threat.indicator.url.query"
    },
    "threat.indicator.url.registered_domain": {
      "$ref": "#/definitions/threat.indicator.url.registered_domain"
    },
    "threat.indicator.url.scheme": {
      "$ref": "#/definitions/threat.indicator.url.scheme"
    },
    "threat.indicator.url.subdomain": {
      "$ref": "#/definitions/threat.indicator.url.subdomain"
    },
    "threat.indicator.url.top_level_domain": {
      "$ref": "#/definitions/threat.indicator.url.top_level_domain"
    },
    "threat.indicator.url.username": {
      "$ref": "#/definitions/threat.indicator.url.username"
    },
    "threat.indicator.x509.alternative_names": {
      "$ref": "#/definitions/threat.indicator.x509.alternative_names"
    },
    "threat.indicator.x509.issuer.common_name": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.common_name"
    },
    "threat.indicator.x509.issuer.country": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.country"
    },
    "threat.indicator.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.distinguished_name"
    },
    "threat.indicator.x509.issuer.locality": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.locality"
    },
    "threat.indicator.x509.issuer.organization": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.organization"
    },
    "threat.indicator.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.organizational_unit"
    },
    "threat.indicator.x509.issuer.state_or_province": {
      "$ref": "#/definitions/threat.indicator.x509.issuer.state_or_province"
    },
    "threat.indicator.x509.not_after": {
      "$ref": "#/definitions/threat.indicator.x509.not_after"
    },
    "threat.indicator.x509.not_before": {
      "$ref": "#/definitions/threat.indicator.x509.not_before"
    },
    "threat.indicator.x509.public_key_algorithm": {
      "$ref": "#/definitions/threat.indicator.x509.public_key_algorithm"
    },
    "threat.indicator.x509.public_key_curve": {
      "$ref": "#/definitions/threat.indicator.x509.public_key_curve"
    },
    "threat.indicator.x509.public_key_exponent": {
      "$ref": "#/definitions/threat.indicator.x509.public_key_exponent"
    },
    "threat.indicator.x509.public_key_size": {
      "$ref": "#/definitions/threat.indicator.x509.public_key_size"
    },
    "threat.indicator.x509.serial_number": {
      "$ref": "#/definitions/threat.indicator.x509.serial_number"
    },
    "threat.indicator.x509.signature_algorithm": {
      "$ref": "#/definitions/threat.indicator.x509.signature_algorithm"
    },
    "threat.indicator.x509.subject.common_name": {
      "$ref": "#/definitions/threat.indicator.x509.subject.common_name"
    },
    "threat.indicator.x509.subject.country": {
      "$ref": "#/definitions/threat.indicator.x509.subject.country"
    },
    "threat.indicator.x509.subject.distinguished_name": {
      "$ref": "#/definitions/threat.indicator.x509.subject.distinguished_name"
    },
    "threat.indicator.x509.subject.locality": {
      "$ref": "#/definitions/threat.indicator.x509.subject.locality"
    },
    "threat.indicator.x509.subject.organization": {
      "$ref": "#/definitions/threat.indicator.x509.subject.organization"
    },
    "threat.indicator.x509.subject.organizational_unit": {
      "$ref": "#/definitions/threat.indicator.x509.subject.organizational_unit"
    },
    "threat.indicator.x509.subject.state_or_province": {
      "$ref": "#/definitions/threat.indicator.x509.subject.state_or_province"
    },
    "threat.indicator.x509.version_number": {
      "$ref": "#/definitions/threat.indicator.x509.version_number"
    },
    "threat.software.alias": {
      "$ref": "#/definitions/threat.software.alias"
    },
    "threat.software.id": {
      "$ref": "#/definitions/threat.software.id"
    },
    "threat.software.name": {
      "$ref": "#/definitions/threat.software.name"
    },
    "threat.software.platforms": {
      "$ref": "#/definitions/threat.software.platforms"
    },
    "threat.software.reference": {
      "$ref": "#/definitions/threat.software.reference"
    },
    "threat.software.type": {
      "$ref": "#/definitions/threat.software.type"
    },
    "threat.tactic.id": {
      "$ref": "#/definitions/threat.tactic.id"
    },
    "threat.tactic.name": {
      "$ref": "#/definitions/threat.tactic.name"
    },
    "threat.tactic.reference": {
      "$ref": "#/definitions/threat.tactic.reference"
    },
    "threat.technique.id": {
      "$ref": "#/definitions/threat.technique.id"
    },
    "threat.technique.name": {
      "$ref": "#/definitions/threat.technique.name"
    },
    "threat.technique.reference": {
      "$ref": "#/definitions/threat.technique.reference"
    },
    "threat.technique.subtechnique.id": {
      "$ref": "#/definitions/threat.technique.subtechnique.id"
    },
    "threat.technique.subtechnique.name": {
      "$ref": "#/definitions/threat.technique.subtechnique.name"
    },
    "threat.technique.subtechnique.reference": {
      "$ref": "#/definitions/threat.technique.subtechnique.reference"
    },
    "timeseries.instance": {
      "$ref": "#/definitions/timeseries.instance"
    },
    "tls": {
      "description": "Fields related to a TLS connection. These fields focus on the TLS protocol itself and intentionally avoids in-depth analysis of the related x.509 certificate files.",
      "type": [
        "object"
      ],
      "properties": {
        "cipher": {
          "$ref": "#/definitions/tls.cipher"
        },
        "client.certificate": {
          "$ref": "#/definitions/tls.client.certificate"
        },
        "client.certificate_chain": {
          "$ref": "#/definitions/tls.client.certificate_chain"
        },
        "client.hash.md5": {
          "$ref": "#/definitions/tls.client.hash.md5"
        },
        "client.hash.sha1": {
          "$ref": "#/definitions/tls.client.hash.sha1"
        },
        "client.hash.sha256": {
          "$ref": "#/definitions/tls.client.hash.sha256"
        },
        "client.issuer": {
          "$ref": "#/definitions/tls.client.issuer"
        },
        "client.ja3": {
          "$ref": "#/definitions/tls.client.ja3"
        },
        "client.not_after": {
          "$ref": "#/definitions/tls.client.not_after"
        },
        "client.not_before": {
          "$ref": "#/definitions/tls.client.not_before"
        },
        "client.server_name": {
          "$ref": "#/definitions/tls.client.server_name"
        },
        "client.subject": {
          "$ref": "#/definitions/tls.client.subject"
        },
        "client.supported_ciphers": {
          "$ref": "#/definitions/tls.client.supported_ciphers"
        },
        "client.x509.alternative_names": {
          "$ref": "#/definitions/tls.client.x509.alternative_names"
        },
        "client.x509.issuer.common_name": {
          "$ref": "#/definitions/tls.client.x509.issuer.common_name"
        },
        "client.x509.issuer.country": {
          "$ref": "#/definitions/tls.client.x509.issuer.country"
        },
        "client.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/tls.client.x509.issuer.distinguished_name"
        },
        "client.x509.issuer.locality": {
          "$ref": "#/definitions/tls.client.x509.issuer.locality"
        },
        "client.x509.issuer.organization": {
          "$ref": "#/definitions/tls.client.x509.issuer.organization"
        },
        "client.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/tls.client.x509.issuer.organizational_unit"
        },
        "client.x509.issuer.state_or_province": {
          "$ref": "#/definitions/tls.client.x509.issuer.state_or_province"
        },
        "client.x509.not_after": {
          "$ref": "#/definitions/tls.client.x509.not_after"
        },
        "client.x509.not_before": {
          "$ref": "#/definitions/tls.client.x509.not_before"
        },
        "client.x509.public_key_algorithm": {
          "$ref": "#/definitions/tls.client.x509.public_key_algorithm"
        },
        "client.x509.public_key_curve": {
          "$ref": "#/definitions/tls.client.x509.public_key_curve"
        },
        "client.x509.public_key_exponent": {
          "$ref": "#/definitions/tls.client.x509.public_key_exponent"
        },
        "client.x509.public_key_size": {
          "$ref": "#/definitions/tls.client.x509.public_key_size"
        },
        "client.x509.serial_number": {
          "$ref": "#/definitions/tls.client.x509.serial_number"
        },
        "client.x509.signature_algorithm": {
          "$ref": "#/definitions/tls.client.x509.signature_algorithm"
        },
        "client.x509.subject.common_name": {
          "$ref": "#/definitions/tls.client.x509.subject.common_name"
        },
        "client.x509.subject.country": {
          "$ref": "#/definitions/tls.client.x509.subject.country"
        },
        "client.x509.subject.distinguished_name": {
          "$ref": "#/definitions/tls.client.x509.subject.distinguished_name"
        },
        "client.x509.subject.locality": {
          "$ref": "#/definitions/tls.client.x509.subject.locality"
        },
        "client.x509.subject.organization": {
          "$ref": "#/definitions/tls.client.x509.subject.organization"
        },
        "client.x509.subject.organizational_unit": {
          "$ref": "#/definitions/tls.client.x509.subject.organizational_unit"
        },
        "client.x509.subject.state_or_province": {
          "$ref": "#/definitions/tls.client.x509.subject.state_or_province"
        },
        "client.x509.version_number": {
          "$ref": "#/definitions/tls.client.x509.version_number"
        },
        "curve": {
          "$ref": "#/definitions/tls.curve"
        },
        "established": {
          "$ref": "#/definitions/tls.established"
        },
        "next_protocol": {
          "$ref": "#/definitions/tls.next_protocol"
        },
        "resumed": {
          "$ref": "#/definitions/tls.resumed"
        },
        "server.certificate": {
          "$ref": "#/definitions/tls.server.certificate"
        },
        "server.certificate_chain": {
          "$ref": "#/definitions/tls.server.certificate_chain"
        },
        "server.hash.md5": {
          "$ref": "#/definitions/tls.server.hash.md5"
        },
        "server.hash.sha1": {
          "$ref": "#/definitions/tls.server.hash.sha1"
        },
        "server.hash.sha256": {
          "$ref": "#/definitions/tls.server.hash.sha256"
        },
        "server.issuer": {
          "$ref": "#/definitions/tls.server.issuer"
        },
        "server.ja3s": {
          "$ref": "#/definitions/tls.server.ja3s"
        },
        "server.not_after": {
          "$ref": "#/definitions/tls.server.not_after"
        },
        "server.not_before": {
          "$ref": "#/definitions/tls.server.not_before"
        },
        "server.subject": {
          "$ref": "#/definitions/tls.server.subject"
        },
        "server.x509.alternative_names": {
          "$ref": "#/definitions/tls.server.x509.alternative_names"
        },
        "server.x509.issuer.common_name": {
          "$ref": "#/definitions/tls.server.x509.issuer.common_name"
        },
        "server.x509.issuer.country": {
          "$ref": "#/definitions/tls.server.x509.issuer.country"
        },
        "server.x509.issuer.distinguished_name": {
          "$ref": "#/definitions/tls.server.x509.issuer.distinguished_name"
        },
        "server.x509.issuer.locality": {
          "$ref": "#/definitions/tls.server.x509.issuer.locality"
        },
        "server.x509.issuer.organization": {
          "$ref": "#/definitions/tls.server.x509.issuer.organization"
        },
        "server.x509.issuer.organizational_unit": {
          "$ref": "#/definitions/tls.server.x509.issuer.organizational_unit"
        },
        "server.x509.issuer.state_or_province": {
          "$ref": "#/definitions/tls.server.x509.issuer.state_or_province"
        },
        "server.x509.not_after": {
          "$ref": "#/definitions/tls.server.x509.not_after"
        },
        "server.x509.not_before": {
          "$ref": "#/definitions/tls.server.x509.not_before"
        },
        "server.x509.public_key_algorithm": {
          "$ref": "#/definitions/tls.server.x509.public_key_algorithm"
        },
        "server.x509.public_key_curve": {
          "$ref": "#/definitions/tls.server.x509.public_key_curve"
        },
        "server.x509.public_key_exponent": {
          "$ref": "#/definitions/tls.server.x509.public_key_exponent"
        },
        "server.x509.public_key_size": {
          "$ref": "#/definitions/tls.server.x509.public_key_size"
        },
        "server.x509.serial_number": {
          "$ref": "#/definitions/tls.server.x509.serial_number"
        },
        "server.x509.signature_algorithm": {
          "$ref": "#/definitions/tls.server.x509.signature_algorithm"
        },
        "server.x509.subject.common_name": {
          "$ref": "#/definitions/tls.server.x509.subject.common_name"
        },
        "server.x509.subject.country": {
          "$ref": "#/definitions/tls.server.x509.subject.country"
        },
        "server.x509.subject.distinguished_name": {
          "$ref": "#/definitions/tls.server.x509.subject.distinguished_name"
        },
        "server.x509.subject.locality": {
          "$ref": "#/definitions/tls.server.x509.subject.locality"
        },
        "server.x509.subject.organization": {
          "$ref": "#/definitions/tls.server.x509.subject.organization"
        },
        "server.x509.subject.organizational_unit": {
          "$ref": "#/definitions/tls.server.x509.subject.organizational_unit"
        },
        "server.x509.subject.state_or_province": {
          "$ref": "#/definitions/tls.server.x509.subject.state_or_province"
        },
        "server.x509.version_number": {
          "$ref": "#/definitions/tls.server.x509.version_number"
        },
        "version": {
          "$ref": "#/definitions/tls.version"
        },
        "version_protocol": {
          "$ref": "#/definitions/tls.version_protocol"
        }
      }
    },
    "tls.cipher": {
      "$ref": "#/definitions/tls.cipher"
    },
    "tls.client.certificate": {
      "$ref": "#/definitions/tls.client.certificate"
    },
    "tls.client.certificate_chain": {
      "$ref": "#/definitions/tls.client.certificate_chain"
    },
    "tls.client.hash.md5": {
      "$ref": "#/definitions/tls.client.hash.md5"
    },
    "tls.client.hash.sha1": {
      "$ref": "#/definitions/tls.client.hash.sha1"
    },
    "tls.client.hash.sha256": {
      "$ref": "#/definitions/tls.client.hash.sha256"
    },
    "tls.client.issuer": {
      "$ref": "#/definitions/tls.client.issuer"
    },
    "tls.client.ja3": {
      "$ref": "#/definitions/tls.client.ja3"
    },
    "tls.client.not_after": {
      "$ref": "#/definitions/tls.client.not_after"
    },
    "tls.client.not_before": {
      "$ref": "#/definitions/tls.client.not_before"
    },
    "tls.client.server_name": {
      "$ref": "#/definitions/tls.client.server_name"
    },
    "tls.client.subject": {
      "$ref": "#/definitions/tls.client.subject"
    },
    "tls.client.supported_ciphers": {
      "$ref": "#/definitions/tls.client.supported_ciphers"
    },
    "tls.client.x509.alternative_names": {
      "$ref": "#/definitions/tls.client.x509.alternative_names"
    },
    "tls.client.x509.issuer.common_name": {
      "$ref": "#/definitions/tls.client.x509.issuer.common_name"
    },
    "tls.client.x509.issuer.country": {
      "$ref": "#/definitions/tls.client.x509.issuer.country"
    },
    "tls.client.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/tls.client.x509.issuer.distinguished_name"
    },
    "tls.client.x509.issuer.locality": {
      "$ref": "#/definitions/tls.client.x509.issuer.locality"
    },
    "tls.client.x509.issuer.organization": {
      "$ref": "#/definitions/tls.client.x509.issuer.organization"
    },
    "tls.client.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/tls.client.x509.issuer.organizational_unit"
    },
    "tls.client.x509.issuer.state_or_province": {
      "$ref": "#/definitions/tls.client.x509.issuer.state_or_province"
    },
    "tls.client.x509.not_after": {
      "$ref": "#/definitions/tls.client.x509.not_after"
    },
    "tls.client.x509.not_before": {
      "$ref": "#/definitions/tls.client.x509.not_before"
    },
    "tls.client.x509.public_key_algorithm": {
      "$ref": "#/definitions/tls.client.x509.public_key_algorithm"
    },
    "tls.client.x509.public_key_curve": {
      "$ref": "#/definitions/tls.client.x509.public_key_curve"
    },
    "tls.client.x509.public_key_exponent": {
      "$ref": "#/definitions/tls.client.x509.public_key_exponent"
    },
    "tls.client.x509.public_key_size": {
      "$ref": "#/definitions/tls.client.x509.public_key_size"
    },
    "tls.client.x509.serial_number": {
      "$ref": "#/definitions/tls.client.x509.serial_number"
    },
    "tls.client.x509.signature_algorithm": {
      "$ref": "#/definitions/tls.client.x509.signature_algorithm"
    },
    "tls.client.x509.subject.common_name": {
      "$ref": "#/definitions/tls.client.x509.subject.common_name"
    },
    "tls.client.x509.subject.country": {
      "$ref": "#/definitions/tls.client.x509.subject.country"
    },
    "tls.client.x509.subject.distinguished_name": {
      "$ref": "#/definitions/tls.client.x509.subject.distinguished_name"
    },
    "tls.client.x509.subject.locality": {
      "$ref": "#/definitions/tls.client.x509.subject.locality"
    },
    "tls.client.x509.subject.organization": {
      "$ref": "#/definitions/tls.client.x509.subject.organization"
    },
    "tls.client.x509.subject.organizational_unit": {
      "$ref": "#/definitions/tls.client.x509.subject.organizational_unit"
    },
    "tls.client.x509.subject.state_or_province": {
      "$ref": "#/definitions/tls.client.x509.subject.state_or_province"
    },
    "tls.client.x509.version_number": {
      "$ref": "#/definitions/tls.client.x509.version_number"
    },
    "tls.curve": {
      "$ref": "#/definitions/tls.curve"
    },
    "tls.established": {
      "$ref": "#/definitions/tls.established"
    },
    "tls.next_protocol": {
      "$ref": "#/definitions/tls.next_protocol"
    },
    "tls.resumed": {
      "$ref": "#/definitions/tls.resumed"
    },
    "tls.server.certificate": {
      "$ref": "#/definitions/tls.server.certificate"
    },
    "tls.server.certificate_chain": {
      "$ref": "#/definitions/tls.server.certificate_chain"
    },
    "tls.server.hash.md5": {
      "$ref": "#/definitions/tls.server.hash.md5"
    },
    "tls.server.hash.sha1": {
      "$ref": "#/definitions/tls.server.hash.sha1"
    },
    "tls.server.hash.sha256": {
      "$ref": "#/definitions/tls.server.hash.sha256"
    },
    "tls.server.issuer": {
      "$ref": "#/definitions/tls.server.issuer"
    },
    "tls.server.ja3s": {
      "$ref": "#/definitions/tls.server.ja3s"
    },
    "tls.server.not_after": {
      "$ref": "#/definitions/tls.server.not_after"
    },
    "tls.server.not_before": {
      "$ref": "#/definitions/tls.server.not_before"
    },
    "tls.server.subject": {
      "$ref": "#/definitions/tls.server.subject"
    },
    "tls.server.x509.alternative_names": {
      "$ref": "#/definitions/tls.server.x509.alternative_names"
    },
    "tls.server.x509.issuer.common_name": {
      "$ref": "#/definitions/tls.server.x509.issuer.common_name"
    },
    "tls.server.x509.issuer.country": {
      "$ref": "#/definitions/tls.server.x509.issuer.country"
    },
    "tls.server.x509.issuer.distinguished_name": {
      "$ref": "#/definitions/tls.server.x509.issuer.distinguished_name"
    },
    "tls.server.x509.issuer.locality": {
      "$ref": "#/definitions/tls.server.x509.issuer.locality"
    },
    "tls.server.x509.issuer.organization": {
      "$ref": "#/definitions/tls.server.x509.issuer.organization"
    },
    "tls.server.x509.issuer.organizational_unit": {
      "$ref": "#/definitions/tls.server.x509.issuer.organizational_unit"
    },
    "tls.server.x509.issuer.state_or_province": {
      "$ref": "#/definitions/tls.server.x509.issuer.state_or_province"
    },
    "tls.server.x509.not_after": {
      "$ref": "#/definitions/tls.server.x509.not_after"
    },
    "tls.server.x509.not_before": {
      "$ref": "#/definitions/tls.server.x509.not_before"
    },
    "tls.server.x509.public_key_algorithm": {
      "$ref": "#/definitions/tls.server.x509.public_key_algorithm"
    },
    "tls.server.x509.public_key_curve": {
      "$ref": "#/definitions/tls.server.x509.public_key_curve"
    },
    "tls.server.x509.public_key_exponent": {
      "$ref": "#/definitions/tls.server.x509.public_key_exponent"
    },
    "tls.server.x509.public_key_size": {
      "$ref": "#/definitions/tls.server.x509.public_key_size"
    },
    "tls.server.x509.serial_number": {
      "$ref": "#/definitions/tls.server.x509.serial_number"
    },
    "tls.server.x509.signature_algorithm": {
      "$ref": "#/definitions/tls.server.x509.signature_algorithm"
    },
    "tls.server.x509.subject.common_name": {
      "$ref": "#/definitions/tls.server.x509.subject.common_name"
    },
    "tls.server.x509.subject.country": {
      "$ref": "#/definitions/tls.server.x509.subject.country"
    },
    "tls.server.x509.subject.distinguished_name": {
      "$ref": "#/definitions/tls.server.x509.subject.distinguished_name"
    },
    "tls.server.x509.subject.locality": {
      "$ref": "#/definitions/tls.server.x509.subject.locality"
    },
    "tls.server.x509.subject.organization": {
      "$ref": "#/definitions/tls.server.x509.subject.organization"
    },
    "tls.server.x509.subject.organizational_unit": {
      "$ref": "#/definitions/tls.server.x509.subject.organizational_unit"
    },
    "tls.server.x509.subject.state_or_province": {
      "$ref": "#/definitions/tls.server.x509.subject.state_or_province"
    },
    "tls.server.x509.version_number": {
      "$ref": "#/definitions/tls.server.x509.version_number"
    },
    "tls.version": {
      "$ref": "#/definitions/tls.version"
    },
    "tls.version_protocol": {
      "$ref": "#/definitions/tls.version_protocol"
    },
    "trace.id": {
      "$ref": "#/definitions/trace.id"
    },
    "transaction.id": {
      "$ref": "#/definitions/transaction.id"
    },
    "type": {
      "$ref": "#/definitions/type"
    },
    "url": {
      "description": "URL fields provide support for complete or partial URLs, and supports the breaking down into scheme, domain, path, and so on.",
      "type": [
        "object"
      ],
      "properties": {
        "domain": {
          "$ref": "#/definitions/url.domain"
        },
        "extension": {
          "$ref": "#/definitions/url.extension"
        },
        "fragment": {
          "$ref": "#/definitions/url.fragment"
        },
        "full": {
          "$ref": "#/definitions/url.full"
        },
        "original": {
          "$ref": "#/definitions/url.original"
        },
        "password": {
          "$ref": "#/definitions/url.password"
        },
        "path": {
          "$ref": "#/definitions/url.path"
        },
        "port": {
          "$ref": "#/definitions/url.port"
        },
        "query": {
          "$ref": "#/definitions/url.query"
        },
        "registered_domain": {
          "$ref": "#/definitions/url.registered_domain"
        },
        "scheme": {
          "$ref": "#/definitions/url.scheme"
        },
        "subdomain": {
          "$ref": "#/definitions/url.subdomain"
        },
        "top_level_domain": {
          "$ref": "#/definitions/url.top_level_domain"
        },
        "username": {
          "$ref": "#/definitions/url.username"
        }
      }
    },
    "url.domain": {
      "$ref": "#/definitions/url.domain"
    },
    "url.extension": {
      "$ref": "#/definitions/url.extension"
    },
    "url.fragment": {
      "$ref": "#/definitions/url.fragment"
    },
    "url.full": {
      "$ref": "#/definitions/url.full"
    },
    "url.original": {
      "$ref": "#/definitions/url.original"
    },
    "url.password": {
      "$ref": "#/definitions/url.password"
    },
    "url.path": {
      "$ref": "#/definitions/url.path"
    },
    "url.port": {
      "$ref": "#/definitions/url.port"
    },
    "url.query": {
      "$ref": "#/definitions/url.query"
    },
    "url.registered_domain": {
      "$ref": "#/definitions/url.registered_domain"
    },
    "url.scheme": {
      "$ref": "#/definitions/url.scheme"
    },
    "url.subdomain": {
      "$ref": "#/definitions/url.subdomain"
    },
    "url.top_level_domain": {
      "$ref": "#/definitions/url.top_level_domain"
    },
    "url.username": {
      "$ref": "#/definitions/url.username"
    },
    "user": {
      "description": "The user fields describe information about the user that is relevant to the event.\nFields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.",
      "type": [
        "object"
      ],
      "properties": {
        "changes.domain": {
          "$ref": "#/definitions/user.changes.domain"
        },
        "changes.email": {
          "$ref": "#/definitions/user.changes.email"
        },
        "changes.full_name": {
          "$ref": "#/definitions/user.changes.full_name"
        },
        "changes.group.domain": {
          "$ref": "#/definitions/user.changes.group.domain"
        },
        "changes.group.id": {
          "$ref": "#/definitions/user.changes.group.id"
        },
        "changes.group.name": {
          "$ref": "#/definitions/user.changes.group.name"
        },
        "changes.hash": {
          "$ref": "#/definitions/user.changes.hash"
        },
        "changes.id": {
          "$ref": "#/definitions/user.changes.id"
        },
        "changes.name": {
          "$ref": "#/definitions/user.changes.name"
        },
        "changes.roles": {
          "$ref": "#/definitions/user.changes.roles"
        },
        "domain": {
          "$ref": "#/definitions/user.domain"
        },
        "effective.domain": {
          "$ref": "#/definitions/user.effective.domain"
        },
        "effective.email": {
          "$ref": "#/definitions/user.effective.email"
        },
        "effective.full_name": {
          "$ref": "#/definitions/user.effective.full_name"
        },
        "effective.group.domain": {
          "$ref": "#/definitions/user.effective.group.domain"
        },
        "effective.group.id": {
          "$ref": "#/definitions/user.effective.group.id"
        },
        "effective.group.name": {
          "$ref": "#/definitions/user.effective.group.name"
        },
        "effective.hash": {
          "$ref": "#/definitions/user.effective.hash"
        },
        "effective.id": {
          "$ref": "#/definitions/user.effective.id"
        },
        "effective.name": {
          "$ref": "#/definitions/user.effective.name"
        },
        "effective.roles": {
          "$ref": "#/definitions/user.effective.roles"
        },
        "email": {
          "$ref": "#/definitions/user.email"
        },
        "full_name": {
          "$ref": "#/definitions/user.full_name"
        },
        "group.domain": {
          "$ref": "#/definitions/user.group.domain"
        },
        "group.id": {
          "$ref": "#/definitions/user.group.id"
        },
        "group.name": {
          "$ref": "#/definitions/user.group.name"
        },
        "hash": {
          "$ref": "#/definitions/user.hash"
        },
        "id": {
          "$ref": "#/definitions/user.id"
        },
        "name": {
          "$ref": "#/definitions/user.name"
        },
        "roles": {
          "$ref": "#/definitions/user.roles"
        },
        "target.domain": {
          "$ref": "#/definitions/user.target.domain"
        },
        "target.email": {
          "$ref": "#/definitions/user.target.email"
        },
        "target.full_name": {
          "$ref": "#/definitions/user.target.full_name"
        },
        "target.group.domain": {
          "$ref": "#/definitions/user.target.group.domain"
        },
        "target.group.id": {
          "$ref": "#/definitions/user.target.group.id"
        },
        "target.group.name": {
          "$ref": "#/definitions/user.target.group.name"
        },
        "target.hash": {
          "$ref": "#/definitions/user.target.hash"
        },
        "target.id": {
          "$ref": "#/definitions/user.target.id"
        },
        "target.name": {
          "$ref": "#/definitions/user.target.name"
        },
        "target.roles": {
          "$ref": "#/definitions/user.target.roles"
        }
      }
    },
    "user.changes.domain": {
      "$ref": "#/definitions/user.changes.domain"
    },
    "user.changes.email": {
      "$ref": "#/definitions/user.changes.email"
    },
    "user.changes.full_name": {
      "$ref": "#/definitions/user.changes.full_name"
    },
    "user.changes.group.domain": {
      "$ref": "#/definitions/user.changes.group.domain"
    },
    "user.changes.group.id": {
      "$ref": "#/definitions/user.changes.group.id"
    },
    "user.changes.group.name": {
      "$ref": "#/definitions/user.changes.group.name"
    },
    "user.changes.hash": {
      "$ref": "#/definitions/user.changes.hash"
    },
    "user.changes.id": {
      "$ref": "#/definitions/user.changes.id"
    },
    "user.changes.name": {
      "$ref": "#/definitions/user.changes.name"
    },
    "user.changes.roles": {
      "$ref": "#/definitions/user.changes.roles"
    },
    "user.domain": {
      "$ref": "#/definitions/user.domain"
    },
    "user.effective.domain": {
      "$ref": "#/definitions/user.effective.domain"
    },
    "user.effective.email": {
      "$ref": "#/definitions/user.effective.email"
    },
    "user.effective.full_name": {
      "$ref": "#/definitions/user.effective.full_name"
    },
    "user.effective.group.domain": {
      "$ref": "#/definitions/user.effective.group.domain"
    },
    "user.effective.group.id": {
      "$ref": "#/definitions/user.effective.group.id"
    },
    "user.effective.group.name": {
      "$ref": "#/definitions/user.effective.group.name"
    },
    "user.effective.hash": {
      "$ref": "#/definitions/user.effective.hash"
    },
    "user.effective.id": {
      "$ref": "#/definitions/user.effective.id"
    },
    "user.effective.name": {
      "$ref": "#/definitions/user.effective.name"
    },
    "user.effective.roles": {
      "$ref": "#/definitions/user.effective.roles"
    },
    "user.email": {
      "$ref": "#/definitions/user.email"
    },
    "user.full_name": {
      "$ref": "#/definitions/user.full_name"
    },
    "user.group.domain": {
      "$ref": "#/definitions/user.group.domain"
    },
    "user.group.id": {
      "$ref": "#/definitions/user.group.id"
    },
    "user.group.name": {
      "$ref": "#/definitions/user.group.name"
    },
    "user.hash": {
      "$ref": "#/definitions/user.hash"
    },
    "user.id": {
      "$ref": "#/definitions/user.id"
    },
    "user.identifier": {
      "$ref": "#/definitions/user.identifier"
    },
    "user.name": {
      "$ref": "#/definitions/user.name"
    },
    "user.roles": {
      "$ref": "#/definitions/user.roles"
    },
    "user.target.domain": {
      "$ref": "#/definitions/user.target.domain"
    },
    "user.target.email": {
      "$ref": "#/definitions/user.target.email"
    },
    "user.target.full_name": {
      "$ref": "#/definitions/user.target.full_name"
    },
    "user.target.group.domain": {
      "$ref": "#/definitions/user.target.group.domain"
    },
    "user.target.group.id": {
      "$ref": "#/definitions/user.target.group.id"
    },
    "user.target.group.name": {
      "$ref": "#/definitions/user.target.group.name"
    },
    "user.target.hash": {
      "$ref": "#/definitions/user.target.hash"
    },
    "user.target.id": {
      "$ref": "#/definitions/user.target.id"
    },
    "user.target.name": {
      "$ref": "#/definitions/user.target.name"
    },
    "user.target.roles": {
      "$ref": "#/definitions/user.target.roles"
    },
    "user.type": {
      "$ref": "#/definitions/user.type"
    },
    "user_agent": {
      "description": "The user_agent fields normally come from a browser request.\nThey often show up in web service logs coming from the parsed user agent string.",
      "type": [
        "object"
      ],
      "properties": {
        "device.name": {
          "$ref": "#/definitions/user_agent.device.name"
        },
        "name": {
          "$ref": "#/definitions/user_agent.name"
        },
        "original": {
          "$ref": "#/definitions/user_agent.original"
        },
        "os.family": {
          "$ref": "#/definitions/user_agent.os.family"
        },
        "os.full": {
          "$ref": "#/definitions/user_agent.os.full"
        },
        "os.kernel": {
          "$ref": "#/definitions/user_agent.os.kernel"
        },
        "os.name": {
          "$ref": "#/definitions/user_agent.os.name"
        },
        "os.platform": {
          "$ref": "#/definitions/user_agent.os.platform"
        },
        "os.type": {
          "$ref": "#/definitions/user_agent.os.type"
        },
        "os.version": {
          "$ref": "#/definitions/user_agent.os.version"
        },
        "version": {
          "$ref": "#/definitions/user_agent.version"
        }
      }
    },
    "user_agent.device.name": {
      "$ref": "#/definitions/user_agent.device.name"
    },
    "user_agent.name": {
      "$ref": "#/definitions/user_agent.name"
    },
    "user_agent.original": {
      "$ref": "#/definitions/user_agent.original"
    },
    "user_agent.os.family": {
      "$ref": "#/definitions/user_agent.os.family"
    },
    "user_agent.os.full": {
      "$ref": "#/definitions/user_agent.os.full"
    },
    "user_agent.os.kernel": {
      "$ref": "#/definitions/user_agent.os.kernel"
    },
    "user_agent.os.name": {
      "$ref": "#/definitions/user_agent.os.name"
    },
    "user_agent.os.platform": {
      "$ref": "#/definitions/user_agent.os.platform"
    },
    "user_agent.os.type": {
      "$ref": "#/definitions/user_agent.os.type"
    },
    "user_agent.os.version": {
      "$ref": "#/definitions/user_agent.os.version"
    },
    "user_agent.version": {
      "$ref": "#/definitions/user_agent.version"
    },
    "version": {
      "$ref": "#/definitions/version"
    },
    "vlan": {
      "description": "The VLAN fields are used to identify 802.1q tag(s) of a packet, as well as ingress and egress VLAN associations of an observer in relation to a specific packet or connection.\nNetwork.vlan fields are used to record a single VLAN tag, or the outer tag in the case of q-in-q encapsulations, for a packet or connection as observed, typically provided by a network sensor (e.g. Zeek, Wireshark) passively reporting on traffic.\nNetwork.inner VLAN fields are used to report inner q-in-q 802.1q tags (multiple 802.1q encapsulations) as observed, typically provided by a network sensor  (e.g. Zeek, Wireshark) passively reporting on traffic. Network.inner VLAN fields should only be used in addition to network.vlan fields to indicate q-in-q tagging.\nObserver.ingress and observer.egress VLAN values are used to record observer specific information when observer events contain discrete ingress and egress VLAN information, typically provided by firewalls, routers, or load balancers.",
      "type": [
        "object"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/vlan.id"
        },
        "name": {
          "$ref": "#/definitions/vlan.name"
        }
      }
    },
    "vlan.id": {
      "$ref": "#/definitions/vlan.id"
    },
    "vlan.name": {
      "$ref": "#/definitions/vlan.name"
    },
    "vulnerability": {
      "description": "The vulnerability fields describe information about a vulnerability that is relevant to an event.",
      "type": [
        "object"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/vulnerability.category"
        },
        "classification": {
          "$ref": "#/definitions/vulnerability.classification"
        },
        "description": {
          "$ref": "#/definitions/vulnerability.description"
        },
        "enumeration": {
          "$ref": "#/definitions/vulnerability.enumeration"
        },
        "id": {
          "$ref": "#/definitions/vulnerability.id"
        },
        "reference": {
          "$ref": "#/definitions/vulnerability.reference"
        },
        "report_id": {
          "$ref": "#/definitions/vulnerability.report_id"
        },
        "scanner.vendor": {
          "$ref": "#/definitions/vulnerability.scanner.vendor"
        },
        "score.base": {
          "$ref": "#/definitions/vulnerability.score.base"
        },
        "score.environmental": {
          "$ref": "#/definitions/vulnerability.score.environmental"
        },
        "score.temporal": {
          "$ref": "#/definitions/vulnerability.score.temporal"
        },
        "score.version": {
          "$ref": "#/definitions/vulnerability.score.version"
        },
        "severity": {
          "$ref": "#/definitions/vulnerability.severity"
        }
      }
    },
    "vulnerability.category": {
      "$ref": "#/definitions/vulnerability.category"
    },
    "vulnerability.classification": {
      "$ref": "#/definitions/vulnerability.classification"
    },
    "vulnerability.description": {
      "$ref": "#/definitions/vulnerability.description"
    },
    "vulnerability.enumeration": {
      "$ref": "#/definitions/vulnerability.enumeration"
    },
    "vulnerability.id": {
      "$ref": "#/definitions/vulnerability.id"
    },
    "vulnerability.reference": {
      "$ref": "#/definitions/vulnerability.reference"
    },
    "vulnerability.report_id": {
      "$ref": "#/definitions/vulnerability.report_id"
    },
    "vulnerability.scanner.vendor": {
      "$ref": "#/definitions/vulnerability.scanner.vendor"
    },
    "vulnerability.score.base": {
      "$ref": "#/definitions/vulnerability.score.base"
    },
    "vulnerability.score.environmental": {
      "$ref": "#/definitions/vulnerability.score.environmental"
    },
    "vulnerability.score.temporal": {
      "$ref": "#/definitions/vulnerability.score.temporal"
    },
    "vulnerability.score.version": {
      "$ref": "#/definitions/vulnerability.score.version"
    },
    "vulnerability.severity": {
      "$ref": "#/definitions/vulnerability.severity"
    },
    "winlog": {
      "description": "All fields specific to the Windows Event Log are defined here.\n",
      "type": [
        "object"
      ],
      "properties": {
        "activity_id": {
          "$ref": "#/definitions/winlog.activity_id"
        },
        "api": {
          "$ref": "#/definitions/winlog.api"
        },
        "channel": {
          "$ref": "#/definitions/winlog.channel"
        },
        "computerObject.domain": {
          "$ref": "#/definitions/winlog.computerObject.domain"
        },
        "computerObject.id": {
          "$ref": "#/definitions/winlog.computerObject.id"
        },
        "computerObject.name": {
          "$ref": "#/definitions/winlog.computerObject.name"
        },
        "computer_name": {
          "$ref": "#/definitions/winlog.computer_name"
        },
        "event_data": {
          "description": "This is a non-exhaustive list of parameters that are used in Windows events. By having these fields defined in the template they can be used in dashboards and machine-learning jobs.\n",
          "type": [
            "object"
          ],
          "properties": {
            "AuthenticationPackageName": {
              "$ref": "#/definitions/winlog.event_data.AuthenticationPackageName"
            },
            "Binary": {
              "$ref": "#/definitions/winlog.event_data.Binary"
            },
            "BitlockerUserInputTime": {
              "$ref": "#/definitions/winlog.event_data.BitlockerUserInputTime"
            },
            "BootMode": {
              "$ref": "#/definitions/winlog.event_data.BootMode"
            },
            "BootType": {
              "$ref": "#/definitions/winlog.event_data.BootType"
            },
            "BuildVersion": {
              "$ref": "#/definitions/winlog.event_data.BuildVersion"
            },
            "Company": {
              "$ref": "#/definitions/winlog.event_data.Company"
            },
            "CorruptionActionState": {
              "$ref": "#/definitions/winlog.event_data.CorruptionActionState"
            },
            "CreationUtcTime": {
              "$ref": "#/definitions/winlog.event_data.CreationUtcTime"
            },
            "Description": {
              "$ref": "#/definitions/winlog.event_data.Description"
            },
            "Detail": {
              "$ref": "#/definitions/winlog.event_data.Detail"
            },
            "DeviceName": {
              "$ref": "#/definitions/winlog.event_data.DeviceName"
            },
            "DeviceNameLength": {
              "$ref": "#/definitions/winlog.event_data.DeviceNameLength"
            },
            "DeviceTime": {
              "$ref": "#/definitions/winlog.event_data.DeviceTime"
            },
            "DeviceVersionMajor": {
              "$ref": "#/definitions/winlog.event_data.DeviceVersionMajor"
            },
            "DeviceVersionMinor": {
              "$ref": "#/definitions/winlog.event_data.DeviceVersionMinor"
            },
            "DriveName": {
              "$ref": "#/definitions/winlog.event_data.DriveName"
            },
            "DriverName": {
              "$ref": "#/definitions/winlog.event_data.DriverName"
            },
            "DriverNameLength": {
              "$ref": "#/definitions/winlog.event_data.DriverNameLength"
            },
            "DwordVal": {
              "$ref": "#/definitions/winlog.event_data.DwordVal"
            },
            "EntryCount": {
              "$ref": "#/definitions/winlog.event_data.EntryCount"
            },
            "ExtraInfo": {
              "$ref": "#/definitions/winlog.event_data.ExtraInfo"
            },
            "FailureName": {
              "$ref": "#/definitions/winlog.event_data.FailureName"
            },
            "FailureNameLength": {
              "$ref": "#/definitions/winlog.event_data.FailureNameLength"
            },
            "FileVersion": {
              "$ref": "#/definitions/winlog.event_data.FileVersion"
            },
            "FinalStatus": {
              "$ref": "#/definitions/winlog.event_data.FinalStatus"
            },
            "Group": {
              "$ref": "#/definitions/winlog.event_data.Group"
            },
            "IdleImplementation": {
              "$ref": "#/definitions/winlog.event_data.IdleImplementation"
            },
            "IdleStateCount": {
              "$ref": "#/definitions/winlog.event_data.IdleStateCount"
            },
            "ImpersonationLevel": {
              "$ref": "#/definitions/winlog.event_data.ImpersonationLevel"
            },
            "IntegrityLevel": {
              "$ref": "#/definitions/winlog.event_data.IntegrityLevel"
            },
            "IpAddress": {
              "$ref": "#/definitions/winlog.event_data.IpAddress"
            },
            "IpPort": {
              "$ref": "#/definitions/winlog.event_data.IpPort"
            },
            "KeyLength": {
              "$ref": "#/definitions/winlog.event_data.KeyLength"
            },
            "LastBootGood": {
              "$ref": "#/definitions/winlog.event_data.LastBootGood"
            },
            "LastShutdownGood": {
              "$ref": "#/definitions/winlog.event_data.LastShutdownGood"
            },
            "LmPackageName": {
              "$ref": "#/definitions/winlog.event_data.LmPackageName"
            },
            "LogonGuid": {
              "$ref": "#/definitions/winlog.event_data.LogonGuid"
            },
            "LogonId": {
              "$ref": "#/definitions/winlog.event_data.LogonId"
            },
            "LogonProcessName": {
              "$ref": "#/definitions/winlog.event_data.LogonProcessName"
            },
            "LogonType": {
              "$ref": "#/definitions/winlog.event_data.LogonType"
            },
            "MajorVersion": {
              "$ref": "#/definitions/winlog.event_data.MajorVersion"
            },
            "MaximumPerformancePercent": {
              "$ref": "#/definitions/winlog.event_data.MaximumPerformancePercent"
            },
            "MemberName": {
              "$ref": "#/definitions/winlog.event_data.MemberName"
            },
            "MemberSid": {
              "$ref": "#/definitions/winlog.event_data.MemberSid"
            },
            "MinimumPerformancePercent": {
              "$ref": "#/definitions/winlog.event_data.MinimumPerformancePercent"
            },
            "MinimumThrottlePercent": {
              "$ref": "#/definitions/winlog.event_data.MinimumThrottlePercent"
            },
            "MinorVersion": {
              "$ref": "#/definitions/winlog.event_data.MinorVersion"
            },
            "NewProcessId": {
              "$ref": "#/definitions/winlog.event_data.NewProcessId"
            },
            "NewProcessName": {
              "$ref": "#/definitions/winlog.event_data.NewProcessName"
            },
            "NewSchemeGuid": {
              "$ref": "#/definitions/winlog.event_data.NewSchemeGuid"
            },
            "NewTime": {
              "$ref": "#/definitions/winlog.event_data.NewTime"
            },
            "NominalFrequency": {
              "$ref": "#/definitions/winlog.event_data.NominalFrequency"
            },
            "Number": {
              "$ref": "#/definitions/winlog.event_data.Number"
            },
            "OldSchemeGuid": {
              "$ref": "#/definitions/winlog.event_data.OldSchemeGuid"
            },
            "OldTime": {
              "$ref": "#/definitions/winlog.event_data.OldTime"
            },
            "OriginalFileName": {
              "$ref": "#/definitions/winlog.event_data.OriginalFileName"
            },
            "Path": {
              "$ref": "#/definitions/winlog.event_data.Path"
            },
            "PerformanceImplementation": {
              "$ref": "#/definitions/winlog.event_data.PerformanceImplementation"
            },
            "PreviousCreationUtcTime": {
              "$ref": "#/definitions/winlog.event_data.PreviousCreationUtcTime"
            },
            "PreviousTime": {
              "$ref": "#/definitions/winlog.event_data.PreviousTime"
            },
            "PrivilegeList": {
              "$ref": "#/definitions/winlog.event_data.PrivilegeList"
            },
            "ProcessId": {
              "$ref": "#/definitions/winlog.event_data.ProcessId"
            },
            "ProcessName": {
              "$ref": "#/definitions/winlog.event_data.ProcessName"
            },
            "ProcessPath": {
              "$ref": "#/definitions/winlog.event_data.ProcessPath"
            },
            "ProcessPid": {
              "$ref": "#/definitions/winlog.event_data.ProcessPid"
            },
            "Product": {
              "$ref": "#/definitions/winlog.event_data.Product"
            },
            "PuaCount": {
              "$ref": "#/definitions/winlog.event_data.PuaCount"
            },
            "PuaPolicyId": {
              "$ref": "#/definitions/winlog.event_data.PuaPolicyId"
            },
            "QfeVersion": {
              "$ref": "#/definitions/winlog.event_data.QfeVersion"
            },
            "Reason": {
              "$ref": "#/definitions/winlog.event_data.Reason"
            },
            "SchemaVersion": {
              "$ref": "#/definitions/winlog.event_data.SchemaVersion"
            },
            "ScriptBlockText": {
              "$ref": "#/definitions/winlog.event_data.ScriptBlockText"
            },
            "ServiceName": {
              "$ref": "#/definitions/winlog.event_data.ServiceName"
            },
            "ServiceVersion": {
              "$ref": "#/definitions/winlog.event_data.ServiceVersion"
            },
            "ShutdownActionType": {
              "$ref": "#/definitions/winlog.event_data.ShutdownActionType"
            },
            "ShutdownEventCode": {
              "$ref": "#/definitions/winlog.event_data.ShutdownEventCode"
            },
            "ShutdownReason": {
              "$ref": "#/definitions/winlog.event_data.ShutdownReason"
            },
            "Signature": {
              "$ref": "#/definitions/winlog.event_data.Signature"
            },
            "SignatureStatus": {
              "$ref": "#/definitions/winlog.event_data.SignatureStatus"
            },
            "Signed": {
              "$ref": "#/definitions/winlog.event_data.Signed"
            },
            "StartTime": {
              "$ref": "#/definitions/winlog.event_data.StartTime"
            },
            "State": {
              "$ref": "#/definitions/winlog.event_data.State"
            },
            "Status": {
              "$ref": "#/definitions/winlog.event_data.Status"
            },
            "StopTime": {
              "$ref": "#/definitions/winlog.event_data.StopTime"
            },
            "SubjectDomainName": {
              "$ref": "#/definitions/winlog.event_data.SubjectDomainName"
            },
            "SubjectLogonId": {
              "$ref": "#/definitions/winlog.event_data.SubjectLogonId"
            },
            "SubjectUserName": {
              "$ref": "#/definitions/winlog.event_data.SubjectUserName"
            },
            "SubjectUserSid": {
              "$ref": "#/definitions/winlog.event_data.SubjectUserSid"
            },
            "TSId": {
              "$ref": "#/definitions/winlog.event_data.TSId"
            },
            "TargetDomainName": {
              "$ref": "#/definitions/winlog.event_data.TargetDomainName"
            },
            "TargetInfo": {
              "$ref": "#/definitions/winlog.event_data.TargetInfo"
            },
            "TargetLogonGuid": {
              "$ref": "#/definitions/winlog.event_data.TargetLogonGuid"
            },
            "TargetLogonId": {
              "$ref": "#/definitions/winlog.event_data.TargetLogonId"
            },
            "TargetServerName": {
              "$ref": "#/definitions/winlog.event_data.TargetServerName"
            },
            "TargetUserName": {
              "$ref": "#/definitions/winlog.event_data.TargetUserName"
            },
            "TargetUserSid": {
              "$ref": "#/definitions/winlog.event_data.TargetUserSid"
            },
            "TerminalSessionId": {
              "$ref": "#/definitions/winlog.event_data.TerminalSessionId"
            },
            "TokenElevationType": {
              "$ref": "#/definitions/winlog.event_data.TokenElevationType"
            },
            "TransmittedServices": {
              "$ref": "#/definitions/winlog.event_data.TransmittedServices"
            },
            "UserSid": {
              "$ref": "#/definitions/winlog.event_data.UserSid"
            },
            "Version": {
              "$ref": "#/definitions/winlog.event_data.Version"
            },
            "Workstation": {
              "$ref": "#/definitions/winlog.event_data.Workstation"
            },
            "param1": {
              "$ref": "#/definitions/winlog.event_data.param1"
            },
            "param2": {
              "$ref": "#/definitions/winlog.event_data.param2"
            },
            "param3": {
              "$ref": "#/definitions/winlog.event_data.param3"
            },
            "param4": {
              "$ref": "#/definitions/winlog.event_data.param4"
            },
            "param5": {
              "$ref": "#/definitions/winlog.event_data.param5"
            },
            "param6": {
              "$ref": "#/definitions/winlog.event_data.param6"
            },
            "param7": {
              "$ref": "#/definitions/winlog.event_data.param7"
            },
            "param8": {
              "$ref": "#/definitions/winlog.event_data.param8"
            }
          }
        },
        "event_id": {
          "$ref": "#/definitions/winlog.event_id"
        },
        "keywords": {
          "$ref": "#/definitions/winlog.keywords"
        },
        "opcode": {
          "$ref": "#/definitions/winlog.opcode"
        },
        "process.pid": {
          "$ref": "#/definitions/winlog.process.pid"
        },
        "process.thread.id": {
          "$ref": "#/definitions/winlog.process.thread.id"
        },
        "provider_guid": {
          "$ref": "#/definitions/winlog.provider_guid"
        },
        "provider_name": {
          "$ref": "#/definitions/winlog.provider_name"
        },
        "record_id": {
          "$ref": "#/definitions/winlog.record_id"
        },
        "related_activity_id": {
          "$ref": "#/definitions/winlog.related_activity_id"
        },
        "task": {
          "$ref": "#/definitions/winlog.task"
        },
        "time_created": {
          "$ref": "#/definitions/winlog.time_created"
        },
        "trustAttribute": {
          "$ref": "#/definitions/winlog.trustAttribute"
        },
        "trustDirection": {
          "$ref": "#/definitions/winlog.trustDirection"
        },
        "trustType": {
          "$ref": "#/definitions/winlog.trustType"
        },
        "user.domain": {
          "$ref": "#/definitions/winlog.user.domain"
        },
        "user.identifier": {
          "$ref": "#/definitions/winlog.user.identifier"
        },
        "user.name": {
          "$ref": "#/definitions/winlog.user.name"
        },
        "user.type": {
          "$ref": "#/definitions/winlog.user.type"
        },
        "user_data": {
          "$ref": "#/definitions/winlog.user_data"
        },
        "version": {
          "$ref": "#/definitions/winlog.version"
        }
      }
    },
    "winlog.activity_id": {
      "$ref": "#/definitions/winlog.activity_id"
    },
    "winlog.api": {
      "$ref": "#/definitions/winlog.api"
    },
    "winlog.channel": {
      "$ref": "#/definitions/winlog.channel"
    },
    "winlog.computerObject.domain": {
      "$ref": "#/definitions/winlog.computerObject.domain"
    },
    "winlog.computerObject.id": {
      "$ref": "#/definitions/winlog.computerObject.id"
    },
    "winlog.computerObject.name": {
      "$ref": "#/definitions/winlog.computerObject.name"
    },
    "winlog.computer_name": {
      "$ref": "#/definitions/winlog.computer_name"
    },
    "winlog.event_data": {
      "$ref": "#/definitions/winlog.event_data"
    },
    "winlog.event_data.AuthenticationPackageName": {
      "$ref": "#/definitions/winlog.event_data.AuthenticationPackageName"
    },
    "winlog.event_data.Binary": {
      "$ref": "#/definitions/winlog.event_data.Binary"
    },
    "winlog.event_data.BitlockerUserInputTime": {
      "$ref": "#/definitions/winlog.event_data.BitlockerUserInputTime"
    },
    "winlog.event_data.BootMode": {
      "$ref": "#/definitions/winlog.event_data.BootMode"
    },
    "winlog.event_data.BootType": {
      "$ref": "#/definitions/winlog.event_data.BootType"
    },
    "winlog.event_data.BuildVersion": {
      "$ref": "#/definitions/winlog.event_data.BuildVersion"
    },
    "winlog.event_data.Company": {
      "$ref": "#/definitions/winlog.event_data.Company"
    },
    "winlog.event_data.CorruptionActionState": {
      "$ref": "#/definitions/winlog.event_data.CorruptionActionState"
    },
    "winlog.event_data.CreationUtcTime": {
      "$ref": "#/definitions/winlog.event_data.CreationUtcTime"
    },
    "winlog.event_data.Description": {
      "$ref": "#/definitions/winlog.event_data.Description"
    },
    "winlog.event_data.Detail": {
      "$ref": "#/definitions/winlog.event_data.Detail"
    },
    "winlog.event_data.DeviceName": {
      "$ref": "#/definitions/winlog.event_data.DeviceName"
    },
    "winlog.event_data.DeviceNameLength": {
      "$ref": "#/definitions/winlog.event_data.DeviceNameLength"
    },
    "winlog.event_data.DeviceTime": {
      "$ref": "#/definitions/winlog.event_data.DeviceTime"
    },
    "winlog.event_data.DeviceVersionMajor": {
      "$ref": "#/definitions/winlog.event_data.DeviceVersionMajor"
    },
    "winlog.event_data.DeviceVersionMinor": {
      "$ref": "#/definitions/winlog.event_data.DeviceVersionMinor"
    },
    "winlog.event_data.DriveName": {
      "$ref": "#/definitions/winlog.event_data.DriveName"
    },
    "winlog.event_data.DriverName": {
      "$ref": "#/definitions/winlog.event_data.DriverName"
    },
    "winlog.event_data.DriverNameLength": {
      "$ref": "#/definitions/winlog.event_data.DriverNameLength"
    },
    "winlog.event_data.DwordVal": {
      "$ref": "#/definitions/winlog.event_data.DwordVal"
    },
    "winlog.event_data.EntryCount": {
      "$ref": "#/definitions/winlog.event_data.EntryCount"
    },
    "winlog.event_data.ExtraInfo": {
      "$ref": "#/definitions/winlog.event_data.ExtraInfo"
    },
    "winlog.event_data.FailureName": {
      "$ref": "#/definitions/winlog.event_data.FailureName"
    },
    "winlog.event_data.FailureNameLength": {
      "$ref": "#/definitions/winlog.event_data.FailureNameLength"
    },
    "winlog.event_data.FileVersion": {
      "$ref": "#/definitions/winlog.event_data.FileVersion"
    },
    "winlog.event_data.FinalStatus": {
      "$ref": "#/definitions/winlog.event_data.FinalStatus"
    },
    "winlog.event_data.Group": {
      "$ref": "#/definitions/winlog.event_data.Group"
    },
    "winlog.event_data.IdleImplementation": {
      "$ref": "#/definitions/winlog.event_data.IdleImplementation"
    },
    "winlog.event_data.IdleStateCount": {
      "$ref": "#/definitions/winlog.event_data.IdleStateCount"
    },
    "winlog.event_data.ImpersonationLevel": {
      "$ref": "#/definitions/winlog.event_data.ImpersonationLevel"
    },
    "winlog.event_data.IntegrityLevel": {
      "$ref": "#/definitions/winlog.event_data.IntegrityLevel"
    },
    "winlog.event_data.IpAddress": {
      "$ref": "#/definitions/winlog.event_data.IpAddress"
    },
    "winlog.event_data.IpPort": {
      "$ref": "#/definitions/winlog.event_data.IpPort"
    },
    "winlog.event_data.KeyLength": {
      "$ref": "#/definitions/winlog.event_data.KeyLength"
    },
    "winlog.event_data.LastBootGood": {
      "$ref": "#/definitions/winlog.event_data.LastBootGood"
    },
    "winlog.event_data.LastShutdownGood": {
      "$ref": "#/definitions/winlog.event_data.LastShutdownGood"
    },
    "winlog.event_data.LmPackageName": {
      "$ref": "#/definitions/winlog.event_data.LmPackageName"
    },
    "winlog.event_data.LogonGuid": {
      "$ref": "#/definitions/winlog.event_data.LogonGuid"
    },
    "winlog.event_data.LogonId": {
      "$ref": "#/definitions/winlog.event_data.LogonId"
    },
    "winlog.event_data.LogonProcessName": {
      "$ref": "#/definitions/winlog.event_data.LogonProcessName"
    },
    "winlog.event_data.LogonType": {
      "$ref": "#/definitions/winlog.event_data.LogonType"
    },
    "winlog.event_data.MajorVersion": {
      "$ref": "#/definitions/winlog.event_data.MajorVersion"
    },
    "winlog.event_data.MaximumPerformancePercent": {
      "$ref": "#/definitions/winlog.event_data.MaximumPerformancePercent"
    },
    "winlog.event_data.MemberName": {
      "$ref": "#/definitions/winlog.event_data.MemberName"
    },
    "winlog.event_data.MemberSid": {
      "$ref": "#/definitions/winlog.event_data.MemberSid"
    },
    "winlog.event_data.MinimumPerformancePercent": {
      "$ref": "#/definitions/winlog.event_data.MinimumPerformancePercent"
    },
    "winlog.event_data.MinimumThrottlePercent": {
      "$ref": "#/definitions/winlog.event_data.MinimumThrottlePercent"
    },
    "winlog.event_data.MinorVersion": {
      "$ref": "#/definitions/winlog.event_data.MinorVersion"
    },
    "winlog.event_data.NewProcessId": {
      "$ref": "#/definitions/winlog.event_data.NewProcessId"
    },
    "winlog.event_data.NewProcessName": {
      "$ref": "#/definitions/winlog.event_data.NewProcessName"
    },
    "winlog.event_data.NewSchemeGuid": {
      "$ref": "#/definitions/winlog.event_data.NewSchemeGuid"
    },
    "winlog.event_data.NewTime": {
      "$ref": "#/definitions/winlog.event_data.NewTime"
    },
    "winlog.event_data.NominalFrequency": {
      "$ref": "#/definitions/winlog.event_data.NominalFrequency"
    },
    "winlog.event_data.Number": {
      "$ref": "#/definitions/winlog.event_data.Number"
    },
    "winlog.event_data.OldSchemeGuid": {
      "$ref": "#/definitions/winlog.event_data.OldSchemeGuid"
    },
    "winlog.event_data.OldTime": {
      "$ref": "#/definitions/winlog.event_data.OldTime"
    },
    "winlog.event_data.OriginalFileName": {
      "$ref": "#/definitions/winlog.event_data.OriginalFileName"
    },
    "winlog.event_data.Path": {
      "$ref": "#/definitions/winlog.event_data.Path"
    },
    "winlog.event_data.PerformanceImplementation": {
      "$ref": "#/definitions/winlog.event_data.PerformanceImplementation"
    },
    "winlog.event_data.PreviousCreationUtcTime": {
      "$ref": "#/definitions/winlog.event_data.PreviousCreationUtcTime"
    },
    "winlog.event_data.PreviousTime": {
      "$ref": "#/definitions/winlog.event_data.PreviousTime"
    },
    "winlog.event_data.PrivilegeList": {
      "$ref": "#/definitions/winlog.event_data.PrivilegeList"
    },
    "winlog.event_data.ProcessId": {
      "$ref": "#/definitions/winlog.event_data.ProcessId"
    },
    "winlog.event_data.ProcessName": {
      "$ref": "#/definitions/winlog.event_data.ProcessName"
    },
    "winlog.event_data.ProcessPath": {
      "$ref": "#/definitions/winlog.event_data.ProcessPath"
    },
    "winlog.event_data.ProcessPid": {
      "$ref": "#/definitions/winlog.event_data.ProcessPid"
    },
    "winlog.event_data.Product": {
      "$ref": "#/definitions/winlog.event_data.Product"
    },
    "winlog.event_data.PuaCount": {
      "$ref": "#/definitions/winlog.event_data.PuaCount"
    },
    "winlog.event_data.PuaPolicyId": {
      "$ref": "#/definitions/winlog.event_data.PuaPolicyId"
    },
    "winlog.event_data.QfeVersion": {
      "$ref": "#/definitions/winlog.event_data.QfeVersion"
    },
    "winlog.event_data.Reason": {
      "$ref": "#/definitions/winlog.event_data.Reason"
    },
    "winlog.event_data.SchemaVersion": {
      "$ref": "#/definitions/winlog.event_data.SchemaVersion"
    },
    "winlog.event_data.ScriptBlockText": {
      "$ref": "#/definitions/winlog.event_data.ScriptBlockText"
    },
    "winlog.event_data.ServiceName": {
      "$ref": "#/definitions/winlog.event_data.ServiceName"
    },
    "winlog.event_data.ServiceVersion": {
      "$ref": "#/definitions/winlog.event_data.ServiceVersion"
    },
    "winlog.event_data.ShutdownActionType": {
      "$ref": "#/definitions/winlog.event_data.ShutdownActionType"
    },
    "winlog.event_data.ShutdownEventCode": {
      "$ref": "#/definitions/winlog.event_data.ShutdownEventCode"
    },
    "winlog.event_data.ShutdownReason": {
      "$ref": "#/definitions/winlog.event_data.ShutdownReason"
    },
    "winlog.event_data.Signature": {
      "$ref": "#/definitions/winlog.event_data.Signature"
    },
    "winlog.event_data.SignatureStatus": {
      "$ref": "#/definitions/winlog.event_data.SignatureStatus"
    },
    "winlog.event_data.Signed": {
      "$ref": "#/definitions/winlog.event_data.Signed"
    },
    "winlog.event_data.StartTime": {
      "$ref": "#/definitions/winlog.event_data.StartTime"
    },
    "winlog.event_data.State": {
      "$ref": "#/definitions/winlog.event_data.State"
    },
    "winlog.event_data.Status": {
      "$ref": "#/definitions/winlog.event_data.Status"
    },
    "winlog.event_data.StopTime": {
      "$ref": "#/definitions/winlog.event_data.StopTime"
    },
    "winlog.event_data.SubjectDomainName": {
      "$ref": "#/definitions/winlog.event_data.SubjectDomainName"
    },
    "winlog.event_data.SubjectLogonId": {
      "$ref": "#/definitions/winlog.event_data.SubjectLogonId"
    },
    "winlog.event_data.SubjectUserName": {
      "$ref": "#/definitions/winlog.event_data.SubjectUserName"
    },
    "winlog.event_data.SubjectUserSid": {
      "$ref": "#/definitions/winlog.event_data.SubjectUserSid"
    },
    "winlog.event_data.TSId": {
      "$ref": "#/definitions/winlog.event_data.TSId"
    },
    "winlog.event_data.TargetDomainName": {
      "$ref": "#/definitions/winlog.event_data.TargetDomainName"
    },
    "winlog.event_data.TargetInfo": {
      "$ref": "#/definitions/winlog.event_data.TargetInfo"
    },
    "winlog.event_data.TargetLogonGuid": {
      "$ref": "#/definitions/winlog.event_data.TargetLogonGuid"
    },
    "winlog.event_data.TargetLogonId": {
      "$ref": "#/definitions/winlog.event_data.TargetLogonId"
    },
    "winlog.event_data.TargetServerName": {
      "$ref": "#/definitions/winlog.event_data.TargetServerName"
    },
    "winlog.event_data.TargetUserName": {
      "$ref": "#/definitions/winlog.event_data.TargetUserName"
    },
    "winlog.event_data.TargetUserSid": {
      "$ref": "#/definitions/winlog.event_data.TargetUserSid"
    },
    "winlog.event_data.TerminalSessionId": {
      "$ref": "#/definitions/winlog.event_data.TerminalSessionId"
    },
    "winlog.event_data.TokenElevationType": {
      "$ref": "#/definitions/winlog.event_data.TokenElevationType"
    },
    "winlog.event_data.TransmittedServices": {
      "$ref": "#/definitions/winlog.event_data.TransmittedServices"
    },
    "winlog.event_data.UserSid": {
      "$ref": "#/definitions/winlog.event_data.UserSid"
    },
    "winlog.event_data.Version": {
      "$ref": "#/definitions/winlog.event_data.Version"
    },
    "winlog.event_data.Workstation": {
      "$ref": "#/definitions/winlog.event_data.Workstation"
    },
    "winlog.event_data.param1": {
      "$ref": "#/definitions/winlog.event_data.param1"
    },
    "winlog.event_data.param2": {
      "$ref": "#/definitions/winlog.event_data.param2"
    },
    "winlog.event_data.param3": {
      "$ref": "#/definitions/winlog.event_data.param3"
    },
    "winlog.event_data.param4": {
      "$ref": "#/definitions/winlog.event_data.param4"
    },
    "winlog.event_data.param5": {
      "$ref": "#/definitions/winlog.event_data.param5"
    },
    "winlog.event_data.param6": {
      "$ref": "#/definitions/winlog.event_data.param6"
    },
    "winlog.event_data.param7": {
      "$ref": "#/definitions/winlog.event_data.param7"
    },
    "winlog.event_data.param8": {
      "$ref": "#/definitions/winlog.event_data.param8"
    },
    "winlog.event_id": {
      "$ref": "#/definitions/winlog.event_id"
    },
    "winlog.keywords": {
      "$ref": "#/definitions/winlog.keywords"
    },
    "winlog.opcode": {
      "$ref": "#/definitions/winlog.opcode"
    },
    "winlog.process.pid": {
      "$ref": "#/definitions/winlog.process.pid"
    },
    "winlog.process.thread.id": {
      "$ref": "#/definitions/winlog.process.thread.id"
    },
    "winlog.provider_guid": {
      "$ref": "#/definitions/winlog.provider_guid"
    },
    "winlog.provider_name": {
      "$ref": "#/definitions/winlog.provider_name"
    },
    "winlog.record_id": {
      "$ref": "#/definitions/winlog.record_id"
    },
    "winlog.related_activity_id": {
      "$ref": "#/definitions/winlog.related_activity_id"
    },
    "winlog.task": {
      "$ref": "#/definitions/winlog.task"
    },
    "winlog.time_created": {
      "$ref": "#/definitions/winlog.time_created"
    },
    "winlog.trustAttribute": {
      "$ref": "#/definitions/winlog.trustAttribute"
    },
    "winlog.trustDirection": {
      "$ref": "#/definitions/winlog.trustDirection"
    },
    "winlog.trustType": {
      "$ref": "#/definitions/winlog.trustType"
    },
    "winlog.user.domain": {
      "$ref": "#/definitions/winlog.user.domain"
    },
    "winlog.user.identifier": {
      "$ref": "#/definitions/winlog.user.identifier"
    },
    "winlog.user.name": {
      "$ref": "#/definitions/winlog.user.name"
    },
    "winlog.user.type": {
      "$ref": "#/definitions/winlog.user.type"
    },
    "winlog.user_data": {
      "$ref": "#/definitions/winlog.user_data"
    },
    "winlog.version": {
      "$ref": "#/definitions/winlog.version"
    },
    "x509": {
      "description": "This implements the common core fields for x509 certificates. This information is likely logged with TLS sessions, digital signatures found in executable binaries, S/MIME information in email bodies, or analysis of files on disk.\nWhen the certificate relates to a file, use the fields at `file.x509`. When hashes of the DER-encoded certificate are available, the `hash` data set should be populated as well (e.g. `file.hash.sha256`).\nEvents that contain certificate information about network connections, should use the x509 fields under the relevant TLS fields: `tls.server.x509` and/or `tls.client.x509`.",
      "type": [
        "object"
      ],
      "properties": {
        "alternative_names": {
          "$ref": "#/definitions/x509.alternative_names"
        },
        "issuer.common_name": {
          "$ref": "#/definitions/x509.issuer.common_name"
        },
        "issuer.country": {
          "$ref": "#/definitions/x509.issuer.country"
        },
        "issuer.distinguished_name": {
          "$ref": "#/definitions/x509.issuer.distinguished_name"
        },
        "issuer.locality": {
          "$ref": "#/definitions/x509.issuer.locality"
        },
        "issuer.organization": {
          "$ref": "#/definitions/x509.issuer.organization"
        },
        "issuer.organizational_unit": {
          "$ref": "#/definitions/x509.issuer.organizational_unit"
        },
        "issuer.state_or_province": {
          "$ref": "#/definitions/x509.issuer.state_or_province"
        },
        "not_after": {
          "$ref": "#/definitions/x509.not_after"
        },
        "not_before": {
          "$ref": "#/definitions/x509.not_before"
        },
        "public_key_algorithm": {
          "$ref": "#/definitions/x509.public_key_algorithm"
        },
        "public_key_curve": {
          "$ref": "#/definitions/x509.public_key_curve"
        },
        "public_key_exponent": {
          "$ref": "#/definitions/x509.public_key_exponent"
        },
        "public_key_size": {
          "$ref": "#/definitions/x509.public_key_size"
        },
        "serial_number": {
          "$ref": "#/definitions/x509.serial_number"
        },
        "signature_algorithm": {
          "$ref": "#/definitions/x509.signature_algorithm"
        },
        "subject.common_name": {
          "$ref": "#/definitions/x509.subject.common_name"
        },
        "subject.country": {
          "$ref": "#/definitions/x509.subject.country"
        },
        "subject.distinguished_name": {
          "$ref": "#/definitions/x509.subject.distinguished_name"
        },
        "subject.locality": {
          "$ref": "#/definitions/x509.subject.locality"
        },
        "subject.organization": {
          "$ref": "#/definitions/x509.subject.organization"
        },
        "subject.organizational_unit": {
          "$ref": "#/definitions/x509.subject.organizational_unit"
        },
        "subject.state_or_province": {
          "$ref": "#/definitions/x509.subject.state_or_province"
        },
        "version_number": {
          "$ref": "#/definitions/x509.version_number"
        }
      }
    },
    "x509.alternative_names": {
      "$ref": "#/definitions/x509.alternative_names"
    },
    "x509.issuer.common_name": {
      "$ref": "#/definitions/x509.issuer.common_name"
    },
    "x509.issuer.country": {
      "$ref": "#/definitions/x509.issuer.country"
    },
    "x509.issuer.distinguished_name": {
      "$ref": "#/definitions/x509.issuer.distinguished_name"
    },
    "x509.issuer.locality": {
      "$ref": "#/definitions/x509.issuer.locality"
    },
    "x509.issuer.organization": {
      "$ref": "#/definitions/x509.issuer.organization"
    },
    "x509.issuer.organizational_unit": {
      "$ref": "#/definitions/x509.issuer.organizational_unit"
    },
    "x509.issuer.state_or_province": {
      "$ref": "#/definitions/x509.issuer.state_or_province"
    },
    "x509.not_after": {
      "$ref": "#/definitions/x509.not_after"
    },
    "x509.not_before": {
      "$ref": "#/definitions/x509.not_before"
    },
    "x509.public_key_algorithm": {
      "$ref": "#/definitions/x509.public_key_algorithm"
    },
    "x509.public_key_curve": {
      "$ref": "#/definitions/x509.public_key_curve"
    },
    "x509.public_key_exponent": {
      "$ref": "#/definitions/x509.public_key_exponent"
    },
    "x509.public_key_size": {
      "$ref": "#/definitions/x509.public_key_size"
    },
    "x509.serial_number": {
      "$ref": "#/definitions/x509.serial_number"
    },
    "x509.signature_algorithm": {
      "$ref": "#/definitions/x509.signature_algorithm"
    },
    "x509.subject.common_name": {
      "$ref": "#/definitions/x509.subject.common_name"
    },
    "x509.subject.country": {
      "$ref": "#/definitions/x509.subject.country"
    },
    "x509.subject.distinguished_name": {
      "$ref": "#/definitions/x509.subject.distinguished_name"
    },
    "x509.subject.locality": {
      "$ref": "#/definitions/x509.subject.locality"
    },
    "x509.subject.organization": {
      "$ref": "#/definitions/x509.subject.organization"
    },
    "x509.subject.organizational_unit": {
      "$ref": "#/definitions/x509.subject.organizational_unit"
    },
    "x509.subject.state_or_province": {
      "$ref": "#/definitions/x509.subject.state_or_province"
    },
    "x509.version_number": {
      "$ref": "#/definitions/x509.version_number"
    },
    "xml": {
      "$ref": "#/definitions/xml"
    }
  },
  "definitions": {
    "@timestamp": {
      "description": "Date/time when the event originated.\nThis is the date/time extracted from the event, typically representing when the event was generated by the source.\nIf the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.\nRequired field for all events.",
      "type": [
        "string"
      ]
    },
    "activity_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "agent.build.original": {
      "description": "Extended build information for the agent.\nThis field is intended to contain any build information that a data source may provide, no specific formatting is required.",
      "type": [
        "string"
      ]
    },
    "agent.ephemeral_id": {
      "description": "Ephemeral identifier of this agent (if one exists).\nThis id normally changes across restarts, but `agent.id` does not.",
      "type": [
        "string"
      ]
    },
    "agent.hostname": {
      "description": "Deprecated - use agent.name or agent.id to identify an agent.\n",
      "type": [
        "string"
      ]
    },
    "agent.id": {
      "description": "Unique identifier of this agent (if one exists).\nExample: For Beats this would be beat.id.",
      "type": [
        "string"
      ]
    },
    "agent.name": {
      "description": "Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.\nIf no name is given, the name is often left empty.",
      "type": [
        "string"
      ]
    },
    "agent.type": {
      "description": "Type of the agent.\nThe agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.",
      "type": [
        "string"
      ]
    },
    "agent.version": {
      "description": "Version of the agent.",
      "type": [
        "string"
      ]
    },
    "as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "beat.hostname": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "beat.name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "beat.timezone": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "client.address": {
      "description": "Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",
      "type": [
        "string"
      ]
    },
    "client.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "client.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "client.bytes": {
      "description": "Bytes sent from the client to the server.",
      "type": [
        "integer"
      ]
    },
    "client.domain": {
      "description": "The domain name of the client system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",
      "type": [
        "string"
      ]
    },
    "client.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "client.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "client.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "client.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "client.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "client.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "client.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "client.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "client.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "client.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "client.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "client.ip": {
      "description": "IP address of the client (IPv4 or IPv6).",
      "type": [
        "string"
      ]
    },
    "client.mac": {
      "description": "MAC address of the client.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "client.nat.ip": {
      "description": "Translated IP of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.",
      "type": [
        "string"
      ]
    },
    "client.nat.port": {
      "description": "Translated port of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.",
      "type": [
        "integer"
      ]
    },
    "client.packets": {
      "description": "Packets sent from the client to the server.",
      "type": [
        "integer"
      ]
    },
    "client.port": {
      "description": "Port of the client.",
      "type": [
        "integer"
      ]
    },
    "client.registered_domain": {
      "description": "The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "client.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "client.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "client.user.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "client.user.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "client.user.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "client.user.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "client.user.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "client.user.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "client.user.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "client.user.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "client.user.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "client.user.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "cloud.account.id": {
      "description": "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",
      "type": [
        "string"
      ]
    },
    "cloud.account.name": {
      "description": "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",
      "type": [
        "string"
      ]
    },
    "cloud.availability_zone": {
      "description": "Availability zone in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.image.id": {
      "description": "Image ID for the cloud instance.\n",
      "type": [
        "string"
      ]
    },
    "cloud.instance.id": {
      "description": "Instance ID of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.instance.name": {
      "description": "Instance name of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.machine.type": {
      "description": "Machine type of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.account.id": {
      "description": "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.account.name": {
      "description": "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.availability_zone": {
      "description": "Availability zone in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.instance.id": {
      "description": "Instance ID of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.instance.name": {
      "description": "Instance name of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.machine.type": {
      "description": "Machine type of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.project.id": {
      "description": "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.project.name": {
      "description": "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.provider": {
      "description": "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.region": {
      "description": "Region in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.origin.service.name": {
      "description": "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",
      "type": [
        "string"
      ]
    },
    "cloud.project.id": {
      "description": "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",
      "type": [
        "string"
      ]
    },
    "cloud.project.name": {
      "description": "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",
      "type": [
        "string"
      ]
    },
    "cloud.provider": {
      "description": "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",
      "type": [
        "string"
      ]
    },
    "cloud.region": {
      "description": "Region in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.service.name": {
      "description": "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",
      "type": [
        "string"
      ]
    },
    "cloud.target.account.id": {
      "description": "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",
      "type": [
        "string"
      ]
    },
    "cloud.target.account.name": {
      "description": "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",
      "type": [
        "string"
      ]
    },
    "cloud.target.availability_zone": {
      "description": "Availability zone in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.target.instance.id": {
      "description": "Instance ID of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.target.instance.name": {
      "description": "Instance name of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.target.machine.type": {
      "description": "Machine type of the host machine.",
      "type": [
        "string"
      ]
    },
    "cloud.target.project.id": {
      "description": "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",
      "type": [
        "string"
      ]
    },
    "cloud.target.project.name": {
      "description": "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",
      "type": [
        "string"
      ]
    },
    "cloud.target.provider": {
      "description": "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",
      "type": [
        "string"
      ]
    },
    "cloud.target.region": {
      "description": "Region in which this host, resource, or service is located.",
      "type": [
        "string"
      ]
    },
    "cloud.target.service.name": {
      "description": "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",
      "type": [
        "string"
      ]
    },
    "code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "computer_name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "container.cpu.usage": {
      "description": "Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1. Scaling factor: 1000.",
      "type": [
        "number"
      ]
    },
    "container.disk.read.bytes": {
      "description": "The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "container.disk.write.bytes": {
      "description": "The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "container.id": {
      "description": "Unique container id.",
      "type": [
        "string"
      ]
    },
    "container.image.name": {
      "description": "Name of the image the container was built on.",
      "type": [
        "string"
      ]
    },
    "container.image.tag": {
      "description": "Container image tags.",
      "type": [
        "string"
      ]
    },
    "container.labels": {
      "description": "Image labels.",
      "type": [
        "object"
      ]
    },
    "container.memory.usage": {
      "description": "Memory usage percentage and it ranges from 0 to 1. Scaling factor: 1000.",
      "type": [
        "number"
      ]
    },
    "container.name": {
      "description": "Container name.",
      "type": [
        "string"
      ]
    },
    "container.network.egress.bytes": {
      "description": "The number of bytes (gauge) sent out on all network interfaces by the container since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "container.network.ingress.bytes": {
      "description": "The number of bytes received (gauge) on all network interfaces by the container since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "container.runtime": {
      "description": "Runtime managing this container.",
      "type": [
        "string"
      ]
    },
    "data_stream.dataset": {
      "description": "The field can contain anything that makes sense to signify the source of the data.\nExamples include `nginx.access`, `prometheus`, `endpoint` etc. For data streams that otherwise fit, but that do not have dataset set we use the value \"generic\" for the dataset value. `event.dataset` should have the same value as `data_stream.dataset`.\nBeyond the Elasticsearch data stream naming criteria noted above, the `dataset` value has additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters",
      "type": [
        "string"
      ]
    },
    "data_stream.namespace": {
      "description": "A user defined namespace. Namespaces are useful to allow grouping of data.\nMany users already organize their indices this way, and the data stream naming scheme now provides this best practice as a default. Many users will populate this field with `default`. If no value is used, it falls back to `default`.\nBeyond the Elasticsearch index naming criteria noted above, `namespace` value has the additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters",
      "type": [
        "string"
      ]
    },
    "data_stream.type": {
      "description": "An overarching type for the data stream.\nCurrently allowed values are \"logs\" and \"metrics\". We expect to also add \"traces\" and \"synthetics\" in the near future.",
      "type": [
        "string"
      ]
    },
    "destination.address": {
      "description": "Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",
      "type": [
        "string"
      ]
    },
    "destination.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "destination.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "destination.bytes": {
      "description": "Bytes sent from the destination to the source.",
      "type": [
        "integer"
      ]
    },
    "destination.domain": {
      "description": "The domain name of the destination system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",
      "type": [
        "string"
      ]
    },
    "destination.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "destination.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "destination.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "destination.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "destination.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "destination.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "destination.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "destination.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "destination.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "destination.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "destination.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "destination.ip": {
      "description": "IP address of the destination (IPv4 or IPv6).",
      "type": [
        "string"
      ]
    },
    "destination.mac": {
      "description": "MAC address of the destination.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "destination.nat.ip": {
      "description": "Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",
      "type": [
        "string"
      ]
    },
    "destination.nat.port": {
      "description": "Port the source session is translated to by NAT Device.\nTypically used with load balancers, firewalls, or routers.",
      "type": [
        "integer"
      ]
    },
    "destination.packets": {
      "description": "Packets sent from the destination to the source.",
      "type": [
        "integer"
      ]
    },
    "destination.port": {
      "description": "Port of the destination.",
      "type": [
        "integer"
      ]
    },
    "destination.registered_domain": {
      "description": "The highest registered destination domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "destination.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "destination.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "destination.user.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "destination.user.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "destination.user.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "destination.user.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "destination.user.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "destination.user.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "destination.user.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "destination.user.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "destination.user.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "destination.user.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "dll.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "dll.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "dll.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "dll.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "dll.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "dll.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "dll.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "dll.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "dll.name": {
      "description": "Name of the library.\nThis generally maps to the name of the file on disk.",
      "type": [
        "string"
      ]
    },
    "dll.path": {
      "description": "Full file path of the library.",
      "type": [
        "string"
      ]
    },
    "dll.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "dll.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "dll.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "dll.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "dll.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "dll.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "dll.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "dns.answers": {
      "description": "An array containing an object for each answer section returned by the server.\nThe main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.\nNot all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.",
      "type": [
        "object"
      ]
    },
    "dns.answers.class": {
      "description": "The class of DNS data contained in this resource record.",
      "type": [
        "string"
      ]
    },
    "dns.answers.data": {
      "description": "The data describing the resource.\nThe meaning of this data depends on the type and class of the resource record.",
      "type": [
        "string"
      ]
    },
    "dns.answers.name": {
      "description": "The domain name to which this resource record pertains.\nIf a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated.",
      "type": [
        "string"
      ]
    },
    "dns.answers.ttl": {
      "description": "The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.",
      "type": [
        "integer"
      ]
    },
    "dns.answers.type": {
      "description": "The type of data contained in this resource record.",
      "type": [
        "string"
      ]
    },
    "dns.header_flags": {
      "description": "Array of 2 letter DNS header flags.\nExpected values are: AA, TC, RD, RA, AD, CD, DO.",
      "type": [
        "string"
      ]
    },
    "dns.id": {
      "description": "The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.",
      "type": [
        "string"
      ]
    },
    "dns.op_code": {
      "description": "The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.",
      "type": [
        "string"
      ]
    },
    "dns.question.class": {
      "description": "The class of records being queried.",
      "type": [
        "string"
      ]
    },
    "dns.question.name": {
      "description": "The name being queried.\nIf the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \\t, \\r, and \\n respectively.",
      "type": [
        "string"
      ]
    },
    "dns.question.registered_domain": {
      "description": "The highest registered domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "dns.question.subdomain": {
      "description": "The subdomain is all of the labels under the registered_domain.\nIf the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "dns.question.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "dns.question.type": {
      "description": "The type of record being queried.",
      "type": [
        "string"
      ]
    },
    "dns.resolved_ip": {
      "description": "Array containing all IPs seen in `answers.data`.\nThe `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.",
      "type": [
        "string"
      ]
    },
    "dns.response_code": {
      "description": "The DNS response code.",
      "type": [
        "string"
      ]
    },
    "dns.type": {
      "description": "The type of DNS event captured, query or answer.\nIf your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.\nIf your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers.",
      "type": [
        "string"
      ]
    },
    "docker.container.id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "docker.container.image": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "docker.container.labels": {
      "description": "Image labels.\n",
      "type": [
        "object"
      ]
    },
    "docker.container.name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "ecs.version": {
      "description": "ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.\nWhen querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.",
      "type": [
        "string"
      ]
    },
    "elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "error.code": {
      "description": "Error code describing the error.",
      "type": [
        "string"
      ]
    },
    "error.id": {
      "description": "Unique identifier for the error.",
      "type": [
        "string"
      ]
    },
    "error.message": {
      "description": "Error message.",
      "type": [
        "string"
      ]
    },
    "error.stack_trace": {
      "description": "The stack trace of this error in plain text.",
      "type": [
        "string"
      ]
    },
    "error.type": {
      "description": "The type of the error, for example the class name of the exception.",
      "type": [
        "string"
      ]
    },
    "event.action": {
      "description": "The action captured by the event.\nThis describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.",
      "type": [
        "string"
      ]
    },
    "event.agent_id_status": {
      "description": "Agents are normally responsible for populating the `agent.id` field value. If the system receiving events is capable of validating the value based on authentication information for the client then this field can be used to reflect the outcome of that validation.\nFor example if the agent's connection is authenticated with mTLS and the client cert contains the ID of the agent to which the cert was issued then the `agent.id` value in events can be checked against the certificate. If the values match then `event.agent_id_status: verified` is added to the event, otherwise one of the other allowed values should be used.\nIf no validation is performed then the field should be omitted.\nThe allowed values are:\n`verified` - The `agent.id` field value matches expected value obtained from auth metadata.\n`mismatch` - The `agent.id` field value does not match the expected value obtained from auth metadata.\n`missing` - There was no `agent.id` field in the event to validate.\n`auth_metadata_missing` - There was no auth metadata or it was missing information about the agent ID.",
      "type": [
        "string"
      ]
    },
    "event.category": {
      "description": "This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the \"big buckets\" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories.",
      "type": [
        "string"
      ]
    },
    "event.code": {
      "description": "Identification code for this event, if one exists.\nSome event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.",
      "type": [
        "string"
      ]
    },
    "event.created": {
      "description": "event.created contains the date/time when the event was first read by an agent, or by your pipeline.\nThis field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.\nIn most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.\nIn case the two timestamps are identical, @timestamp should be used.",
      "type": [
        "string"
      ]
    },
    "event.dataset": {
      "description": "Name of the dataset.\nIf an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.\nIt's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.",
      "type": [
        "string"
      ]
    },
    "event.duration": {
      "description": "Duration of the event in nanoseconds.\nIf event.start and event.end are known this value should be the difference between the end and start time.",
      "type": [
        "integer"
      ]
    },
    "event.end": {
      "description": "event.end contains the date when the event ended or when the activity was last observed.",
      "type": [
        "string"
      ]
    },
    "event.hash": {
      "description": "Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.",
      "type": [
        "string"
      ]
    },
    "event.id": {
      "description": "Unique ID to describe the event.",
      "type": [
        "string"
      ]
    },
    "event.ingested": {
      "description": "Timestamp when an event arrived in the central data store.\nThis is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.\nIn normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` \u003c `event.created` \u003c `event.ingested`.",
      "type": [
        "string"
      ]
    },
    "event.kind": {
      "description": "This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.",
      "type": [
        "string"
      ]
    },
    "event.module": {
      "description": "Name of the module this data is coming from.\nIf your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.",
      "type": [
        "string"
      ]
    },
    "event.original": {
      "description": "The raw XML representation of the event obtained from Windows. This field is only available on operating systems supporting the Windows Event Log API (Microsoft Windows Vista and newer). This field is not included by default and must be enabled by setting `include_xml: true` as a configuration option for an individual event log.\nThe XML representation of the event is useful for troubleshooting purposes. The data in the fields reported by Winlogbeat can be compared to the data in the XML to diagnose problems.\n",
      "type": [
        "string"
      ]
    },
    "event.outcome": {
      "description": "This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.\n`event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.\nNote that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.\nAlso note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.\nFurther note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.",
      "type": [
        "string"
      ]
    },
    "event.provider": {
      "description": "Source of the event.\nEvent transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).",
      "type": [
        "string"
      ]
    },
    "event.reason": {
      "description": "Reason why this event happened, according to the source.\nThis describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).",
      "type": [
        "string"
      ]
    },
    "event.reference": {
      "description": "Reference URL linking to additional information about this event.\nThis URL links to a static definition of this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field.",
      "type": [
        "string"
      ]
    },
    "event.risk_score": {
      "description": "Risk score or priority of the event (e.g. security solutions). Use your system's original value here.",
      "type": [
        "number"
      ]
    },
    "event.risk_score_norm": {
      "description": "Normalized risk score or priority of the event, on a scale of 0 to 100.\nThis is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.",
      "type": [
        "number"
      ]
    },
    "event.sequence": {
      "description": "Sequence number of the event.\nThe sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.",
      "type": [
        "integer"
      ]
    },
    "event.severity": {
      "description": "The numeric severity of the event according to your event source.\nWhat the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.\nThe Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.",
      "type": [
        "integer"
      ]
    },
    "event.start": {
      "description": "event.start contains the date when the event started or when the activity was first observed.",
      "type": [
        "string"
      ]
    },
    "event.timezone": {
      "description": "This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise.\nAcceptable timezone formats are: a canonical ID (e.g. \"Europe/Amsterdam\"), abbreviated (e.g. \"EST\") or an HH:mm differential (e.g. \"-05:00\").",
      "type": [
        "string"
      ]
    },
    "event.type": {
      "description": "This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization \"sub-bucket\" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types.",
      "type": [
        "string"
      ]
    },
    "event.url": {
      "description": "URL linking to an external system to continue investigation of this event.\nThis URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.",
      "type": [
        "string"
      ]
    },
    "event_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "faas.coldstart": {
      "description": "Boolean value indicating a cold start of a function.",
      "type": [
        "boolean"
      ]
    },
    "faas.execution": {
      "description": "The execution ID of the current function execution.",
      "type": [
        "string"
      ]
    },
    "faas.trigger": {
      "description": "Details about the function trigger.",
      "type": [
        "object"
      ]
    },
    "faas.trigger.request_id": {
      "description": "The ID of the trigger request , message, event, etc.",
      "type": [
        "string"
      ]
    },
    "faas.trigger.type": {
      "description": "The trigger for the function execution.\nExpected values are:\n  * http\n  * pubsub\n  * datasource\n  * timer\n  * other",
      "type": [
        "string"
      ]
    },
    "fields": {
      "description": "Contains user configurable fields.\n",
      "type": [
        "object"
      ]
    },
    "file.accessed": {
      "description": "Last time the file was accessed.\nNote that not all filesystems keep track of access time.",
      "type": [
        "string"
      ]
    },
    "file.attributes": {
      "description": "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "file.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "file.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "file.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "file.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "file.created": {
      "description": "File creation time.\nNote that not all filesystems store the creation time.",
      "type": [
        "string"
      ]
    },
    "file.ctime": {
      "description": "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",
      "type": [
        "string"
      ]
    },
    "file.device": {
      "description": "Device that is the source of the file.",
      "type": [
        "string"
      ]
    },
    "file.directory": {
      "description": "Directory where the file is located. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "file.drive_letter": {
      "description": "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",
      "type": [
        "string"
      ]
    },
    "file.elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "file.elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "file.elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "file.elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "file.elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "file.elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "file.elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "file.elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "file.elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "file.elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "file.elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "file.elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "file.elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "file.elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "file.elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "file.elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "file.elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "file.elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "file.elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "file.elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "file.elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "file.elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "file.elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "file.elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "file.extension": {
      "description": "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "file.fork_name": {
      "description": "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",
      "type": [
        "string"
      ]
    },
    "file.gid": {
      "description": "Primary group ID (GID) of the file.",
      "type": [
        "string"
      ]
    },
    "file.group": {
      "description": "Primary group name of the file.",
      "type": [
        "string"
      ]
    },
    "file.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "file.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "file.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "file.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "file.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "file.inode": {
      "description": "Inode representing the file in the filesystem.",
      "type": [
        "string"
      ]
    },
    "file.mime_type": {
      "description": "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",
      "type": [
        "string"
      ]
    },
    "file.mode": {
      "description": "Mode of the file in octal representation.",
      "type": [
        "string"
      ]
    },
    "file.mtime": {
      "description": "Last time the file content was modified.",
      "type": [
        "string"
      ]
    },
    "file.name": {
      "description": "Name of the file including the extension, without the directory.",
      "type": [
        "string"
      ]
    },
    "file.owner": {
      "description": "File owner's username.",
      "type": [
        "string"
      ]
    },
    "file.path": {
      "description": "Full path to the file, including the file name. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "file.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "file.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "file.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "file.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "file.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "file.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "file.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "file.size": {
      "description": "File size in bytes.\nOnly relevant when `file.type` is \"file\".",
      "type": [
        "integer"
      ]
    },
    "file.target_path": {
      "description": "Target path for symlinks.",
      "type": [
        "string"
      ]
    },
    "file.type": {
      "description": "File type (file, dir, or symlink).",
      "type": [
        "string"
      ]
    },
    "file.uid": {
      "description": "The user ID (UID) or security identifier (SID) of the file owner.",
      "type": [
        "string"
      ]
    },
    "file.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "file.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "file.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "file.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "file.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "file.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "file.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "file.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "file.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "file.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "file.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "file.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "host.architecture": {
      "description": "Operating system architecture.",
      "type": [
        "string"
      ]
    },
    "host.containerized": {
      "description": "If the host is a container.\n",
      "type": [
        "boolean"
      ]
    },
    "host.cpu.usage": {
      "description": "Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1.\nScaling factor: 1000.\nFor example: For a two core host, this value should be the average of the two cores, between 0 and 1.",
      "type": [
        "number"
      ]
    },
    "host.disk.read.bytes": {
      "description": "The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.disk.write.bytes": {
      "description": "The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.domain": {
      "description": "Name of the domain of which the host is a member.\nFor example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.",
      "type": [
        "string"
      ]
    },
    "host.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "host.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "host.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "host.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "host.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "host.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "host.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "host.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "host.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "host.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "host.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "host.hostname": {
      "description": "Hostname of the host.\nIt normally contains what the `hostname` command returns on the host machine.",
      "type": [
        "string"
      ]
    },
    "host.id": {
      "description": "Unique host id.\nAs hostname is not always unique, use values that are meaningful in your environment.\nExample: The current usage of `beat.name`.",
      "type": [
        "string"
      ]
    },
    "host.ip": {
      "description": "Host ip addresses.",
      "type": [
        "string"
      ]
    },
    "host.mac": {
      "description": "Host MAC addresses.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "host.name": {
      "description": "Name of the host.\nIt can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.",
      "type": [
        "string"
      ]
    },
    "host.network.egress.bytes": {
      "description": "The number of bytes (gauge) sent out on all network interfaces by the host since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.network.egress.packets": {
      "description": "The number of packets (gauge) sent out on all network interfaces by the host since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.network.ingress.bytes": {
      "description": "The number of bytes received (gauge) on all network interfaces by the host since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.network.ingress.packets": {
      "description": "The number of packets (gauge) received on all network interfaces by the host since the last metric collection.",
      "type": [
        "integer"
      ]
    },
    "host.os.build": {
      "description": "OS build information.\n",
      "type": [
        "string"
      ]
    },
    "host.os.codename": {
      "description": "OS codename, if any.\n",
      "type": [
        "string"
      ]
    },
    "host.os.family": {
      "description": "OS family (such as redhat, debian, freebsd, windows).",
      "type": [
        "string"
      ]
    },
    "host.os.full": {
      "description": "Operating system name, including the version or code name.",
      "type": [
        "string"
      ]
    },
    "host.os.kernel": {
      "description": "Operating system kernel version as a raw string.",
      "type": [
        "string"
      ]
    },
    "host.os.name": {
      "description": "Operating system name, without the version.",
      "type": [
        "string"
      ]
    },
    "host.os.platform": {
      "description": "Operating system platform (such centos, ubuntu, windows).",
      "type": [
        "string"
      ]
    },
    "host.os.type": {
      "description": "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",
      "type": [
        "string"
      ]
    },
    "host.os.version": {
      "description": "Operating system version as a raw string.",
      "type": [
        "string"
      ]
    },
    "host.type": {
      "description": "Type of host.\nFor Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.",
      "type": [
        "string"
      ]
    },
    "host.uptime": {
      "description": "Seconds the host has been up.",
      "type": [
        "integer"
      ]
    },
    "http.request.body.bytes": {
      "description": "Size in bytes of the request body.",
      "type": [
        "integer"
      ]
    },
    "http.request.body.content": {
      "description": "The full HTTP request body.",
      "type": [
        "string"
      ]
    },
    "http.request.bytes": {
      "description": "Total size in bytes of the request (body and headers).",
      "type": [
        "integer"
      ]
    },
    "http.request.id": {
      "description": "A unique identifier for each HTTP request to correlate logs between clients and servers in transactions.\nThe id may be contained in a non-standard HTTP header, such as `X-Request-ID` or `X-Correlation-ID`.",
      "type": [
        "string"
      ]
    },
    "http.request.method": {
      "description": "HTTP request method.\nThe value should retain its casing from the original event. For example, `GET`, `get`, and `GeT` are all considered valid values for this field.",
      "type": [
        "string"
      ]
    },
    "http.request.mime_type": {
      "description": "Mime type of the body of the request.\nThis value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.",
      "type": [
        "string"
      ]
    },
    "http.request.referrer": {
      "description": "Referrer for this HTTP request.",
      "type": [
        "string"
      ]
    },
    "http.response.body.bytes": {
      "description": "Size in bytes of the response body.",
      "type": [
        "integer"
      ]
    },
    "http.response.body.content": {
      "description": "The full HTTP response body.",
      "type": [
        "string"
      ]
    },
    "http.response.bytes": {
      "description": "Total size in bytes of the response (body and headers).",
      "type": [
        "integer"
      ]
    },
    "http.response.mime_type": {
      "description": "Mime type of the body of the response.\nThis value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.",
      "type": [
        "string"
      ]
    },
    "http.response.status_code": {
      "description": "HTTP response status code.",
      "type": [
        "integer"
      ]
    },
    "http.version": {
      "description": "HTTP version.",
      "type": [
        "string"
      ]
    },
    "interface.alias": {
      "description": "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.",
      "type": [
        "string"
      ]
    },
    "interface.id": {
      "description": "Interface ID as reported by an observer (typically SNMP interface ID).",
      "type": [
        "string"
      ]
    },
    "interface.name": {
      "description": "Interface name as reported by the system.",
      "type": [
        "string"
      ]
    },
    "jolokia.agent.id": {
      "description": "Each agent has a unique id which can be either provided during startup of the agent in form of a configuration parameter or being autodetected. If autodected, the id has several parts: The IP, the process id, hashcode of the agent and its type.\n",
      "type": [
        "string"
      ]
    },
    "jolokia.agent.version": {
      "description": "Version number of jolokia agent.\n",
      "type": [
        "string"
      ]
    },
    "jolokia.secured": {
      "description": "Whether the agent was configured for authentication or not.\n",
      "type": [
        "boolean"
      ]
    },
    "jolokia.server.product": {
      "description": "The container product if detected.\n",
      "type": [
        "string"
      ]
    },
    "jolokia.server.vendor": {
      "description": "The vendor of the container the agent is running in.\n",
      "type": [
        "string"
      ]
    },
    "jolokia.server.version": {
      "description": "The container's version (if detected).\n",
      "type": [
        "string"
      ]
    },
    "jolokia.url": {
      "description": "The URL how this agent can be contacted.\n",
      "type": [
        "string"
      ]
    },
    "keywords": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "kubernetes.annotations.*": {
      "description": "Kubernetes annotations map\n",
      "type": [
        "object"
      ]
    },
    "kubernetes.container.name": {
      "description": "Kubernetes container name (different than the name from the runtime)\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.deployment.name": {
      "description": "Kubernetes deployment name\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.labels.*": {
      "description": "Kubernetes labels map\n",
      "type": [
        "object"
      ]
    },
    "kubernetes.namespace": {
      "description": "Kubernetes namespace\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.node.hostname": {
      "description": "Kubernetes hostname as reported by the node’s kernel\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.node.name": {
      "description": "Kubernetes node name\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.pod.ip": {
      "description": "Kubernetes Pod IP\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.pod.name": {
      "description": "Kubernetes pod name\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.pod.uid": {
      "description": "Kubernetes Pod UID\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.replicaset.name": {
      "description": "Kubernetes replicaset name\n",
      "type": [
        "string"
      ]
    },
    "kubernetes.selectors.*": {
      "description": "Kubernetes selectors map\n",
      "type": [
        "object"
      ]
    },
    "kubernetes.statefulset.name": {
      "description": "Kubernetes statefulset name\n",
      "type": [
        "string"
      ]
    },
    "labels": {
      "description": "Custom key/value pairs.\nCan be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.\nExample: `docker` and `k8s` labels.",
      "type": [
        "object"
      ]
    },
    "log.file.path": {
      "description": "Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate.\nIf the event wasn't read from a log file, do not populate this field.",
      "type": [
        "string"
      ]
    },
    "log.level": {
      "description": "Original log level of the log event.\nIf the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).\nSome examples are `warn`, `err`, `i`, `informational`.",
      "type": [
        "string"
      ]
    },
    "log.logger": {
      "description": "The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.",
      "type": [
        "string"
      ]
    },
    "log.origin.file.line": {
      "description": "The line number of the file containing the source code which originated the log event.",
      "type": [
        "integer"
      ]
    },
    "log.origin.file.name": {
      "description": "The name of the file containing the source code which originated the log event.\nNote that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.",
      "type": [
        "string"
      ]
    },
    "log.origin.function": {
      "description": "The name of the function or method which originated the log event.",
      "type": [
        "string"
      ]
    },
    "log.syslog": {
      "description": "The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.",
      "type": [
        "object"
      ]
    },
    "log.syslog.facility.code": {
      "description": "The Syslog numeric facility of the log event, if available.\nAccording to RFCs 5424 and 3164, this value should be an integer between 0 and 23.",
      "type": [
        "integer"
      ]
    },
    "log.syslog.facility.name": {
      "description": "The Syslog text-based facility of the log event, if available.",
      "type": [
        "string"
      ]
    },
    "log.syslog.priority": {
      "description": "Syslog numeric priority of the event, if available.\nAccording to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.",
      "type": [
        "integer"
      ]
    },
    "log.syslog.severity.code": {
      "description": "The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.",
      "type": [
        "integer"
      ]
    },
    "log.syslog.severity.name": {
      "description": "The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`.",
      "type": [
        "string"
      ]
    },
    "log_name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "message": {
      "description": "For log events the message field contains the log message, optimized for viewing in a log viewer.\nFor structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.\nIf multiple messages exist, they can be combined into one message.",
      "type": [
        "string"
      ]
    },
    "message_error": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.availability_zone": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.instance_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.instance_name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.machine_type": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.project_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.provider": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "meta.cloud.region": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "network.application": {
      "description": "When a specific application or service is identified from network connection details (source/dest IPs, ports, certificates, or wire format), this field captures the application's or service's name.\nFor example, the original event identifies the network connection being from a specific web service in a `https` network connection, like `facebook` or `twitter`.\nThe field value must be normalized to lowercase for querying.",
      "type": [
        "string"
      ]
    },
    "network.bytes": {
      "description": "Total bytes transferred in both directions.\nIf `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum.",
      "type": [
        "integer"
      ]
    },
    "network.community_id": {
      "description": "A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.\nLearn more at https://github.com/corelight/community-id-spec.",
      "type": [
        "string"
      ]
    },
    "network.direction": {
      "description": "Direction of the network traffic.\nRecommended values are:\n  * ingress\n  * egress\n  * inbound\n  * outbound\n  * internal\n  * external\n  * unknown\n\nWhen mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values \"ingress\" or \"egress\".\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values \"inbound\", \"outbound\", \"internal\" or \"external\".\nNote that \"internal\" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that \"external\" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.",
      "type": [
        "string"
      ]
    },
    "network.forwarded_ip": {
      "description": "Host IP address when the source IP address is the proxy.",
      "type": [
        "string"
      ]
    },
    "network.iana_number": {
      "description": "IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.",
      "type": [
        "string"
      ]
    },
    "network.inner": {
      "description": "Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)",
      "type": [
        "object"
      ]
    },
    "network.inner.vlan.id": {
      "description": "VLAN ID as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "network.inner.vlan.name": {
      "description": "Optional VLAN name as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "network.name": {
      "description": "Name given by operators to sections of their network.",
      "type": [
        "string"
      ]
    },
    "network.packets": {
      "description": "Total packets transferred in both directions.\nIf `source.packets` and `destination.packets` are known, `network.packets` is their sum.",
      "type": [
        "integer"
      ]
    },
    "network.protocol": {
      "description": "In the OSI Model this would be the Application Layer protocol. For example, `http`, `dns`, or `ssh`.\nThe field value must be normalized to lowercase for querying.",
      "type": [
        "string"
      ]
    },
    "network.transport": {
      "description": "Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)\nThe field value must be normalized to lowercase for querying.",
      "type": [
        "string"
      ]
    },
    "network.type": {
      "description": "In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc\nThe field value must be normalized to lowercase for querying.",
      "type": [
        "string"
      ]
    },
    "network.vlan.id": {
      "description": "VLAN ID as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "network.vlan.name": {
      "description": "Optional VLAN name as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "observer.egress": {
      "description": "Observer.egress holds information like interface number and name, vlan, and zone information to classify egress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic.",
      "type": [
        "object"
      ]
    },
    "observer.egress.interface.alias": {
      "description": "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.",
      "type": [
        "string"
      ]
    },
    "observer.egress.interface.id": {
      "description": "Interface ID as reported by an observer (typically SNMP interface ID).",
      "type": [
        "string"
      ]
    },
    "observer.egress.interface.name": {
      "description": "Interface name as reported by the system.",
      "type": [
        "string"
      ]
    },
    "observer.egress.vlan.id": {
      "description": "VLAN ID as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "observer.egress.vlan.name": {
      "description": "Optional VLAN name as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "observer.egress.zone": {
      "description": "Network zone of outbound traffic as reported by the observer to categorize the destination area of egress traffic, e.g. Internal, External, DMZ, HR, Legal, etc.",
      "type": [
        "string"
      ]
    },
    "observer.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "observer.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "observer.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "observer.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "observer.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "observer.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "observer.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "observer.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "observer.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "observer.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "observer.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "observer.hostname": {
      "description": "Hostname of the observer.",
      "type": [
        "string"
      ]
    },
    "observer.ingress": {
      "description": "Observer.ingress holds information like interface number and name, vlan, and zone information to classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic.",
      "type": [
        "object"
      ]
    },
    "observer.ingress.interface.alias": {
      "description": "Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.",
      "type": [
        "string"
      ]
    },
    "observer.ingress.interface.id": {
      "description": "Interface ID as reported by an observer (typically SNMP interface ID).",
      "type": [
        "string"
      ]
    },
    "observer.ingress.interface.name": {
      "description": "Interface name as reported by the system.",
      "type": [
        "string"
      ]
    },
    "observer.ingress.vlan.id": {
      "description": "VLAN ID as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "observer.ingress.vlan.name": {
      "description": "Optional VLAN name as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "observer.ingress.zone": {
      "description": "Network zone of incoming traffic as reported by the observer to categorize the source area of ingress traffic. e.g. internal, External, DMZ, HR, Legal, etc.",
      "type": [
        "string"
      ]
    },
    "observer.ip": {
      "description": "IP addresses of the observer.",
      "type": [
        "string"
      ]
    },
    "observer.mac": {
      "description": "MAC addresses of the observer.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "observer.name": {
      "description": "Custom name of the observer.\nThis is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.\nIf no custom name is needed, the field can be left empty.",
      "type": [
        "string"
      ]
    },
    "observer.os.family": {
      "description": "OS family (such as redhat, debian, freebsd, windows).",
      "type": [
        "string"
      ]
    },
    "observer.os.full": {
      "description": "Operating system name, including the version or code name.",
      "type": [
        "string"
      ]
    },
    "observer.os.kernel": {
      "description": "Operating system kernel version as a raw string.",
      "type": [
        "string"
      ]
    },
    "observer.os.name": {
      "description": "Operating system name, without the version.",
      "type": [
        "string"
      ]
    },
    "observer.os.platform": {
      "description": "Operating system platform (such centos, ubuntu, windows).",
      "type": [
        "string"
      ]
    },
    "observer.os.type": {
      "description": "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",
      "type": [
        "string"
      ]
    },
    "observer.os.version": {
      "description": "Operating system version as a raw string.",
      "type": [
        "string"
      ]
    },
    "observer.product": {
      "description": "The product name of the observer.",
      "type": [
        "string"
      ]
    },
    "observer.serial_number": {
      "description": "Observer serial number.",
      "type": [
        "string"
      ]
    },
    "observer.type": {
      "description": "The type of the observer the data is coming from.\nThere is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.",
      "type": [
        "string"
      ]
    },
    "observer.vendor": {
      "description": "Vendor name of the observer.",
      "type": [
        "string"
      ]
    },
    "observer.version": {
      "description": "Observer version.",
      "type": [
        "string"
      ]
    },
    "opcode": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "orchestrator.api_version": {
      "description": "API version being used to carry out the action",
      "type": [
        "string"
      ]
    },
    "orchestrator.cluster.name": {
      "description": "Name of the cluster.",
      "type": [
        "string"
      ]
    },
    "orchestrator.cluster.url": {
      "description": "URL of the API used to manage the cluster.",
      "type": [
        "string"
      ]
    },
    "orchestrator.cluster.version": {
      "description": "The version of the cluster.",
      "type": [
        "string"
      ]
    },
    "orchestrator.namespace": {
      "description": "Namespace in which the action is taking place.",
      "type": [
        "string"
      ]
    },
    "orchestrator.organization": {
      "description": "Organization affected by the event (for multi-tenant orchestrator setups).",
      "type": [
        "string"
      ]
    },
    "orchestrator.resource.name": {
      "description": "Name of the resource being acted upon.",
      "type": [
        "string"
      ]
    },
    "orchestrator.resource.type": {
      "description": "Type of resource being acted upon.",
      "type": [
        "string"
      ]
    },
    "orchestrator.type": {
      "description": "Orchestrator cluster type (e.g. kubernetes, nomad or cloudfoundry).",
      "type": [
        "string"
      ]
    },
    "organization.id": {
      "description": "Unique identifier for the organization.",
      "type": [
        "string"
      ]
    },
    "organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "os.family": {
      "description": "OS family (such as redhat, debian, freebsd, windows).",
      "type": [
        "string"
      ]
    },
    "os.full": {
      "description": "Operating system name, including the version or code name.",
      "type": [
        "string"
      ]
    },
    "os.kernel": {
      "description": "Operating system kernel version as a raw string.",
      "type": [
        "string"
      ]
    },
    "os.name": {
      "description": "Operating system name, without the version.",
      "type": [
        "string"
      ]
    },
    "os.platform": {
      "description": "Operating system platform (such centos, ubuntu, windows).",
      "type": [
        "string"
      ]
    },
    "os.type": {
      "description": "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",
      "type": [
        "string"
      ]
    },
    "os.version": {
      "description": "Operating system version as a raw string.",
      "type": [
        "string"
      ]
    },
    "package.architecture": {
      "description": "Package architecture.",
      "type": [
        "string"
      ]
    },
    "package.build_version": {
      "description": "Additional information about the build version of the installed package.\nFor example use the commit SHA of a non-released package.",
      "type": [
        "string"
      ]
    },
    "package.checksum": {
      "description": "Checksum of the installed package for verification.",
      "type": [
        "string"
      ]
    },
    "package.description": {
      "description": "Description of the package.",
      "type": [
        "string"
      ]
    },
    "package.install_scope": {
      "description": "Indicating how the package was installed, e.g. user-local, global.",
      "type": [
        "string"
      ]
    },
    "package.installed": {
      "description": "Time when package was installed.",
      "type": [
        "string"
      ]
    },
    "package.license": {
      "description": "License under which the package was released.\nUse a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/).",
      "type": [
        "string"
      ]
    },
    "package.name": {
      "description": "Package name",
      "type": [
        "string"
      ]
    },
    "package.path": {
      "description": "Path where the package is installed.",
      "type": [
        "string"
      ]
    },
    "package.reference": {
      "description": "Home page or reference URL of the software in this package, if available.",
      "type": [
        "string"
      ]
    },
    "package.size": {
      "description": "Package size in bytes.",
      "type": [
        "integer"
      ]
    },
    "package.type": {
      "description": "Type of package.\nThis should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.",
      "type": [
        "string"
      ]
    },
    "package.version": {
      "description": "Package version",
      "type": [
        "string"
      ]
    },
    "pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.args": {
      "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",
      "type": [
        "string"
      ]
    },
    "process.args_count": {
      "description": "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",
      "type": [
        "integer"
      ]
    },
    "process.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "process.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "process.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "process.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "process.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "process.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "process.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "process.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "process.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "process.command_line": {
      "description": "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",
      "type": [
        "string"
      ]
    },
    "process.elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "process.elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "process.elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "process.elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "process.elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "process.elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "process.elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "process.elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "process.elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "process.elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "process.elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "process.elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "process.elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "process.elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "process.elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "process.elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "process.elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "process.elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "process.elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "process.elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "process.elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "process.end": {
      "description": "The time the process ended.",
      "type": [
        "string"
      ]
    },
    "process.entity_id": {
      "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",
      "type": [
        "string"
      ]
    },
    "process.exe": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "process.executable": {
      "description": "Absolute path to the process executable.",
      "type": [
        "string"
      ]
    },
    "process.exit_code": {
      "description": "The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start).",
      "type": [
        "integer"
      ]
    },
    "process.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "process.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "process.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "process.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "process.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "process.name": {
      "description": "Process name.\nSometimes called program name or similar.",
      "type": [
        "string"
      ]
    },
    "process.owner.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "process.owner.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "process.parent.args": {
      "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",
      "type": [
        "string"
      ]
    },
    "process.parent.args_count": {
      "description": "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",
      "type": [
        "integer"
      ]
    },
    "process.parent.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "process.parent.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "process.parent.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "process.parent.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "process.parent.command_line": {
      "description": "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "process.parent.elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "process.parent.elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "process.parent.elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "process.parent.elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "process.parent.end": {
      "description": "The time the process ended.",
      "type": [
        "string"
      ]
    },
    "process.parent.entity_id": {
      "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",
      "type": [
        "string"
      ]
    },
    "process.parent.executable": {
      "description": "Absolute path to the process executable.",
      "type": [
        "string"
      ]
    },
    "process.parent.exit_code": {
      "description": "The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start).",
      "type": [
        "integer"
      ]
    },
    "process.parent.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "process.parent.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "process.parent.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "process.parent.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "process.parent.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "process.parent.name": {
      "description": "Process name.\nSometimes called program name or similar.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.parent.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.parent.pgid": {
      "description": "Identifier of the group of processes the process belongs to.",
      "type": [
        "integer"
      ]
    },
    "process.parent.pid": {
      "description": "Process id.",
      "type": [
        "integer"
      ]
    },
    "process.parent.start": {
      "description": "The time the process started.",
      "type": [
        "string"
      ]
    },
    "process.parent.thread.id": {
      "description": "Thread ID.",
      "type": [
        "integer"
      ]
    },
    "process.parent.thread.name": {
      "description": "Thread name.",
      "type": [
        "string"
      ]
    },
    "process.parent.title": {
      "description": "Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.",
      "type": [
        "string"
      ]
    },
    "process.parent.uptime": {
      "description": "Seconds the process has been up.",
      "type": [
        "integer"
      ]
    },
    "process.parent.working_directory": {
      "description": "The working directory of the process.",
      "type": [
        "string"
      ]
    },
    "process.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "process.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "process.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "process.pgid": {
      "description": "Identifier of the group of processes the process belongs to.",
      "type": [
        "integer"
      ]
    },
    "process.pid": {
      "description": "Process id.",
      "type": [
        "integer"
      ]
    },
    "process.start": {
      "description": "The time the process started.",
      "type": [
        "string"
      ]
    },
    "process.thread.id": {
      "description": "Thread ID.",
      "type": [
        "integer"
      ]
    },
    "process.thread.name": {
      "description": "Thread name.",
      "type": [
        "string"
      ]
    },
    "process.title": {
      "description": "Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.",
      "type": [
        "string"
      ]
    },
    "process.uptime": {
      "description": "Seconds the process has been up.",
      "type": [
        "integer"
      ]
    },
    "process.working_directory": {
      "description": "The working directory of the process.",
      "type": [
        "string"
      ]
    },
    "process_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "provider_guid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "record_number": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "registry.data.bytes": {
      "description": "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",
      "type": [
        "string"
      ]
    },
    "registry.data.strings": {
      "description": "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`).",
      "type": [
        "string"
      ]
    },
    "registry.data.type": {
      "description": "Standard registry type for encoding contents",
      "type": [
        "string"
      ]
    },
    "registry.hive": {
      "description": "Abbreviated name for the hive.",
      "type": [
        "string"
      ]
    },
    "registry.key": {
      "description": "Hive-relative path of keys.",
      "type": [
        "string"
      ]
    },
    "registry.path": {
      "description": "Full path, including hive, key and value",
      "type": [
        "string"
      ]
    },
    "registry.value": {
      "description": "Name of the value written.",
      "type": [
        "string"
      ]
    },
    "related.hash": {
      "description": "All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).",
      "type": [
        "string"
      ]
    },
    "related.hosts": {
      "description": "All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.",
      "type": [
        "string"
      ]
    },
    "related.ip": {
      "description": "All of the IPs seen on your event.",
      "type": [
        "string"
      ]
    },
    "related.user": {
      "description": "All the user names or other user identifiers seen on the event.",
      "type": [
        "string"
      ]
    },
    "related_activity_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "rule.author": {
      "description": "Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.",
      "type": [
        "string"
      ]
    },
    "rule.category": {
      "description": "A categorization value keyword used by the entity using the rule for detection of this event.",
      "type": [
        "string"
      ]
    },
    "rule.description": {
      "description": "The description of the rule generating the event.",
      "type": [
        "string"
      ]
    },
    "rule.id": {
      "description": "A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.",
      "type": [
        "string"
      ]
    },
    "rule.license": {
      "description": "Name of the license under which the rule used to generate this event is made available.",
      "type": [
        "string"
      ]
    },
    "rule.name": {
      "description": "The name of the rule or signature generating the event.",
      "type": [
        "string"
      ]
    },
    "rule.reference": {
      "description": "Reference URL to additional information about the rule used to generate this event.\nThe URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.",
      "type": [
        "string"
      ]
    },
    "rule.ruleset": {
      "description": "Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.",
      "type": [
        "string"
      ]
    },
    "rule.uuid": {
      "description": "A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.",
      "type": [
        "string"
      ]
    },
    "rule.version": {
      "description": "The version / revision of the rule being used for analysis.",
      "type": [
        "string"
      ]
    },
    "server.address": {
      "description": "Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",
      "type": [
        "string"
      ]
    },
    "server.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "server.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "server.bytes": {
      "description": "Bytes sent from the server to the client.",
      "type": [
        "integer"
      ]
    },
    "server.domain": {
      "description": "The domain name of the server system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",
      "type": [
        "string"
      ]
    },
    "server.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "server.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "server.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "server.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "server.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "server.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "server.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "server.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "server.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "server.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "server.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "server.ip": {
      "description": "IP address of the server (IPv4 or IPv6).",
      "type": [
        "string"
      ]
    },
    "server.mac": {
      "description": "MAC address of the server.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "server.nat.ip": {
      "description": "Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",
      "type": [
        "string"
      ]
    },
    "server.nat.port": {
      "description": "Translated port of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",
      "type": [
        "integer"
      ]
    },
    "server.packets": {
      "description": "Packets sent from the server to the client.",
      "type": [
        "integer"
      ]
    },
    "server.port": {
      "description": "Port of the server.",
      "type": [
        "integer"
      ]
    },
    "server.registered_domain": {
      "description": "The highest registered server domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "server.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "server.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "server.user.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "server.user.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "server.user.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "server.user.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "server.user.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "server.user.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "server.user.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "server.user.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "server.user.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "server.user.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "service.address": {
      "description": "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",
      "type": [
        "string"
      ]
    },
    "service.environment": {
      "description": "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",
      "type": [
        "string"
      ]
    },
    "service.ephemeral_id": {
      "description": "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",
      "type": [
        "string"
      ]
    },
    "service.id": {
      "description": "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",
      "type": [
        "string"
      ]
    },
    "service.name": {
      "description": "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",
      "type": [
        "string"
      ]
    },
    "service.node.name": {
      "description": "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",
      "type": [
        "string"
      ]
    },
    "service.origin.address": {
      "description": "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",
      "type": [
        "string"
      ]
    },
    "service.origin.environment": {
      "description": "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",
      "type": [
        "string"
      ]
    },
    "service.origin.ephemeral_id": {
      "description": "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",
      "type": [
        "string"
      ]
    },
    "service.origin.id": {
      "description": "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",
      "type": [
        "string"
      ]
    },
    "service.origin.name": {
      "description": "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",
      "type": [
        "string"
      ]
    },
    "service.origin.node.name": {
      "description": "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",
      "type": [
        "string"
      ]
    },
    "service.origin.state": {
      "description": "Current state of the service.",
      "type": [
        "string"
      ]
    },
    "service.origin.type": {
      "description": "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",
      "type": [
        "string"
      ]
    },
    "service.origin.version": {
      "description": "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",
      "type": [
        "string"
      ]
    },
    "service.state": {
      "description": "Current state of the service.",
      "type": [
        "string"
      ]
    },
    "service.target.address": {
      "description": "Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",
      "type": [
        "string"
      ]
    },
    "service.target.environment": {
      "description": "Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",
      "type": [
        "string"
      ]
    },
    "service.target.ephemeral_id": {
      "description": "Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",
      "type": [
        "string"
      ]
    },
    "service.target.id": {
      "description": "Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",
      "type": [
        "string"
      ]
    },
    "service.target.name": {
      "description": "Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",
      "type": [
        "string"
      ]
    },
    "service.target.node.name": {
      "description": "Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",
      "type": [
        "string"
      ]
    },
    "service.target.state": {
      "description": "Current state of the service.",
      "type": [
        "string"
      ]
    },
    "service.target.type": {
      "description": "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",
      "type": [
        "string"
      ]
    },
    "service.target.version": {
      "description": "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",
      "type": [
        "string"
      ]
    },
    "service.type": {
      "description": "The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",
      "type": [
        "string"
      ]
    },
    "service.version": {
      "description": "Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",
      "type": [
        "string"
      ]
    },
    "source.address": {
      "description": "Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",
      "type": [
        "string"
      ]
    },
    "source.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "source.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "source.bytes": {
      "description": "Bytes sent from the source to the destination.",
      "type": [
        "integer"
      ]
    },
    "source.domain": {
      "description": "The domain name of the source system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",
      "type": [
        "string"
      ]
    },
    "source.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "source.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "source.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "source.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "source.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "source.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "source.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "source.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "source.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "source.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "source.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "source.ip": {
      "description": "IP address of the source (IPv4 or IPv6).",
      "type": [
        "string"
      ]
    },
    "source.mac": {
      "description": "MAC address of the source.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",
      "type": [
        "string"
      ]
    },
    "source.nat.ip": {
      "description": "Translated ip of source based NAT sessions (e.g. internal client to internet)\nTypically connections traversing load balancers, firewalls, or routers.",
      "type": [
        "string"
      ]
    },
    "source.nat.port": {
      "description": "Translated port of source based NAT sessions. (e.g. internal client to internet)\nTypically used with load balancers, firewalls, or routers.",
      "type": [
        "integer"
      ]
    },
    "source.packets": {
      "description": "Packets sent from the source to the destination.",
      "type": [
        "integer"
      ]
    },
    "source.port": {
      "description": "Port of the source.",
      "type": [
        "integer"
      ]
    },
    "source.registered_domain": {
      "description": "The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "source.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "source.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "source.user.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "source.user.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "source.user.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "source.user.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "source.user.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "source.user.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "source.user.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "source.user.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "source.user.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "source.user.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "source_name": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "span.id": {
      "description": "Unique identifier of the span within the scope of its trace.\nA span represents an operation within a transaction, such as a request to another service, or a database query.",
      "type": [
        "string"
      ]
    },
    "tags": {
      "description": "List of keywords used to tag each event.",
      "type": [
        "string"
      ]
    },
    "task": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "thread_id": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "threat.enrichments": {
      "description": "A list of associated indicators objects enriching the event, and the context of that association/enrichment.",
      "type": [
        "object"
      ]
    },
    "threat.enrichments.indicator": {
      "description": "Object containing associated indicators enriching the event.",
      "type": [
        "object"
      ]
    },
    "threat.enrichments.indicator.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.confidence": {
      "description": "Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.\nExpected values are:\n  * Not Specified\n  * None\n  * Low\n  * Medium\n  * High",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.description": {
      "description": "Describes the type of action conducted by the threat.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.email.address": {
      "description": "Identifies a threat indicator as an email address (irrespective of direction).",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.accessed": {
      "description": "Last time the file was accessed.\nNote that not all filesystems keep track of access time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.attributes": {
      "description": "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "threat.enrichments.indicator.file.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "threat.enrichments.indicator.file.created": {
      "description": "File creation time.\nNote that not all filesystems store the creation time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.ctime": {
      "description": "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.device": {
      "description": "Device that is the source of the file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.directory": {
      "description": "Directory where the file is located. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.drive_letter": {
      "description": "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "threat.enrichments.indicator.file.elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.extension": {
      "description": "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.fork_name": {
      "description": "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.gid": {
      "description": "Primary group ID (GID) of the file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.group": {
      "description": "Primary group name of the file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.inode": {
      "description": "Inode representing the file in the filesystem.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.mime_type": {
      "description": "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.mode": {
      "description": "Mode of the file in octal representation.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.mtime": {
      "description": "Last time the file content was modified.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.name": {
      "description": "Name of the file including the extension, without the directory.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.owner": {
      "description": "File owner's username.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.path": {
      "description": "Full path to the file, including the file name. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.size": {
      "description": "File size in bytes.\nOnly relevant when `file.type` is \"file\".",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.target_path": {
      "description": "Target path for symlinks.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.type": {
      "description": "File type (file, dir, or symlink).",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.uid": {
      "description": "The user ID (UID) or security identifier (SID) of the file owner.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.file.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.file.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.first_seen": {
      "description": "The date and time when intelligence source first reported sighting this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.ip": {
      "description": "Identifies a threat indicator as an IP address (irrespective of direction).",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.last_seen": {
      "description": "The date and time when intelligence source last reported sighting this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.marking.tlp": {
      "description": "Traffic Light Protocol sharing markings. Recommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.modified_at": {
      "description": "The date and time when intelligence source last modified information for this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.port": {
      "description": "Identifies a threat indicator as a port number (irrespective of direction).",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.provider": {
      "description": "The name of the indicator's provider.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.reference": {
      "description": "Reference URL linking to additional information about this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.data.bytes": {
      "description": "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.data.strings": {
      "description": "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`).",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.data.type": {
      "description": "Standard registry type for encoding contents",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.hive": {
      "description": "Abbreviated name for the hive.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.key": {
      "description": "Hive-relative path of keys.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.path": {
      "description": "Full path, including hive, key and value",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.registry.value": {
      "description": "Name of the value written.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.scanner_stats": {
      "description": "Count of AV/EDR vendors that successfully detected malicious file or URL.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.sightings": {
      "description": "Number of times this indicator was observed conducting threat activity.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.type": {
      "description": "Type of indicator as represented by Cyber Observable in STIX 2.0. Recommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.domain": {
      "description": "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.extension": {
      "description": "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.fragment": {
      "description": "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.full": {
      "description": "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.original": {
      "description": "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.password": {
      "description": "Password of the request.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.path": {
      "description": "Path of the request, such as \"/search\".",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.port": {
      "description": "Port of the request, such as 443.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.url.query": {
      "description": "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.registered_domain": {
      "description": "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.scheme": {
      "description": "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.url.username": {
      "description": "Username of the request.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "threat.enrichments.indicator.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.indicator.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.matched.atomic": {
      "description": "Identifies the atomic indicator value that matched a local environment endpoint or network event.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.matched.field": {
      "description": "Identifies the field of the atomic indicator that matched a local environment endpoint or network event.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.matched.id": {
      "description": "Identifies the _id of the indicator document enriching the event.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.matched.index": {
      "description": "Identifies the _index of the indicator document enriching the event.",
      "type": [
        "string"
      ]
    },
    "threat.enrichments.matched.type": {
      "description": "Identifies the type of match that caused the event to be enriched with the given indicator",
      "type": [
        "string"
      ]
    },
    "threat.framework": {
      "description": "Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.",
      "type": [
        "string"
      ]
    },
    "threat.group.alias": {
      "description": "The alias(es) of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT\u0026CK® group alias(es).",
      "type": [
        "string"
      ]
    },
    "threat.group.id": {
      "description": "The id of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT\u0026CK® group id.",
      "type": [
        "string"
      ]
    },
    "threat.group.name": {
      "description": "The name of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT\u0026CK® group name.",
      "type": [
        "string"
      ]
    },
    "threat.group.reference": {
      "description": "The reference URL of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT\u0026CK® group reference URL.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.as.number": {
      "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.as.organization.name": {
      "description": "Organization name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.confidence": {
      "description": "Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.\nExpected values are:\n  * Not Specified\n  * None\n  * Low\n  * Medium\n  * High",
      "type": [
        "string"
      ]
    },
    "threat.indicator.description": {
      "description": "Describes the type of action conducted by the threat.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.email.address": {
      "description": "Identifies a threat indicator as an email address (irrespective of direction).",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.accessed": {
      "description": "Last time the file was accessed.\nNote that not all filesystems keep track of access time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.attributes": {
      "description": "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.digest_algorithm": {
      "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.exists": {
      "description": "Boolean to capture if a signature is present.",
      "type": [
        "boolean"
      ]
    },
    "threat.indicator.file.code_signature.signing_id": {
      "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.status": {
      "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.subject_name": {
      "description": "Subject name of the code signer",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.team_id": {
      "description": "The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.timestamp": {
      "description": "Date and time when the code signature was generated and signed.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.code_signature.trusted": {
      "description": "Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",
      "type": [
        "boolean"
      ]
    },
    "threat.indicator.file.code_signature.valid": {
      "description": "Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",
      "type": [
        "boolean"
      ]
    },
    "threat.indicator.file.created": {
      "description": "File creation time.\nNote that not all filesystems store the creation time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.ctime": {
      "description": "Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.device": {
      "description": "Device that is the source of the file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.directory": {
      "description": "Directory where the file is located. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.drive_letter": {
      "description": "Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.architecture": {
      "description": "Machine architecture of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.byte_order": {
      "description": "Byte sequence of ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.cpu_type": {
      "description": "CPU type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.creation_date": {
      "description": "Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.exports": {
      "description": "List of exported element names and types.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.abi_version": {
      "description": "Version of the ELF Application Binary Interface (ABI).",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.class": {
      "description": "Header class of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.data": {
      "description": "Data table of the ELF header.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.entrypoint": {
      "description": "Header entrypoint of the ELF file.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.header.object_version": {
      "description": "\"0x1\" for original ELF files.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.os_abi": {
      "description": "Application Binary Interface (ABI) of the Linux OS.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.type": {
      "description": "Header type of the ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.header.version": {
      "description": "Version of the ELF header.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.imports": {
      "description": "List of imported element names and types.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.sections": {
      "description": "An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",
      "type": [
        "object"
      ]
    },
    "threat.indicator.file.elf.sections.chi2": {
      "description": "Chi-square probability distribution of the section.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.sections.entropy": {
      "description": "Shannon entropy calculation from the section.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.sections.flags": {
      "description": "ELF Section List flags.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.sections.name": {
      "description": "ELF Section List name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.sections.physical_offset": {
      "description": "ELF Section List offset.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.sections.physical_size": {
      "description": "ELF Section List physical size.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.sections.type": {
      "description": "ELF Section List type.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.sections.virtual_address": {
      "description": "ELF Section List virtual address.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.sections.virtual_size": {
      "description": "ELF Section List virtual size.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.elf.segments": {
      "description": "An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",
      "type": [
        "object"
      ]
    },
    "threat.indicator.file.elf.segments.sections": {
      "description": "ELF object segment sections.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.segments.type": {
      "description": "ELF object segment type.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.shared_libraries": {
      "description": "List of shared libraries used by this ELF object.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.elf.telfhash": {
      "description": "telfhash symbol hash for ELF file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.extension": {
      "description": "File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.fork_name": {
      "description": "A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.gid": {
      "description": "Primary group ID (GID) of the file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.group": {
      "description": "Primary group name of the file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.hash.md5": {
      "description": "MD5 hash.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.hash.sha1": {
      "description": "SHA1 hash.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.hash.sha256": {
      "description": "SHA256 hash.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.hash.sha512": {
      "description": "SHA512 hash.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.hash.ssdeep": {
      "description": "SSDEEP hash.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.inode": {
      "description": "Inode representing the file in the filesystem.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.mime_type": {
      "description": "MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.mode": {
      "description": "Mode of the file in octal representation.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.mtime": {
      "description": "Last time the file content was modified.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.name": {
      "description": "Name of the file including the extension, without the directory.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.owner": {
      "description": "File owner's username.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.path": {
      "description": "Full path to the file, including the file name. It should include the drive letter, when appropriate.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.architecture": {
      "description": "CPU architecture target for the file.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.company": {
      "description": "Internal company name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.description": {
      "description": "Internal description of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.file_version": {
      "description": "Internal version of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.imphash": {
      "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.original_file_name": {
      "description": "Internal name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.pe.product": {
      "description": "Internal product name of the file, provided at compile-time.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.size": {
      "description": "File size in bytes.\nOnly relevant when `file.type` is \"file\".",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.target_path": {
      "description": "Target path for symlinks.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.type": {
      "description": "File type (file, dir, or symlink).",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.uid": {
      "description": "The user ID (UID) or security identifier (SID) of the file owner.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.file.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.file.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.first_seen": {
      "description": "The date and time when intelligence source first reported sighting this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.city_name": {
      "description": "City name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.continent_code": {
      "description": "Two-letter code representing continent's name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.continent_name": {
      "description": "Name of the continent.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.country_iso_code": {
      "description": "Country ISO code.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.country_name": {
      "description": "Country name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.location": {
      "description": "Longitude and latitude.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.name": {
      "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.postal_code": {
      "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.region_iso_code": {
      "description": "Region ISO code.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.region_name": {
      "description": "Region name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.geo.timezone": {
      "description": "The time zone of the location, such as IANA time zone name.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.ip": {
      "description": "Identifies a threat indicator as an IP address (irrespective of direction).",
      "type": [
        "string"
      ]
    },
    "threat.indicator.last_seen": {
      "description": "The date and time when intelligence source last reported sighting this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.marking.tlp": {
      "description": "Traffic Light Protocol sharing markings.\nRecommended values are:\n  * WHITE\n  * GREEN\n  * AMBER\n  * RED",
      "type": [
        "string"
      ]
    },
    "threat.indicator.modified_at": {
      "description": "The date and time when intelligence source last modified information for this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.port": {
      "description": "Identifies a threat indicator as a port number (irrespective of direction).",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.provider": {
      "description": "The name of the indicator's provider.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.reference": {
      "description": "Reference URL linking to additional information about this indicator.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.data.bytes": {
      "description": "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.data.strings": {
      "description": "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`).",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.data.type": {
      "description": "Standard registry type for encoding contents",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.hive": {
      "description": "Abbreviated name for the hive.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.key": {
      "description": "Hive-relative path of keys.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.path": {
      "description": "Full path, including hive, key and value",
      "type": [
        "string"
      ]
    },
    "threat.indicator.registry.value": {
      "description": "Name of the value written.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.scanner_stats": {
      "description": "Count of AV/EDR vendors that successfully detected malicious file or URL.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.sightings": {
      "description": "Number of times this indicator was observed conducting threat activity.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.type": {
      "description": "Type of indicator as represented by Cyber Observable in STIX 2.0.\nRecommended values:\n  * autonomous-system\n  * artifact\n  * directory\n  * domain-name\n  * email-addr\n  * file\n  * ipv4-addr\n  * ipv6-addr\n  * mac-addr\n  * mutex\n  * port\n  * process\n  * software\n  * url\n  * user-account\n  * windows-registry-key\n  * x509-certificate",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.domain": {
      "description": "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.extension": {
      "description": "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.fragment": {
      "description": "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.full": {
      "description": "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.original": {
      "description": "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.password": {
      "description": "Password of the request.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.path": {
      "description": "Path of the request, such as \"/search\".",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.port": {
      "description": "Port of the request, such as 443.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.url.query": {
      "description": "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.registered_domain": {
      "description": "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.scheme": {
      "description": "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "threat.indicator.url.username": {
      "description": "Username of the request.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "threat.indicator.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "threat.indicator.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "threat.software.alias": {
      "description": "The alias(es) of the software for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT\u0026CK® associated software description.",
      "type": [
        "string"
      ]
    },
    "threat.software.id": {
      "description": "The id of the software used by this threat to conduct behavior commonly modeled using MITRE ATT\u0026CK®.\nWhile not required, you can use a MITRE ATT\u0026CK® software id.",
      "type": [
        "string"
      ]
    },
    "threat.software.name": {
      "description": "The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT\u0026CK®.\nWhile not required, you can use a MITRE ATT\u0026CK® software name.",
      "type": [
        "string"
      ]
    },
    "threat.software.platforms": {
      "description": "The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT\u0026CK®.\nRecommended Values:\n  * AWS\n  * Azure\n  * Azure AD\n  * GCP\n  * Linux\n  * macOS\n  * Network\n  * Office 365\n  * SaaS\n  * Windows\n\nWhile not required, you can use a MITRE ATT\u0026CK® software platforms.",
      "type": [
        "string"
      ]
    },
    "threat.software.reference": {
      "description": "The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT\u0026CK®.\nWhile not required, you can use a MITRE ATT\u0026CK® software reference URL.",
      "type": [
        "string"
      ]
    },
    "threat.software.type": {
      "description": "The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT\u0026CK®.\nRecommended values\n  * Malware\n  * Tool\n\n While not required, you can use a MITRE ATT\u0026CK® software type.",
      "type": [
        "string"
      ]
    },
    "threat.tactic.id": {
      "description": "The id of tactic used by this threat. You can use a MITRE ATT\u0026CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )",
      "type": [
        "string"
      ]
    },
    "threat.tactic.name": {
      "description": "Name of the type of tactic used by this threat. You can use a MITRE ATT\u0026CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)",
      "type": [
        "string"
      ]
    },
    "threat.tactic.reference": {
      "description": "The reference url of tactic used by this threat. You can use a MITRE ATT\u0026CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )",
      "type": [
        "string"
      ]
    },
    "threat.technique.id": {
      "description": "The id of technique used by this threat. You can use a MITRE ATT\u0026CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",
      "type": [
        "string"
      ]
    },
    "threat.technique.name": {
      "description": "The name of technique used by this threat. You can use a MITRE ATT\u0026CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",
      "type": [
        "string"
      ]
    },
    "threat.technique.reference": {
      "description": "The reference url of technique used by this threat. You can use a MITRE ATT\u0026CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",
      "type": [
        "string"
      ]
    },
    "threat.technique.subtechnique.id": {
      "description": "The full id of subtechnique used by this threat. You can use a MITRE ATT\u0026CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",
      "type": [
        "string"
      ]
    },
    "threat.technique.subtechnique.name": {
      "description": "The name of subtechnique used by this threat. You can use a MITRE ATT\u0026CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",
      "type": [
        "string"
      ]
    },
    "threat.technique.subtechnique.reference": {
      "description": "The reference url of subtechnique used by this threat. You can use a MITRE ATT\u0026CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",
      "type": [
        "string"
      ]
    },
    "timeseries.instance": {
      "description": "Time series instance id",
      "type": [
        "string"
      ]
    },
    "tls.cipher": {
      "description": "String indicating the cipher used during the current connection.",
      "type": [
        "string"
      ]
    },
    "tls.client.certificate": {
      "description": "PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.",
      "type": [
        "string"
      ]
    },
    "tls.client.certificate_chain": {
      "description": "Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.",
      "type": [
        "string"
      ]
    },
    "tls.client.hash.md5": {
      "description": "Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.client.hash.sha1": {
      "description": "Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.client.hash.sha256": {
      "description": "Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.client.issuer": {
      "description": "Distinguished name of subject of the issuer of the x.509 certificate presented by the client.",
      "type": [
        "string"
      ]
    },
    "tls.client.ja3": {
      "description": "A hash that identifies clients based on how they perform an SSL/TLS handshake.",
      "type": [
        "string"
      ]
    },
    "tls.client.not_after": {
      "description": "Date/Time indicating when client certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.client.not_before": {
      "description": "Date/Time indicating when client certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.client.server_name": {
      "description": "Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.",
      "type": [
        "string"
      ]
    },
    "tls.client.subject": {
      "description": "Distinguished name of subject of the x.509 certificate presented by the client.",
      "type": [
        "string"
      ]
    },
    "tls.client.supported_ciphers": {
      "description": "Array of ciphers offered by the client during the client hello.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "tls.client.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "tls.client.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "tls.client.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "tls.curve": {
      "description": "String indicating the curve used for the given cipher, when applicable.",
      "type": [
        "string"
      ]
    },
    "tls.established": {
      "description": "Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.",
      "type": [
        "boolean"
      ]
    },
    "tls.next_protocol": {
      "description": "String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.",
      "type": [
        "string"
      ]
    },
    "tls.resumed": {
      "description": "Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.",
      "type": [
        "boolean"
      ]
    },
    "tls.server.certificate": {
      "description": "PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.",
      "type": [
        "string"
      ]
    },
    "tls.server.certificate_chain": {
      "description": "Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.",
      "type": [
        "string"
      ]
    },
    "tls.server.hash.md5": {
      "description": "Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.server.hash.sha1": {
      "description": "Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.server.hash.sha256": {
      "description": "Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",
      "type": [
        "string"
      ]
    },
    "tls.server.issuer": {
      "description": "Subject of the issuer of the x.509 certificate presented by the server.",
      "type": [
        "string"
      ]
    },
    "tls.server.ja3s": {
      "description": "A hash that identifies servers based on how they perform an SSL/TLS handshake.",
      "type": [
        "string"
      ]
    },
    "tls.server.not_after": {
      "description": "Timestamp indicating when server certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.server.not_before": {
      "description": "Timestamp indicating when server certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.server.subject": {
      "description": "Subject of the x.509 certificate presented by the server.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "tls.server.x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "tls.server.x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "tls.server.x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "tls.version": {
      "description": "Numeric part of the version parsed from the original string.",
      "type": [
        "string"
      ]
    },
    "tls.version_protocol": {
      "description": "Normalized lowercase protocol name parsed from original string.",
      "type": [
        "string"
      ]
    },
    "trace.id": {
      "description": "Unique identifier of the trace.\nA trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.",
      "type": [
        "string"
      ]
    },
    "transaction.id": {
      "description": "Unique identifier of the transaction within the scope of its trace.\nA transaction is the highest level of work measured within a service, such as a request to a server.",
      "type": [
        "string"
      ]
    },
    "type": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "url.domain": {
      "description": "Domain of the url, such as \"www.elastic.co\".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.",
      "type": [
        "string"
      ]
    },
    "url.extension": {
      "description": "The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be \"png\", not \".png\".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").",
      "type": [
        "string"
      ]
    },
    "url.fragment": {
      "description": "Portion of the url after the `#`, such as \"top\".\nThe `#` is not part of the fragment.",
      "type": [
        "string"
      ]
    },
    "url.full": {
      "description": "If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",
      "type": [
        "string"
      ]
    },
    "url.original": {
      "description": "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",
      "type": [
        "string"
      ]
    },
    "url.password": {
      "description": "Password of the request.",
      "type": [
        "string"
      ]
    },
    "url.path": {
      "description": "Path of the request, such as \"/search\".",
      "type": [
        "string"
      ]
    },
    "url.port": {
      "description": "Port of the request, such as 443.",
      "type": [
        "integer"
      ]
    },
    "url.query": {
      "description": "The query field describes the query string of the request, such as \"q=elasticsearch\".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.",
      "type": [
        "string"
      ]
    },
    "url.registered_domain": {
      "description": "The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "url.scheme": {
      "description": "Scheme of the request, such as \"https\".\nNote: The `:` is not part of the scheme.",
      "type": [
        "string"
      ]
    },
    "url.subdomain": {
      "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.",
      "type": [
        "string"
      ]
    },
    "url.top_level_domain": {
      "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".",
      "type": [
        "string"
      ]
    },
    "url.username": {
      "description": "Username of the request.",
      "type": [
        "string"
      ]
    },
    "user.changes.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.changes.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "user.changes.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "user.changes.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.changes.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "user.changes.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "user.changes.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "user.changes.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "user.changes.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "user.changes.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "user.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.effective.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.effective.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "user.effective.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "user.effective.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.effective.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "user.effective.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "user.effective.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "user.effective.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "user.effective.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "user.effective.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "user.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "user.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "user.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "user.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "user.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "user.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "user.identifier": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "user.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "user.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "user.target.domain": {
      "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.target.email": {
      "description": "User email address.",
      "type": [
        "string"
      ]
    },
    "user.target.full_name": {
      "description": "User's full name, if available.",
      "type": [
        "string"
      ]
    },
    "user.target.group.domain": {
      "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",
      "type": [
        "string"
      ]
    },
    "user.target.group.id": {
      "description": "Unique identifier for the group on the system/platform.",
      "type": [
        "string"
      ]
    },
    "user.target.group.name": {
      "description": "Name of the group.",
      "type": [
        "string"
      ]
    },
    "user.target.hash": {
      "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",
      "type": [
        "string"
      ]
    },
    "user.target.id": {
      "description": "Unique identifier of the user.",
      "type": [
        "string"
      ]
    },
    "user.target.name": {
      "description": "Short name or login of the user.",
      "type": [
        "string"
      ]
    },
    "user.target.roles": {
      "description": "Array of user roles at the time of the event.",
      "type": [
        "string"
      ]
    },
    "user.type": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "user_agent.device.name": {
      "description": "Name of the device.",
      "type": [
        "string"
      ]
    },
    "user_agent.name": {
      "description": "Name of the user agent.",
      "type": [
        "string"
      ]
    },
    "user_agent.original": {
      "description": "Unparsed user_agent string.",
      "type": [
        "string"
      ]
    },
    "user_agent.os.family": {
      "description": "OS family (such as redhat, debian, freebsd, windows).",
      "type": [
        "string"
      ]
    },
    "user_agent.os.full": {
      "description": "Operating system name, including the version or code name.",
      "type": [
        "string"
      ]
    },
    "user_agent.os.kernel": {
      "description": "Operating system kernel version as a raw string.",
      "type": [
        "string"
      ]
    },
    "user_agent.os.name": {
      "description": "Operating system name, without the version.",
      "type": [
        "string"
      ]
    },
    "user_agent.os.platform": {
      "description": "Operating system platform (such centos, ubuntu, windows).",
      "type": [
        "string"
      ]
    },
    "user_agent.os.type": {
      "description": "Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nOne of these following values should be used (lowercase): linux, macos, unix, windows.\nIf the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",
      "type": [
        "string"
      ]
    },
    "user_agent.os.version": {
      "description": "Operating system version as a raw string.",
      "type": [
        "string"
      ]
    },
    "user_agent.version": {
      "description": "Version of the user agent.",
      "type": [
        "string"
      ]
    },
    "version": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "vlan.id": {
      "description": "VLAN ID as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "vlan.name": {
      "description": "Optional VLAN name as reported by the observer.",
      "type": [
        "string"
      ]
    },
    "vulnerability.category": {
      "description": "The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories])\nThis field must be an array.",
      "type": [
        "string"
      ]
    },
    "vulnerability.classification": {
      "description": "The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)",
      "type": [
        "string"
      ]
    },
    "vulnerability.description": {
      "description": "The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])",
      "type": [
        "string"
      ]
    },
    "vulnerability.enumeration": {
      "description": "The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)",
      "type": [
        "string"
      ]
    },
    "vulnerability.id": {
      "description": "The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]",
      "type": [
        "string"
      ]
    },
    "vulnerability.reference": {
      "description": "A resource that provides additional information, context, and mitigations for the identified vulnerability.",
      "type": [
        "string"
      ]
    },
    "vulnerability.report_id": {
      "description": "The report or scan identification number.",
      "type": [
        "string"
      ]
    },
    "vulnerability.scanner.vendor": {
      "description": "The name of the vulnerability scanner vendor.",
      "type": [
        "string"
      ]
    },
    "vulnerability.score.base": {
      "description": "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nBase scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)",
      "type": [
        "number"
      ]
    },
    "vulnerability.score.environmental": {
      "description": "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nEnvironmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)",
      "type": [
        "number"
      ]
    },
    "vulnerability.score.temporal": {
      "description": "Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nTemporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)",
      "type": [
        "number"
      ]
    },
    "vulnerability.score.version": {
      "description": "The National Vulnerability Database (NVD) provides qualitative severity rankings of \"Low\", \"Medium\", and \"High\" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification.\nCVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)",
      "type": [
        "string"
      ]
    },
    "vulnerability.severity": {
      "description": "The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)",
      "type": [
        "string"
      ]
    },
    "winlog.activity_id": {
      "description": "A globally unique identifier that identifies the current activity. The events that are published with this identifier are part of the same activity.\n",
      "type": [
        "string"
      ]
    },
    "winlog.api": {
      "description": "The event log API type used to read the record. The possible values are \"wineventlog\" for the Windows Event Log API or \"wineventlog-experimental\" for its experimental implementation.\n",
      "type": [
        "string"
      ]
    },
    "winlog.channel": {
      "description": "The name of the channel from which this record was read. This value is one of the names from the `event_logs` collection in the configuration.\n",
      "type": [
        "string"
      ]
    },
    "winlog.computerObject.domain": {
      "description": "The domain of the account that was added, modified or deleted in the event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.computerObject.id": {
      "description": "A globally unique identifier that identifies the target device.\n",
      "type": [
        "string"
      ]
    },
    "winlog.computerObject.name": {
      "description": "The account name that was added, modified or deleted in the event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.computer_name": {
      "description": "The name of the computer that generated the record. When using Windows event forwarding, this name can differ from `agent.hostname`.\n",
      "type": [
        "string"
      ]
    },
    "winlog.event_data": {
      "description": "The event-specific data. This field is mutually exclusive with `user_data`. If you are capturing event data on versions prior to Windows Vista, the parameters in `event_data` are named `param1`, `param2`, and so on, because event log parameters are unnamed in earlier versions of Windows.\n",
      "type": [
        "object"
      ]
    },
    "winlog.event_data.AuthenticationPackageName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Binary": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.BitlockerUserInputTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.BootMode": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.BootType": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.BuildVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Company": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.CorruptionActionState": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.CreationUtcTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Description": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Detail": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DeviceName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DeviceNameLength": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DeviceTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DeviceVersionMajor": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DeviceVersionMinor": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DriveName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DriverName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DriverNameLength": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.DwordVal": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.EntryCount": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ExtraInfo": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.FailureName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.FailureNameLength": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.FileVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.FinalStatus": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Group": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.IdleImplementation": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.IdleStateCount": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ImpersonationLevel": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.IntegrityLevel": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.IpAddress": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.IpPort": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.KeyLength": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LastBootGood": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LastShutdownGood": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LmPackageName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LogonGuid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LogonId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LogonProcessName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.LogonType": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MajorVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MaximumPerformancePercent": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MemberName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MemberSid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MinimumPerformancePercent": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MinimumThrottlePercent": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.MinorVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.NewProcessId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.NewProcessName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.NewSchemeGuid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.NewTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.NominalFrequency": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Number": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.OldSchemeGuid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.OldTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.OriginalFileName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Path": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PerformanceImplementation": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PreviousCreationUtcTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PreviousTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PrivilegeList": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ProcessId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ProcessName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ProcessPath": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ProcessPid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Product": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PuaCount": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.PuaPolicyId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.QfeVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Reason": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SchemaVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ScriptBlockText": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ServiceName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ServiceVersion": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ShutdownActionType": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ShutdownEventCode": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.ShutdownReason": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Signature": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SignatureStatus": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Signed": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.StartTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.State": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Status": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.StopTime": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SubjectDomainName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SubjectLogonId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SubjectUserName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.SubjectUserSid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TSId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetDomainName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetInfo": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetLogonGuid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetLogonId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetServerName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetUserName": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TargetUserSid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TerminalSessionId": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TokenElevationType": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.TransmittedServices": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.UserSid": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Version": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.Workstation": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param1": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param2": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param3": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param4": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param5": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param6": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param7": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_data.param8": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    },
    "winlog.event_id": {
      "description": "The event identifier. The value is specific to the source of the event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.keywords": {
      "description": "The keywords are used to classify an event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.opcode": {
      "description": "The opcode defined in the event. Task and opcode are typically used to identify the location in the application from where the event was logged.\n",
      "type": [
        "string"
      ]
    },
    "winlog.process.pid": {
      "description": "The process_id of the Client Server Runtime Process.\n",
      "type": [
        "integer"
      ]
    },
    "winlog.process.thread.id": {
      "description": "cisco field",
      "type": [
        "integer"
      ]
    },
    "winlog.provider_guid": {
      "description": "A globally unique identifier that identifies the provider that logged the event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.provider_name": {
      "description": "The source of the event log record (the application or service that logged the record).\n",
      "type": [
        "string"
      ]
    },
    "winlog.record_id": {
      "description": "The record ID of the event log record. The first record written to an event log is record number 1, and other records are numbered sequentially. If the record number reaches the maximum value (2^32^ for the Event Logging API and 2^64^ for the Windows Event Log API), the next record number will be 0.\n",
      "type": [
        "string"
      ]
    },
    "winlog.related_activity_id": {
      "description": "A globally unique identifier that identifies the activity to which control was transferred to. The related events would then have this identifier as their `activity_id` identifier.\n",
      "type": [
        "string"
      ]
    },
    "winlog.task": {
      "description": "The task defined in the event. Task and opcode are typically used to identify the location in the application from where the event was logged. The category used by the Event Logging API (on pre Windows Vista operating systems) is written to this field.\n",
      "type": [
        "string"
      ]
    },
    "winlog.time_created": {
      "description": "The event creation time.\n",
      "type": [
        "string"
      ]
    },
    "winlog.trustAttribute": {
      "description": "The decimal value of attributes for new trust created to a domain.\n",
      "type": [
        "string"
      ]
    },
    "winlog.trustDirection": {
      "description": "The direction of new trust created to a domain.\nPossible values are `TRUST_DIRECTION_DISABLED`, `TRUST_DIRECTION_INBOUND`, `TRUST_DIRECTION_OUTBOUND` and `TRUST_DIRECTION_BIDIRECTIONAL`\n",
      "type": [
        "string"
      ]
    },
    "winlog.trustType": {
      "description": "The account name that was added, modified or deleted in the event.\nPossible values are `TRUST_TYPE_DOWNLEVEL`, `TRUST_TYPE_UPLEVEL`, `TRUST_TYPE_MIT` and `TRUST_TYPE_DCE`\n",
      "type": [
        "string"
      ]
    },
    "winlog.user.domain": {
      "description": "The domain that the account associated with this event is a member of.\n",
      "type": [
        "string"
      ]
    },
    "winlog.user.identifier": {
      "description": "The Windows security identifier (SID) of the account associated with this event.\nIf Winlogbeat cannot resolve the SID to a name, then the `user.name`, `user.domain`, and `user.type` fields will be omitted from the event. If you discover Winlogbeat not resolving SIDs, review the log for clues as to what the problem may be.\n",
      "type": [
        "string"
      ]
    },
    "winlog.user.name": {
      "description": "Name of the user associated with this event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.user.type": {
      "description": "The type of account associated with this event.\n",
      "type": [
        "string"
      ]
    },
    "winlog.user_data": {
      "description": "The event specific data. This field is mutually exclusive with `event_data`.\n",
      "type": [
        "object"
      ]
    },
    "winlog.version": {
      "description": "The version number of the event's definition.",
      "type": [
        "integer"
      ]
    },
    "x509.alternative_names": {
      "description": "List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",
      "type": [
        "string"
      ]
    },
    "x509.issuer.common_name": {
      "description": "List of common name (CN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "x509.issuer.country": {
      "description": "List of country (C) codes",
      "type": [
        "string"
      ]
    },
    "x509.issuer.distinguished_name": {
      "description": "Distinguished name (DN) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "x509.issuer.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "x509.issuer.organization": {
      "description": "List of organizations (O) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "x509.issuer.organizational_unit": {
      "description": "List of organizational units (OU) of issuing certificate authority.",
      "type": [
        "string"
      ]
    },
    "x509.issuer.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "x509.not_after": {
      "description": "Time at which the certificate is no longer considered valid.",
      "type": [
        "string"
      ]
    },
    "x509.not_before": {
      "description": "Time at which the certificate is first considered valid.",
      "type": [
        "string"
      ]
    },
    "x509.public_key_algorithm": {
      "description": "Algorithm used to generate the public key.",
      "type": [
        "string"
      ]
    },
    "x509.public_key_curve": {
      "description": "The curve used by the elliptic curve public key algorithm. This is algorithm specific.",
      "type": [
        "string"
      ]
    },
    "x509.public_key_exponent": {
      "description": "Exponent used to derive the public key. This is algorithm specific.",
      "type": [
        "integer"
      ]
    },
    "x509.public_key_size": {
      "description": "The size of the public key space in bits.",
      "type": [
        "integer"
      ]
    },
    "x509.serial_number": {
      "description": "Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",
      "type": [
        "string"
      ]
    },
    "x509.signature_algorithm": {
      "description": "Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",
      "type": [
        "string"
      ]
    },
    "x509.subject.common_name": {
      "description": "List of common names (CN) of subject.",
      "type": [
        "string"
      ]
    },
    "x509.subject.country": {
      "description": "List of country (C) code",
      "type": [
        "string"
      ]
    },
    "x509.subject.distinguished_name": {
      "description": "Distinguished name (DN) of the certificate subject entity.",
      "type": [
        "string"
      ]
    },
    "x509.subject.locality": {
      "description": "List of locality names (L)",
      "type": [
        "string"
      ]
    },
    "x509.subject.organization": {
      "description": "List of organizations (O) of subject.",
      "type": [
        "string"
      ]
    },
    "x509.subject.organizational_unit": {
      "description": "List of organizational units (OU) of subject.",
      "type": [
        "string"
      ]
    },
    "x509.subject.state_or_province": {
      "description": "List of state or province names (ST, S, or P)",
      "type": [
        "string"
      ]
    },
    "x509.version_number": {
      "description": "Version of x509 format.",
      "type": [
        "string"
      ]
    },
    "xml": {
      "description": "cisco field",
      "type": [
        "string"
      ]
    }
  }
}