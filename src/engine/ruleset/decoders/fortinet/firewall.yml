---
name: decoder/fortinet-firewall/0

metadata:
  title: Decoder for parsing fortinet firewall logs
  description: Decoder for parsing fortinet firewall logs
  compatibility: >
    This decoder has been tested on Wazuh version 4.3
  author:
    name: Wazuh, Inc.
    date: 2023/01/10
  references:
    - https://docs.fortinet.com/document/forticlient/7.0.2/log-message-reference/327109

sources:
    - decoder/queue-localfile/0

check:
- event.original: +s_starts/<

parse:
  logpar:
    #
    # Parsers for firewall event
    #
    # <189>date=2020-04-23 time=12:32:48 devname="testswitch3" devid="someotherrouteridagain" logid="0102043014" type="event" subtype="user" level="notice" vd="root" eventtime=1587231168439640874 tz="-0500" logdesc="FSSO logon authentication status" srcip=10.10.10.10 user="elasticouser" server="elasticserver" action="FSSO-logon" msg="FSSO-logon event from FSSO_elasticserver: user elasticouser logged on 10.10.10.10"
    # <189>date=2020-04-23 time=12:32:09 devname="testswitch3" devid="someotherrouteridagain" logid="0102043039" type="event" subtype="user" level="notice" vd="root" eventtime=1587231130109462858 tz="-0500" logdesc="Authentication logon" srcip=10.10.10.10 user="elastiiiuser" authserver="FSSO_elastiauth" action="auth-logon" status="logon" msg="User elastiiiuser added to auth logon"
    # <187>date=2020-04-23 time=12:32:47 devname="testswitch3" devid="someotherrouteridagain" logid="0101037124" type="event" subtype="vpn" level="error" vd="root" eventtime=1587231168339114138 tz="-0500" logdesc="IPsec phase 1 error" msg="IPsec phase 1 error" action="negotiate" remip=8.8.4.4 locip=175.16.199.1 remport=500 locport=500 outintf="wan2" cookies="345hkjhdrs87/0000000000000000" user="N/A" group="N/A" xauthuser="N/A" xauthgroup="N/A" assignip=N/A vpntunnel="N/A" status="negotiate_error" reason="peer SA proposal not match local policy" peer_notif="NOT-APPLICABLE"
    # <190>devname="firewall" devid="FG201EEF34CD12AB" vd="root" date=2021-05-07 time=08:31:14 eventtime=1620372674880370858 tz="+0100" logid="0112053203" type="event" subtype="connector" level="information" logdesc="Dynamic address updated" fctemssn="FCTEMS0000011111" addr="FCTEMS0000011111_AV-Running" msg="Updated tag FCTEMS0000011111_AV-Running."
    #
    # Parsers for firewall traffic
    #
    # <189>date=2020-04-23 time=01:16:08 devname="testswitch1" devid="somerouterid" logid="0000000013" type="traffic" subtype="forward" level="notice" vd="OPERATIONAL" eventtime=1592961368 srcip=10.10.10.10 srcport=60899 srcintf="srcintfname" srcintfrole="lan" dstip=175.16.199.1 dstport=161 dstintf="dstintfname" dstintfrole="lan" sessionid=155313 proto=17 action="deny" policyid=0 policytype="policy" service="SNMP" dstcountry="Reserved" srccountry="Reserved" trandisp="noop" duration=0 sentbyte=0 rcvdbyte=0 sentpkt=0 appcat="unscanned" crscore=30 craction=131072 crlevel="high"
    # <188>date=2020-04-23 time=12:14:09 devname="newfirewall" devid="newrouterid" logid="0000000011" type="traffic" subtype="forward" level="warning" vd="root" eventtime=1587230049761513222 tz="-0500" srcip=192.168.1.6 srcport=53438 srcintf="port1" srcintfrole="lan" dstip=175.16.199.1 dstport=53 dstintf="wan1" dstintfrole="wan" sessionid=435234 proto=17 action="dns" policyid=26 policytype="policy" poluuid="2345de-b143-52134d8-6654f-4654sdfg16f431" policyname="elasticnewruleset" service="DNS" dstcountry="Netherlands" srccountry="Reserved" appcat="unscanned" crscore=5 craction=54144 crlevel="low"
    # <189>date=2020-04-23 time=12:11:51 devname="newfirewall" devid="newrouterid" logid="0000000020" type="traffic" subtype="forward" level="notice" vd="root" eventtime=1587229911390385486 tz="-0500" srcip=175.16.199.1 srcport=6000 srcintf="port1" srcintfrole="lan" dstip=8.6.4.7 dstport=6000 dstintf="wan1" dstintfrole="wan" sessionid=4352 proto=17 action="accept" policyid=3426 policytype="policy" poluuid="1765de8-5a13-765da73fdsfa1c" policyname="newruleelastic" service="portname" dstcountry="Netherlands" srccountry="Reserved" trandisp="snat" transip=67.43.156.12 transport=60964 appcat="unknown" applist="policylist" duration=5462 sentbyte=438650 rcvdbyte=65446 sentpkt=723417 rcvdpkt=1045601 vwlid=0 sentdelta=576 rcvddelta=728
    # <189>date=2020-04-23 time=12:11:48 devname="newfirewall" devid="newrouterid" logid="0001000014" type="traffic" subtype="local" level="notice" vd="root" eventtime=1587229908751434997 tz="-0500" srcip=81.2.69.144 identifier=0 srcintf="port1" srcintfrole="lan" dstip=81.2.69.144 dstintf="unknown0" dstintfrole="undefined" sessionid=6542345 proto=58 action="accept" policyid=0 policytype="someotherpolicy" service="icmp6/1/0" trandisp="noop" app="icmp6/25/0" duration=42 sentbyte=3014 rcvdbyte=20 sentpkt=4 rcvdpkt=0 appcat="unscanned"
    # <189>date=2020-04-23 time=13:10:57 devname="newfirewall" devid="newrouterid" logid="0001000014" type="traffic" subtype="local" level="notice" vd="root" eventtime=1587229857509058693 tz="-0400" srcip=81.2.69.144 identifier=61 srcintf="wan1" srcintfrole="wan" dstip=175.16.199.1 dstintf="unknown0" dstintfrole="undefined" sessionid=123 proto=1 action="accept" policyid=0 policytype="rulepolicy" service="PING" dstcountry="Norway" srccountry="Netherlands" trandisp="noop" app="PING" duration=20 sentbyte=0 rcvdbyte=10 sentpkt=0 rcvdpkt=40 appcat="unscanned"
    # <188>date=2020-04-23 time=12:14:39 devname="firewall3" devid="oldfwid" logid="0000000011" type="traffic" subtype="forward" level="warning" vd="root" eventtime=1587230079841464445 tz="-0500" srcip=192.168.1.1 srcport=62493 srcintf="port1" srcintfrole="lan" dstip=192.168.100.100 dstport=1235 dstintf="newinterface" dstintfrole="undefined" sessionid=54234 proto=17 action="ip-conn" policyid=49 policytype="policy" poluuid="654cc-b6542-53467u8-e45234-1566casd35f7836" policyname="oldpolicyname" user="elasticsuper" authserver="FSSO_newfsso" service="udp/12302" dstcountry="Reserved" srccountry="Reserved" appcat="unscanned" crscore=5 craction=63332144 crlevel="low"
    # <189>date=2020-04-23 time=12:14:28 devname="firewall3" devid="oldfwid" logid="0000000013" type="traffic" subtype="forward" level="notice" vd="root" eventtime=1587230069291463928 tz="-0500" srcip=81.2.69.145 srcport=56603 srcintf="port1" srcintfrole="lan" dstip=175.16.199.1 dstport=442 dstintf="wan1" dstintfrole="wan" sessionid=2345 proto=6 action="close" policyid=2365 policytype="policy" poluuid="654644c-b064-fdgdf3425-f003-1234ghdf682e05f" policyname="someoldpolicyname" user="elasticuser" group="testgroup" authserver="FSSO_something" service="HTTPS" dstcountry="Netherlands" srccountry="Reserved" trandisp="snat" transip=23.23.23.23 transport=603 appid=43540 app="Skype.Portals" appcat="Collaboration" apprisk="elevated" applist="someapplist" appact="detected" duration=126 sentbyte=923 rcvdbyte=77654 sentpkt=113 rcvdpkt=70 vwlid=4 vwlquality="Seq_num(3), alive, selected" wanin=1130 wanout=6671 lanin=1406 lanout=146506 utmaction="block" countweb=1 countapp=1 crscore=5 craction=6144 crlevel="low"
    # <189>date=2019-03-31 time=06:42:54 logid="0002000012" type="traffic" subtype="multicast" level="notice" vd="vdom1" eventtime=1554039772 srcip=172.16.200.55 srcport=60660 srcintf="port25" srcintfrole="undefined" dstip=230.1.1.2 dstport=7878 dstintf="port3" dstintfrole="undefined" sessionid=1162 proto=17 action="accept" policyid=1 policytype="multicast-policy" service="udp/7878" dstcountry="Reserved" srccountry="Reserved" trandisp="noop" duration=22 sentbyte=5940 rcvdbyte=0 sentpkt=11 rcvdpkt=0 appcat="unscanned"
    # <189>date=2019-05-10 time=14:18:54 logid="0004000017" type="traffic" subtype="sniffer" level="notice" vd="root" eventtime=1557523134021045897 srcip=67.43.156.15 srcport=50463 srcintf="port1" srcintfrole="undefined" dstip=104.80.88.154 dstport=443 dstintf="port1" dstintfrole="undefined" sessionid=2193276 proto=6 action="accept" policyid=3 policytype="sniffer" service="HTTPS" dstcountry="United States" srccountry="Canada" trandisp="snat" transip=0.0.0.0 transport=0 duration=10 sentbyte=0 rcvdbyte=0 sentpkt=0 rcvdpkt=0 appcat="unscanned" utmaction="allow" countips=1 crscore=5 craction=32768 sentdelta=0 rcvddelta=0 utmref=65162-7772
    # <189>date=2019-05-13 time=11:45:04 logid="0000000013" type="traffic" subtype="forward" level="notice" vd="vdom1" eventtime=1557773104815101919 srcip=10.1.100.11 srcport=60446 srcintf="port12" srcintfrole="undefined" dstip=172.16.200.55 dstport=80 dstintf="port11" dstintfrole="undefined" srcuuid="48420c8a-5c88-51e9-0424-a37f9e74621e" dstuuid="187d6f46-5c86-51e9-70a0-fadcfc349c3e" poluuid="3888b41a-5c88-51e9-cb32-1c32c66b4edf" sessionid=359260 proto=6 action="close" policyid=4 policytype="policy" service="HTTP" dstcountry="Reserved" srccountry="Reserved" trandisp="snat" transip=172.16.200.2 transport=60446 appid=15893 app="HTTP.BROWSER" appcat="Web.Client" apprisk="medium" applist="g-default" duration=1 sentbyte=412 rcvdbyte=2286 sentpkt=6 rcvdpkt=6 wanin=313 wanout=92 lanin=92 lanout=92 utmaction="block" countav=1 countapp=1 crscore=50 craction=2 osname="Ubuntu" mastersrcmac="a2:e9:00:ec:40:01" srcmac="a2:e9:00:ec:40:01" srcserver=0 utmref=65497-770
    # <189>date=2019-05-13 time=16:29:50 logid="0000000013" type="traffic" subtype="forward" level="notice" vd="vdom1" eventtime=1557790190452146185 srcip=10.1.100.11 srcport=44258 srcintf="port12" srcintfrole="undefined" dstip=185.244.31.158 dstport=80 dstintf="port11" dstintfrole="undefined" srcuuid="ae28f494-5735-51e9-f247-d1d2ce663f4b" dstuuid="ae28f494-5735-51e9-f247-d1d2ce663f4b" poluuid="ccb269e0-5735-51e9-a218-a397dd08b7eb" sessionid=381780 proto=6 action="close" policyid=1 policytype="policy" service="HTTP" dstcountry="Germany" srccountry="Reserved" trandisp="snat" transip=172.16.200.2 transport=44258 duration=5 sentbyte=736 rcvdbyte=3138 sentpkt=14 rcvdpkt=5 appcat="unscanned" utmaction="block" countweb=1 crscore=30 craction=4194304 osname="Ubuntu" mastersrcmac="a2:e9:00:ec:40:01" srcmac="a2:e9:00:ec:40:01" srcserver=0 utmref=65497-796
    # <189>date=2019-05-15 time=17:58:10 logid="0000000013" type="traffic" subtype="forward" level="notice" vd="root" eventtime=1557968289 srcip=10.1.100.22 srcport=46810 srcintf="port10" srcintfrole="lan" dstip=172.16.200.55 dstport=80 dstintf="port9" dstintfrole="wan" poluuid="d8ce7a90-7763-51e9-e2be-741294c96f31" sessionid=4017 proto=6 action="close" policyid=1 policytype="policy" service="HTTP" dstcountry="Reserved" srccountry="Reserved" trandisp="snat" transip=172.16.200.10 transport=46810 duration=89 sentbyte=565 rcvdbyte=9112 sentpkt=9 rcvdpkt=8 appcat="unscanned" utmaction="block" countips=1 crscore=50 craction=4096 devtype="Unknown" devcategory="None" mastersrcmac="00:0c:29:51:38:5e" srcmac="00:0c:29:51:38:5e" srcserver=0 utmref=0-302
    # <189>date=2019-05-15 time=17:45:34 logid="0000000013" type="traffic" subtype="forward" level="notice" vd="root" eventtime=1557967534 srcip=10.1.100.22 srcport=50354 srcintf="port10" srcintfrole="lan" dstip=52.216.177.83 dstport=443 dstintf="port9" dstintfrole="wan" poluuid="d8ce7a90-7763-51e9-e2be-741294c96f31" sessionid=3423 proto=6 action="server-rst" policyid=1 policytype="policy" service="HTTPS" dstcountry="United States" srccountry="Reserved" trandisp="snat" transip=172.16.200.10 transport=50354 duration=5 sentbyte=2314 rcvdbyte=5266 sentpkt=33 rcvdpkt=12 appcat="unscanned" wanin=43936 wanout=710 lanin=753 lanout=753 utmaction="block" countdlp=1 crscore=5 craction=262144 crlevel="low" devtype="Unknown" devcategory="None" mastersrcmac="00:0c:29:51:38:5e" srcmac="00:0c:29:51:38:5e" srcserver=0 utmref=0-152
    #
    # Parsers for firewall utm
    #
    # <188>date=2020-04-23 time=12:17:48 devname="testswitch1" devid="somerouterid" logid="0316013056" type="utm" subtype="webfilter" eventtype="ftgd_blk" level="warning" vd="root" eventtime=1587230269052907555 tz="-0500" policyid=100602 sessionid=1234 user="elasticuser" group="elasticgroup" authserver="elasticauth" srcip=192.168.2.1 srcport=61930 srcintf="port1" srcintfrole="lan" dstip=175.16.199.1 dstport=443 dstintf="wan1" dstintfrole="wan" proto=6 service="HTTPS" hostname="elastic.co" profile="elasticruleset" action="blocked" reqtype="direct" url="/config/" sentbyte=1152 rcvdbyte=1130 direction="outgoing" msg="URL belongs to a denied category in policy" method="domain" cat=76 catdesc="Internet Telephony"
    # <189>date=2020-04-23 time=12:17:45 devname="testswitch1" devid="somerouterid" logid="0317013312" type="utm" subtype="webfilter" eventtype="ftgd_allow" level="notice" vd="root" eventtime=1587230266314799756 tz="-0500" policyid=38 sessionid=543234 user="elasticuser" group="elasticgroup" authserver="elasticauth" srcip=192.168.2.1 srcport=65236 srcintf="port1" srcintfrole="lan" dstip=175.16.199.1 dstport=443 dstintf="wan1" dstintfrole="wan" proto=6 service="HTTPS" hostname="elastic.co" profile="elasticruleset" action="passthrough" reqtype="direct" url="/" sentbyte=3545 rcvdbyte=6812 direction="outgoing" msg="URL belongs to an allowed category in policy" method="domain" cat=23 catdesc="Web-based Email"
    # <190>date=2020-04-23 time=13:17:35 devname="testswitch1" devid="somerouterid" logid="1059028704" type="utm" subtype="app-ctrl" eventtype="signature" level="information" vd="root" eventtime=1587230255061492894 tz="-0400" appid=40568 user="elasticuser" group="elasticgroup" authserver="elasticauth" srcip=192.168.2.1 dstip=175.16.199.1 srcport=59790 dstport=443 srcintf="LAN" srcintfrole="lan" dstintf="wan1" dstintfrole="wan" proto=6 service="SSL" direction="outgoing" policyid=12 sessionid=453234 applist="elasticruleset" action="pass" appcat="Web.Client" app="HTTPS.BROWSER" hostname="elastic.co" incidentserialno=23465 url="/" msg="Web.Client: HTTPS.BROWSER," apprisk="medium" scertcname="test.elastic.co"
    # <189>date=2020-04-23 time=12:17:29 devname="testswitch1" devid="somerouterid" logid="1501054802" type="utm" subtype="dns" eventtype="dns-response" level="notice" vd="root" eventtime=1587230249360109339 tz="-0500" policyid=26 sessionid=543234 srcip=192.168.2.1 srcport=53430 srcintf="port1" srcintfrole="lan" dstip=175.16.199.1 dstport=53 dstintf="wan1" dstintfrole="wan" proto=17 profile="test" xid=2234 qname="elastic.example.com" qtype="A" qtypeval=1 qclass="IN" ipaddr="175.16.199.1" msg="Domain is monitored" action="pass" cat=23 catdesc="Web-based Email"
    - event.original: \<<~log.head_message>><~log.payload_messge>

normalize:
  - check:
      - ~log.payload_messge: +ef_exists
    logpar:
      - ~log.payload_messge: <~tmp/kv/=/ /"/'>

  # Mapping for all fortinet-firewall types: event, traffic & utm
  - check:
    - ~tmp: +ef_exists
    map:
      - observer.serial_number: $~tmp.devid
      - observer.name: $~tmp.devname
      - event.dataset: "fortinet.firewall"
      - event.module: "fortinet"
      - event.outcome: "sucess"
      - event.timezone: $~tmp.tz
      - log.level: $~tmp.level
      - event.action: $~tmp.action
      - network.application: $~tmp.app
      - source.packets: $~tmp.sentpkt
      # TODO: parse to number, but is string
      - event.code: $~tmp.logid
      - event.kind: $~tmp.type
      - message: $~tmp.msg
      - rule.description: $~tmp.logdesc
      - event.reason: $~tmp.reason
      - ~tmp.addrgrp: $~tmp.addr
      - destination.bytes: $~tmp.rcvdbyte
      - event.duration: $~tmp.duration
      - source.bytes: $~tmp.sentbyte
      - network.iana_number: $~tmp.proto
      - network.protocol: $~tmp.service
      - observer.egress.interface.name: $~tmp.dstintf
      - observer.ingress.interface.name: $~tmp.srcintf
      - rule.id: $~tmp.policyid
      - rule.name: $~tmp.policyname
      - rule.uuid: $~tmp.poluuid
      - destination.packets: $~tmp.rcvdpkt
      - source.nat.ip: $~tmp.transip
      - source.nat.ip: $~tmp.transip
      - source.nat.port: $~tmp.transport
      - source.user.group.name: $~tmp.group
      - ~tmp.timestamp: +s_concat/$~tmp.date/T/$~tmp.time/.000

  # Check-mapping for all fortinet-firewall types: event, traffic & utm
  - check:
    - ~tmp.tz: +ef_exists
    map:
      - ~tmp.timestamp: +s_concat/$~tmp.date/T/$~tmp.time/.000/$~tmp.tz
  - check:
    - ~tmp.appcat: +ef_exists
    - ~tmp.catdesc: +ef_not_exists
    map:
      - rule.category: $~tmp.appcat
  - check:
    - ~tmp.appcat: +ef_not_exists
    - ~tmp.catdesc: +ef_exists
    map:
      - rule.category: $~tmp.catdesc
  - check:
    - ~tmp.policytype: +ef_exists
    map:
      - rule.ruleset: $~tmp.policytype
  - check:
    - ~tmp.policytype: +ef_not_exists
    - ~tmp.profile: +ef_exists
    map:
      - rule.ruleset: $~tmp.profile
  - check:
    - ~tmp.policytype: +ef_not_exists
    - ~tmp.profile: +ef_not_exists
    - ~tmp.applist: +ef_exists
    map:
      - rule.ruleset: $~tmp.applist
  - check:
    - ~tmp.user: +ef_exists
    # TODO: it does't work
    # - ~tmp.user: +s_ne/N\/A
    map:
      - source.user.name: $~tmp.user
      - related.user: [$source.user.name]
  - check:
    - ~tmp.dstip: +ef_exists
    map:
      - destination.ip: $~tmp.dstip
  - check:
    - ~tmp.remip: +ef_exists
    - ~tmp.dstip: +ef_not_exists
    map:
      - destination.ip: $~tmp.remip
  - check:
    - ~tmp.remport: +ef_exists
    map:
      - destination.port: $~tmp.remport
  - check:
    - ~tmp.dstport: +ef_exists
    map:
      - destination.port: $~tmp.dstport
  - check:
    - ~tmp.srcip: +ef_exists
    map:
      - source.ip: $~tmp.srcip
  - check:
    - ~tmp.locip: +ef_exists
    - ~tmp.srcip: +ef_not_exists
    map:
      - source.ip: $~tmp.locip
  - map:
    - related.ip: [$source.ip]
  - check:
    - ~tmp.locport: +ef_exists
    map:
      - source.port: $~tmp.locport
  - check:
    - ~tmp.srcport: +ef_exists
    map:
      - source.port: $~tmp.srcport
  - check:
    - log.level: error
    map:
      - event.outcome: failure
  - check:
    - source.ip: +ef_exists
    map:
      - ~tmp.ip: +s_ip_version/$source.ip
  - check:
    - destination.ip: +ef_exists
    - source.ip: +ef_not_exists
    map:
      - ~tmp.ip: +s_ip_version/$destination.ip
  - map:
    - network.type: +s_lo/$~tmp.ip

  # Check-mapping for fortinet-event
  - check:
    - ~tmp.subtype: user
    - event.action: +r_match/(?i)logon
    map:
      - event.type: [start, user]
  - check:
    - ~tmp.subtype: user
    - event.action: +r_match/(?i)logoff
    map:
      - event.type: [end, user]
  - map:
    - event.category: [authentication]
  - check:
    - ~tmp.subtype: system
    map:
      - event.category: [host]
      - event.type: [info]
      - event.outcome: +ef_delete

  # Check-mapping for fortinet-traffic
  - check:
    - ~tmp.subtype: vpn
    map:
      - event.category: [network]
      - event.type: [connection]
  - check: (+s_eq/~tmp.type/traffic) OR (+s_eq/~tmp.type/utm)
    map:
      - event.category: [network]

  # Check-mapping for traffic & utm
  - check:
    - ~tmp.type: traffic
    map:
      - event.type: [connection]
      - event.kind: event
  - check:
    - ~tmp.type: utm
    map:
      - event.kind: event
  - check: (+s_eq/~tmp.type/utm) AND
            ((+s_eq/event.action/block) OR (+s_eq/event.action/blocked) OR (+s_eq/event.action/deny) OR
            (+s_eq/event.action/close) OR (+s_eq/event.action/server-rst) OR (+s_eq/event.action/dropped))
    map:
      - event.type: +a_append/denied
  - check: (+s_eq/~tmp.type/traffic) AND
            ((+s_eq/event.action/block) OR (+s_eq/event.action/blocked) OR (+s_eq/event.action/deny) OR
            (+s_eq/event.action/close) OR (+s_eq/event.action/server-rst) OR (+s_eq/~tmp.utmaction/block))
    map:
      - event.type: +a_append/denied
  - check:
    - ~tmp.type: traffic
    - ~tmp.utmaction: +ef_not_exists
    - event.action: +s_ne/block
    - event.action: +s_ne/blocked
    - event.action: +s_ne/deny
    - event.action: +s_ne/close
    - event.action: +s_ne/server-rst
    map:
      - event.type: +a_append/allowed
  - check: (+s_eq/~tmp.type/utm) AND ((+s_eq/event.action/pass) OR (+s_eq/event.action/passthrough) OR (+s_eq/event.action/exempt))
    map:
      - event.type: +a_append/allowed
  - check:
    - ~tmp.type: traffic
    - event.action: allow
    map:
      - event.type: +a_append/allowed
  - check:
    - ~tmp.type: traffic
    - event.action: +s_eq/start
    map:
      - event.type: +a_append/start
  - check:
    - ~tmp.type: traffic
    - event.action: +s_ne/start
    map:
      - event.type: +a_append/end
  - check:
    - ~tmp.type: traffic
    - event.action: +s_ne/deny
    - network.application: +ef_exists
    map:
      - event.type: +a_append/protocol
  - check: (+ef_exists/destination.ip) AND ((+s_eq/~tmp.type/traffic) OR (+s_eq/~tmp.type/utm))
    map:
      - related.ip: +a_append/$destination.ip
  - map:
    - fortinet.firewall.type: $event.kind
  - check: (+s_eq/~tmp.type/traffic) OR (+s_eq/~tmp.type/utm)
    map:
      - fortinet.firewall.type: $~tmp.type
  - check:
    - ~tmp.type: traffic
    - network.packets: +ef_not_exists
    - source.packets: +ef_exists
    map:
    - network.packets: $source.packets
  - check:
    - ~tmp.type: utm
    - ~tmp.subtype: dns
    map:
      - event.type: +a_append/info

  # General mapping
  - map:
      - \@timestamp: $~tmp.timestamp
      - event.start: $~tmp.timestamp
      - fileset.name: firewall
      - fortinet.firewall.addrgrp: $~tmp.addrgrp
      - fortinet.firewall.fctemssn: $~tmp.fctemssn
      - fortinet.firewall.action: $event.action
      - fortinet.firewall.craction: $~tmp.craction
      - fortinet.firewall.crlevel: $~tmp.crlevel
      - fortinet.firewall.crscore: $~tmp.crscore
      - fortinet.firewall.dstcountry: $~tmp.dstcountry
      - fortinet.firewall.srccountry: $~tmp.srccountry
      - fortinet.firewall.dstintfrole: $~tmp.dstintfrole
      - fortinet.firewall.sessionid: $~tmp.sessionid
      - fortinet.firewall.srcintfrole: $~tmp.srcintfrole
      - fortinet.firewall.trandisp: $~tmp.trandisp
      - fortinet.firewall.method: $~tmp.method
      - fortinet.firewall.profile: $~tmp.profile
      - fortinet.firewall.sn: $~tmp.sn
      - fortinet.firewall.connection_type: $~tmp.connection_type
      - fortinet.firewall.count: $~tmp.count
      - fortinet.firewall.fctuid: $~tmp.fctuid
      - fortinet.firewall.ip: $~tmp.ip
      - fortinet.firewall.license_limit: $~tmp.license_limit
      - fortinet.firewall.name: $~tmp.name
      - fortinet.firewall.cookies: $~tmp.cookies
      - fortinet.firewall.init: $~tmp.init
      - fortinet.firewall.mode: $~tmp.mode
      - fortinet.firewall.outintf: $~tmp.outintf
      - fortinet.firewall.result: $~tmp.result
      - fortinet.firewall.role: $~tmp.role
      - fortinet.firewall.stage: $~tmp.stage
      - fortinet.firewall.peer_notif: $~tmp.peer_notif
      - fortinet.firewall.bandwidth: $~tmp.bandwidth
      - fortinet.firewall.cpu: $~tmp.cpu
      - fortinet.firewall.disk: $~tmp.disk
      - fortinet.firewall.disklograte: $~tmp.disklograte
      - fortinet.firewall.fazlograte: $~tmp.fazlograte
      - fortinet.firewall.freediskstorage: $~tmp.freediskstorage
      - fortinet.firewall.mem: $~tmp.mem
      - fortinet.firewall.setuprate: $~tmp.setuprate
      - fortinet.firewall.sysuptime: $~tmp.sysuptime
      - fortinet.firewall.totalsession: $~tmp.totalsession
      - fortinet.firewall.authproto: $~tmp.authproto
      - fortinet.firewall.interface: $~tmp.interface
      - fortinet.firewall.status: $~tmp.status
      - fortinet.firewall.subtype: $~tmp.subtype
      - fortinet.firewall.tunnelid: $~tmp.tunnelid
      - fortinet.firewall.tunnelip: $~tmp.tunnelip
      - fortinet.firewall.tunneltype: $~tmp.tunneltype
      - fortinet.firewall.ui: $~tmp.ui
      - fortinet.firewall.vd: $~tmp.vd
      - fortinet.firewall.used_for_type: $~tmp.used_for_type
      - fortinet.firewall.vpntunnel: $~tmp.vpntunnel
      - fortinet.firewall.authserver: $~tmp.authserver
      - fortinet.firewall.server: $~tmp.server
      - fortinet.firewall.version: $~tmp.version
      - fortinet.firewall.applist: $~tmp.applist
      - fortinet.firewall.app: $network.application
      - fortinet.firewall.rcvddelta: $~tmp.rcvddelta
      - fortinet.firewall.sentdelta: $~tmp.sentdelta
      - fortinet.firewall.vwlid: $~tmp.vwlid
      - fortinet.firewall.identifier: $~tmp.identifier
      - fortinet.firewall.appid: $~tmp.appid
      - fortinet.firewall.apprisk: $~tmp.apprisk
      - fortinet.firewall.appact: $~tmp.appact
      - fortinet.firewall.vwlquality: $~tmp.vwlquality
      - fortinet.firewall.wanin: $~tmp.wanin
      - fortinet.firewall.wanout: $~tmp.wanout
      - fortinet.firewall.lanin: $~tmp.lanin
      - fortinet.firewall.lanout: $~tmp.lanout
      - fortinet.firewall.utmaction: $~tmp.utmaction
      - fortinet.firewall.countweb: $~tmp.countweb
      - fortinet.firewall.countapp: $~tmp.countapp
      - fortinet.firewall.countips: $~tmp.countips
      - fortinet.firewall.utmref: $~tmp.utmref
      - fortinet.firewall.countav: $~tmp.countav
      - fortinet.firewall.osname: $~tmp.osname
      - fortinet.firewall.mastersrcmac: $~tmp.mastersrcmac
      - fortinet.firewall.srcmac: $~tmp.srcmac
      - fortinet.firewall.srcserver: $~tmp.srcserver
      - fortinet.firewall.dstuuid: $~tmp.dstuuid
      - fortinet.firewall.srcuuid: $~tmp.srcuuid
      - fortinet.firewall.devcategory: $~tmp.devcategory
      - fortinet.firewall.devtype: $~tmp.devtype
      - fortinet.firewall.countdlp: $~tmp.countdlp
      - fortinet.firewall.cat: $~tmp.cat
      - fortinet.firewall.eventtype: $~tmp.eventtype
      - fortinet.firewall.method: $~tmp.method
      - fortinet.firewall.reqtype: $~tmp.reqtype
      - fortinet.firewall.incidentserialno: $~tmp.incidentserialno
      - fortinet.firewall.qtypeval: $~tmp.qtypeval
      - url.domain: $~tmp.hostname
      - url.original: $~tmp.url
      - url.path: $~tmp.url
      - tls.server.x509.subject.common_name: $~tmp.scertcname
      - source.mac: $~tmp.mastersrcmac
      - network.bytes: $source.bytes
      - network.direction: $~tmp.dir
      - dns.id: $~tmp.xid
      - dns.question.class: $~tmp.qclass
      - dns.question.name: $~tmp.qname
      - dns.question.type: $~tmp.qtype
      - dns.resolved_ip: [$destination.ip]
      - related.hosts: [$~tmp.qname]

  # Constants
  - map:
      - observer.product: Fortigate
      - observer.type: firewall
      - observer.vendor: Fortinet
      - service.type: fortinet
      - input.type: log
      - tags: [fortinet-firewall, forwarded]

  # Clean variables
  - map:
    - ~tmp: +ef_delete
    - ~log: +ef_delete
  #
  # TODO
  #
  # TODO: can't multiply by 100000000
  # - check:
  #   - event.duration: +ef_exists
  #   map:
  #   - event.duration: +i_calc/mul/100000000
  #
  # TODO: Failed to assign the fields 'network.community id' and 'network.transport' because value not found in event
  #
  #- check: (+s_eq/~tmp.type/traffic) OR (+s_eq/~tmp.type/utm)
  #  map:
  #    - network.community_id: "1:8bNES6YDdszaPi28xM3VcSwJdbg="
  #    - network.transport: udp/tcp
  #
  # TODO: Could not map field 'log.offset' due to inability to persist values into yml variables.
  #       Also, there is no helper that allows obtaining the size of an event.
  #
  # - log.offset: 0
  #
  # TODO: There is no geolocation information to be able to decode this segment of the event
  #
  # - source.geo.city_name": "Changchun"
  # - source.geo.continent_name": "Asia"
  # - source.geo.country_iso_code": "CN"
  # - source.geo.country_name": "China"
  # - source.geo.location.lat": 43.88
  # - source.geo.location.lon": 125.3228
  # - source.geo.region_iso_code": "CN-22"
  # - source.geo.region_name": "Jilin Sheng"
  # - source.as.number": 1221
  # - source.as.organization.name": "Telstra Pty Ltd"
  # - destination.geo.city_name": "Changchun"
  # - destination.geo.continent_name": "Asia"
  # - destination.geo.country_iso_code": "CN"
  # - destination.geo.country_name": "China"
  # - destination.geo.location.lat": 43.88
  # - destination.geo.location.lon": 125.3228
  # - destination.geo.region_iso_code": "CN-22"
  # - destination.geo.region_name": "Jilin Sheng"