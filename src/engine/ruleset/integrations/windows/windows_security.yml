name: decoder/windows_security/0

sources: 
  - decoder/windows_event_channel/0

metadata:
  description: Decoder for Windows Security events

check:
  - ~event_channel.Event.System.Provider.@Name: Microsoft-Windows-Security-Auditing


normalize:
 - map:
    - event.module: security
    - event.code: $~event_channel.Event.System.EventID.#text

    # Set categorization fields
    - event: +kvdb_get_merge/win_security_categories/$~event_channel.Event.System.EventID.#text
    
    # Set Logon Type
    - event.logon: +kvdb_get/win_logon_types/$~event_channel.Event.EventData.LogonType
    
    # Set User Account Control
    # NewUacValue 
    # Correct implementation needs bitwise operations - Opting to use raw value
    - event.UserAccountControl: $~event_channel.Event.EventData.NewUacValue
    
    
    # Set Kerberos Ticket Options
    # TicketOptionsDescription - Needs bitwise operations

    # Set Kerberos Encryption Types
    - event: +kvdb_get_merge/win_security_ticket_encryption_types/$~event_channel.Event.EventData.TicketEncryptionType
    
    # Set Kerberos Ticket Status Codes
    - event: +kvdb_get_merge/win_security_kerberos_status_types/$~event_channel.Event.EventData.Status
    
    # Set Service Type and Name
    # Service related fields
    - event.service.name: $~event_channel.Event.EventData.ServiceName
    - event.service: +kvdb_get_merge/win_security_service_types/$~event_channel.Event.EventData.ServiceType
    
    # Set Audit Information
    # Event sub category - Need to generate actual message
    - event.Category: +kvdb_get_merge/win_security_category_guids/$~event_channel.Event.EventData.SubcategoryGuid.#0
    - event.SubCategory: +kvdb_get_merge/win_security_category_guids/$~event_channel.Event.EventData.SubcategoryGuid.#1

    # map helper arrays
    - ~id_target_user_array: ["4624","4625","4634","4647","4648","4768","4769","4770","4771","4776","4964"]
    - ~id_memberName_array: ["4727", "4728", "4729", "4730", "4731", "4732", "4733", "4734", "4735",
                              "4737", "4744", "4745", "4746", "4747", "4748", "4749", "4750", "4751",
                              "4752", "4753", "4754", "4755", "4756", "4757", "4758", "4759", "4760",
                              "4761", "4762", "4763", "4764", "4799"]

    # Decode message table
    # Failure reason for logon
 - check:
       - ~event_channel.Event.EventData.FailureReason: +ef_exists
   map:
        - event.logon.failure.reason: +kvdb_get/win_failure_codes_description/$~event_channel.Event.EventData.FailureReason
    # Audit Policy Changes
    # Needs for each element of an array
    #- check:
    #  - ~event_channel.Event.EventData.AuditPolicyChanges: +ef_exists
    #  map:
    #    - ~tmp.array_policy_changes: +s_to_array/$~event_channel.Event.EventData.AuditPolicyChanges/,
    #    - event.AuditPolicyChangesDescription: +kvdb_for_each/win_failure_codes_description/$~tmp.array_policy_changes
    # Access List
 - check:
      - ~event_channel.Event.EventData.AccessList: +ef_exists
   map:
        - _tmp.array_access_masks: +s_to_array/$~event_channel.Event.EventData.AccessMask/,
        - event.AccessMask: +kvdb_for_each/win_failure_codes_description/$_tmp.array_access_masks
    #
    # Access Mask - # Requires bitwise operations
    #- check:
    #  - ~event_channel.Event.EventData.AccessMask: +ef_exists
    #  map:
    #   - _tmp.array_policy_changes: +s_to_array/$~event_channel.Event.EventData.AuditPolicyChanges/ #whitespace spearator?
    #   - _tmp.accesMask |= _tmp.array_policy_changes #bitwise OR add?
       

    # Conditional logon status and substatus
    # 4625 and 4776 Set Status and SubStatus
 - check: 
      - event.code: +i_eq/4625 OR +i_eq/4776
   map:
        - event.logon.failure.status: +kvdb_get/win_logon_status/$~event_channel.Event.EventData.Status
        - event.logon.failure.sub_status: +kvdb_get/win_logon_status/$~event_channel.Event.EventData.SubStatus

    # Set trust type
    - event.trustType: +kvdb_get/win_trust_types/$~event_channel.Event.EventData.TdoType

    # Set Trust Direction
    - event.trustDirection: +kvdb_get/win_trust_direction/$~event_channel.Event.EventData.TdoDirection

    # Set Trust Attributes
    - event.trustAttribute: +kvdb_get/win_trust_attribute/$~event_channel.Event.EventData.TdoAttributes

    # Add Session Events
 - check: 
      - event.code: +i_ne/4778 OR +i_ne/4779
   map:
        # AccountName to user.name and related.user
        - event.user.name: ~event_channel.Event.EventData.AccountName
        - event.related.user: ~event_channel.Event.EventData.AccountName
        # AccountDomain to user.domain
        - event.user.domain: ~event_channel.Event.EventData.AccountDomain
        # ClientAddress to source.ip and related.ip
        - event.source.ip: ~event_channel.Event.EventData.ClientAddress
        - event.related.ip: ~event_channel.Event.EventData.ClientAddress
        # ClientName to source.domain
        - event.source.domain: ~event_channel.Event.EventData.ClientName
        # LogonID to winlog.logon.id
        - event.logon.id: ~event_channel.Event.EventData.LogonID
    
    # Copy Target User
    
 - check:
      - ~id_target_user_array: +a_contains/$event.code
   map:
      - ~is_copy_target_user: true
    # TargetUserSid to user.id or user.target.id  
 - check: 
      - event.user.id: +ef_not_exists
      - ~is_copy_target_user: +t_is_true
   map:
        - event.user.id: ~event_channel.Event.EventData.TargetUserSid
        - event.user.id: ~event_channel.Event.EventData.TargetSid
 - check:
      - event.user.id: +ef_exists
      - ~id_array: +t_is_true
   map:
        - event.user.target.id: ~event_channel.Event.EventData.TargetUserSid
        - event.user.target.id: ~event_channel.Event.EventData.TargetSid
 # TargetUserName to related.user and user.name or user.target.name
 - check: 
      - event.user.name: +ef_not_exists
      - ~is_copy_target_user: +t_is_true
   map:
        - event.user.name: ~event_channel.Event.EventData.TargetUserName
 - check: 
      - event.user.name: +ef_exists
      - ~is_copy_target_user: +t_is_true
   map:
        - event.user.target.name: ~event_channel.Event.EventData.TargetUserName
 - check: 
      - ~is_copy_target_user: +t_is_true  
   map:
        - event.related.user: +s_concat/$~event_channel.Event.EventData.TargetUserName # may be moved up?
    # TargetUserDomain to user.domain or user.target.domain
 - check:
      - ~is_copy_target_user: +t_is_true
      - event.user.domain: +ef_not_exists
   map:
        - event.user.domain: ~event_channel.Event.EventData.TargetDomainName
 - check:
      - ~is_copy_target_user: +t_is_true
      - event.user.domain: +ef_exists
   map:
        - event.user.target.domain: ~event_channel.Event.EventData.TargetDomainName

    # Copy MemberName to User and User to Group
 - check:
        - ~id_memberName_array: +a_contains/$event.code
   map:
        - is_copy_MemberName: true
        - ~split_memberName: +s_to_array/$~event_channel.Event.EventData.MemberName/,
        - ~split_memberName.0: +s_replace/CN=/ 
        - event.member.name: $~split_memberName.0
        - event.group.id: $~event_channel.Event.EventData.TargetUserSid
        - event.group.id: $~event_channel.Event.EventData.TargetSid 
        - event.group.name: $~event_channel.Event.EventData.TargetUserName
        - ~event_channel.Event.EventData.TargetDomainName: +s_replace/DC=/
        - event.goup.domain: $~event_channel.Event.EventData.TargetDomainName
        - event.user.target.group.id: event.group.id
        - event.user.target.group.name: event.group.name
        - event.user.target.group.domain: event.group.domain
 - check:   
        # - ~split_memberName: +a_ge/4
        - is_copy_MemberName: +t_is_true
   map:
        - ~split_memberName.3: +s_replace/DC=/ 
        - event.user.target.domain: $~split_memberName.3

 # Copy Target User to Computer Object
 - check:
    - event.code: +i_eq/4741 OR +i_eq/4742 OR +i_eq/4743
   map:
    - event.computerObject.id: $~event_channel.Event.EventData.TargetSid
    - event.computerObject.name: $~event_channel.Event.EventData.TargetUserName
    - event.computerObject.domain: $~event_channel.Event.EventData.TargetDomainName
        