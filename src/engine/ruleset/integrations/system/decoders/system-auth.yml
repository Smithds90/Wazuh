name: decoder/system-auth/0

sources:
  - decoder/syslog/0

metadata:
  module: system-auth
  title: system-auth logs
  description: Decoder for system athenticated action logs.
  compatibility: This integration was tested with logs from OS like Ubuntu 12.04, Centos 7, and macOS Sierra.
  versions:
    - "any"
  author:
    name: Wazuh Inc.
    email: info@wazuh.com
    date: 2023-05-15
  references:
    - https://www.loggly.com/ultimate-guide/linux-logging-basics/

definitions:
  isAuthProcess: >-
    process.name=="sshd"
    OR process.name=="sudo"
    OR process.name=="groupadd"
    OR process.name=="useradd"
    OR process.name=="groupdel"
    OR process.name=="groupmod"
    OR process.name=="userdel"
    OR process.name=="usermod"
    OR process.name=="CRON"

#TODO: Once the events arrive tagged, uncommnet following line and comment previous
#  isAuthProcess: (process.name=="sshd" OR process.name=="sudo" OR process.name=="groupadd" OR process.name=="useradd" OR process.name=="groupdel" OR process.name=="groupmod" OR process.name=="userdel" OR process.name=="usermod") AND event.module=="system"

check: $isAuthProcess

normalize:
  - map:
      - event.module: "system"
      - event.dataset: "system-auth"
      - event.outcome: "success"
      - event.kind: "event"
      - wazuh.decoders: +array_append/system-auth

  - check:
      - process.name: "sshd"
    logpar:
      - message: <~system.auth.ssh.event> <~system.auth.ssh.method> for <user.name> from <source.ip> port <source.port> ssh2(?:<~>)
      - message: <~system.auth.ssh.event> user <user.name> from <source.ip> port <source.port>
      - message: Did not receive identification string from <source.ip>

  - check:
      - ~system.auth.ssh.event: "Accepted"
    map:
      - event.type: +array_append/info
      - event.category: +array_append/authentication/session
      - event.action: "ssh_login"
      - event.outcome: "success"

  - check:
      - process.name: "sudo"
    logpar:
      - message: "<user.name> : <~system.auth.sudo.error> ; TTY=<~system.auth.sudo.tty> ; PWD=<~system.auth.sudo.pwd> ; USER=<user.effective.name> ; COMMAND=<~system.auth.sudo.command>"
      - message: "<user.name> : TTY=<~system.auth.sudo.tty> ; PWD=<~system.auth.sudo.pwd> ; USER=<user.effective.name> ; COMMAND=<~system.auth.sudo.command>"
    map:
      - event.category: +array_append/process
      - event.type: +array_append/start

  - map:
      - ~system.auth.tty.array: +split/$~system.auth.sudo.tty/\/

  - check:
      - message: +contains/pam_
    logpar:
      - message: "pam_unix\\(<~>:<~>\\): session <~system.auth.pam.session.action> for user <~system.auth.pam.foruser.name> by <~system.auth.pam.byuser.name>\\(uid=\\)"
      - message: "pam_unix\\(<~>:<~>\\): session <~system.auth.pam.session.action> for user <~system.auth.pam.foruser.name> by \\(uid=<user.id>\\)"
      - message: "pam_unix\\(<~>:<~>\\): session <~system.auth.pam.session.action> for user <~system.auth.pam.foruser.name>"
      - message: "pam_succeed_if\\(<~>:<~>\\): requirement <~> not met by user <user.name>"
      - message: "pam_unix\\(<~>:<~>\\): authentication <~system.auth.pam.session.action>; logname=<~system.auth.pam.foruser.name>?<~/literal/> uid=<user.id>?<~/literal/> euid=<user.effective.id>?<~/literal/> tty=<~system.auth.pam.tty>?<~/literal/> ruser=<~system.auth.pam.remote.user>?<~/literal/> rhost=<source.ip>?<~/literal/>  user=<user.name>?<~/literal/>"
    map:
      - event.category: +array_append/authentication/session

  - check:
      - ~system.auth.pam.byuser.name: +string_not_equal/""
    map:
      - user.name: $~system.auth.pam.byuser.name
      - user.effective.name: $~system.auth.pam.foruser.name

  - check:
      - ~system.auth.pam.byuser.name: +not_exists
    map:
      - user.name: $~system.auth.pam.foruser.name

  - check:
      - ~system.auth.pam.session.action: "opened"
    map:
      - event.type: +array_append/start

  - check:
      - ~system.auth.pam.session.action: "closed"
    map:
      - event.type: +array_append/end

  - check: process.name=="groupadd" OR process.name=="useradd"
    logpar:
      - message: "new group: name=<group.name>, GID=<group.id>"
      - message: "new user: name=<user.name>, UID=<user.id>, GID=<group.id>, home=<~system.auth.useradd.home>, shell=<~system.auth.useradd.shell>(?,<~>)"
      - message: "group added to <file.name>: name=<group.name>(?, GID=<group.id>)"
      - message: "<~system.auth.event.outcome> adding user '<user.name>'(?,<~>)"

  - check:
      - ~system.auth.event.outcome: "failed"
    map:
      - event.outcome: "failure"

  - check: ~system.auth.ssh.event=="Invalid" OR ~system.auth.ssh.event=="Failed"
    map:
      - event.type: +array_append/info
      - event.category: +array_append/authentication
      - event.action: "ssh_login"
      - event.outcome: "failure"

  - check: process.name=="groupadd" OR process.name=="groupdel" OR process.name=="groupmod" OR process.name=="useradd" OR process.name=="userdel" OR process.name=="usermod"
    map:
      - event.category: +array_append/iam

  - check: process.name=="useradd" OR process.name=="userdel" OR process.name=="usermod"
    map:
      - event.type: +array_append/user

  - check: process.name=="groupadd" OR process.name=="groupdel" OR process.name=="groupmod"
    map:
      - event.type: +array_append/group

  - check: process.name=="groupadd" OR process.name=="useradd"
    map:
      - event.type: +array_append/creation

  - check: process.name=="groupdel" OR process.name=="userdel"
    map:
      - event.type: +array_append/deletion

  - check: process.name=="groupmod" OR process.name=="usermod"
    map:
      - event.type: +array_append/change

  - map:
      - user.name: +replace/"/
      - user.name: +replace/'/
      - ~system.auth.pam.foruser.name: +replace/"/
      - ~system.auth.pam.foruser.name: +replace/'/
      - ~system.auth.pam.byuser.name: +replace/"/
      - ~system.auth.pam.byuser.name: +replace/'/
      - user.effective.name: +replace/"/
      - user.effective.name: +replace/'/
      - source.address: $source.ip
      - related.user: +array_append/$user.name/$user.effective.name
      - related.ip: +array_append/$source.ip
      - process.command_line: $~system.auth.sudo.command
      - process.tty.char_device.major: $~system.auth.tty.array.1
      - process.working_directory: $~system.auth.sudo.pwd
      - ~TAG: +delete
      - ~system: +delete
