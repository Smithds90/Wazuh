#!/bin/sh

# Copyright (C) 2015, Wazuh Inc.
# All rights reserved.
# Wazuh.com

# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Shell script that updates 'Vulnerability Detector' to 'Vulnerability Detection'

# Function: isConfigPresent
# Description: Function that checks if a 'configuration' is present in the 'ossec.conf' file.
# Parameters:
#   $1: Path to the ossec.conf file.
#   $2: Configuration tag.
isConfigPresent()
{
    local OSSEC_CONF_PATH="$1"
    local CONFIG_PATTERN="$2"

    if ( grep -q "$CONFIG_PATTERN" "$OSSEC_CONF_PATH" ); then
        return 0
    fi

    return 1
}

# Function: updateVulnerabilityDetector
# Description: Function that updates the old (< v4.8) 'Vulnerability Detector' configuration with the latest one.
# Parameters:
#   $1: Path to the ossec.conf file.
#   $2: Path to the new 'Vulnerability Detection' template.
#   $3: Path to the new 'Indexer' template.
updateVulnerabilityDetector()
{
    local OSSEC_CONF_PATH="$1"
    local VULN_TEMPLATE_PATH="$2"
    local INDEXER_TEMPLATE_PATH="$3"

    if isConfigPresent "$OSSEC_CONF_PATH" "<vulnerability-detector>"; then
        local OSSEC_CONFIGURATION_FILE_TMP="$1.tmp"

        touch $OSSEC_CONFIGURATION_FILE_TMP

        local OSSEC_CONFIGURATION_FILE_BEFORE_VD="$(sed -ne '/<vulnerability-detector>/q;p' $OSSEC_CONF_PATH)"
        local OSSEC_CONFIGURATION_FILE_AFTER_VD="$(sed -e '1,/<\/vulnerability-detector>/d' $OSSEC_CONF_PATH)"

        # Append current config preceding the old 'Vulnerability Detector' config.
        printf "%s\n\n" "${OSSEC_CONFIGURATION_FILE_BEFORE_VD}" >> $OSSEC_CONFIGURATION_FILE_TMP

        # Append new 'Vulnerability Detection' config.
        cat ${VULN_TEMPLATE_PATH} >> $OSSEC_CONFIGURATION_FILE_TMP
        printf "\n" >> $OSSEC_CONFIGURATION_FILE_TMP

        # Append new 'Indexer' config.
        cat ${INDEXER_TEMPLATE_PATH} >> $OSSEC_CONFIGURATION_FILE_TMP

        # Append current config succeeding the old 'Vulnerability Detector' config.
        printf "%s\n" "$OSSEC_CONFIGURATION_FILE_AFTER_VD" >> $OSSEC_CONFIGURATION_FILE_TMP

        mv $OSSEC_CONFIGURATION_FILE_TMP $OSSEC_CONF_PATH
    else
        if ! isConfigPresent "$OSSEC_CONF_PATH" "<vulnerability-detection>"; then
            local OSSEC_CONFIGURATION_FILE_TMP="$1.tmp"

            touch $OSSEC_CONFIGURATION_FILE_TMP

            local OSSEC_CONFIGURATION_FILE_BEFORE_NEW_VD="$(sed -e '/<\/sca>/q' $OSSEC_CONF_PATH)"
            local OSSEC_CONFIGURATION_FILE_AFTER_NEW_VD="$(sed -ne '/<!-- File integrity monitoring -->/,$p' $OSSEC_CONF_PATH)"

            # Append current config preceding the old 'Vulnerability Detector' config.
            printf "%s\n\n" "${OSSEC_CONFIGURATION_FILE_BEFORE_NEW_VD}" >> $OSSEC_CONFIGURATION_FILE_TMP

            # Append new 'Vulnerability Detection' config.
            cat ${VULN_TEMPLATE_PATH} >> $OSSEC_CONFIGURATION_FILE_TMP
            printf "\n" >> $OSSEC_CONFIGURATION_FILE_TMP

            # Append new 'Indexer' config.
            cat ${INDEXER_TEMPLATE_PATH} >> $OSSEC_CONFIGURATION_FILE_TMP
            printf "\n" >> $OSSEC_CONFIGURATION_FILE_TMP

            # Append current config succeeding the old 'Vulnerability Detector' config.
            printf "%s\n" "$OSSEC_CONFIGURATION_FILE_AFTER_NEW_VD" >> $OSSEC_CONFIGURATION_FILE_TMP

            mv $OSSEC_CONFIGURATION_FILE_TMP $OSSEC_CONF_PATH
        fi
    fi
}
