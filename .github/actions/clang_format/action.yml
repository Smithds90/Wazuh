name: "Codding style check"
description: "Validates the codding style of a given module"

inputs:
  path:
    required: true
    description: "Path to validate"
    default: src/

runs:
  using: "composite"
  steps:    
      # Dependencies for testing:
      # - clang-format 
      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang-format 
          version: 1.0

      - name: Check codding style
        shell: bash
        run: |

          # Execute in dry-run and fail on warnings
          arguments="--dry-run "
          #arguments+="-Werror "

          # Retrieve all the source files for the desired module
          sourceFiles=$(find ${{ inputs.path }} -type f \( -name "*.cpp" -o -name "*.hpp" \) | tr '\n' ' ')
          arguments+="-i $sourceFiles "

          ERRORS_FILE=${{ inputs.path }}/clang_format_errors.txt
          clang-format $arguments 2> ${ERRORS_FILE}

          # Check if there are errors
          if [ -s "${ERRORS_FILE}" ]; then
            echo "Clang-format errors found"
            exit 1
          else
            echo "Clang-format check passed successfully"
          fi

      # Upload errors as an artifact, when failed
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Clang-format errors
          path: ${{ inputs.path }}/clang_format_errors.txt
          retention-days: 1
