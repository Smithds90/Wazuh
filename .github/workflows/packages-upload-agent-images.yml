name: Package - Upload Docker images for linux agent - DEB|RPM - amd64 and i386
on:
  workflow_dispatch:
    inputs:
      tag:
        description: |
          Tag name of the Docker image to be uploaded.
          Use 'developer' to set branch name as tag.
          Use 'auto' to set branch version as tag.
          Default is 'auto'.
        required: false
        default: 'auto'
      architecture:
        type: choice
        description: 'Choose the appropriate architecture for deploying the wazuh-agent.'
        required: true
        options:
          - 'x86_64'
          - 'amd64'
          - 'i386'
      system:
        type: choice
        description: 'Package format [deb, rpm].'
        required: true
        options:
          - deb
          - rpm
      legacy:
        type: boolean
        description: |
          'Only for RPM - Build package for CentOS 5.'
        required: false

  workflow_call:
    inputs:
      tag:
        type: string
        default: 'auto'
        required: false
      architecture:
        type: string
        required: true
      system:
        type: string
        required: true
      legacy:
        type: boolean
        required: false

jobs:
  Upload-package-building-images:
    runs-on: ubuntu-latest
    name: Upload docker image pkg_${{ inputs.system }}_${{ inputs.legacy && 'legacy' || 'agent' }}_builder_${{ inputs.architecture }}

    steps:
      - name: Cancel previous runs
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: 'true'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_after_successful_duplicate: 'false'

      - uses: actions/checkout@v4

      - name: Set architecture
        run: |
          if [ ${{ inputs.system }} == 'rpm' ]; then
            if [ "${{ env.architecture }}" = "armv7hl" ]; then
                arch="armhf"
            elif [ "${{ inputs.architecture }}" = "aarch64" ]; then
                arch="arm64"
            elif [ "${{ inputs.architecture }}" = "x86_64" ]; then
                arch="amd64"
            else
                arch=${{ inputs.architecture }}
            fi
          else
            arch=${{ inputs.architecture }}
          fi
          echo "ARCH=$arch" >> $GITHUB_ENV;

      - name: Set-env
        run: |
          if [ "${{ inputs.legacy }}" == "true" ]; then
            echo "CONTAINER_NAME=pkg_${{ inputs.system }}_legacy_builder_${{ env.ARCH }}" >> $GITHUB_ENV
            echo "DOCKERFILE_PATH=packages/${{ inputs.system }}s/${{ env.ARCH }}/legacy" >> $GITHUB_ENV
          else
            echo "CONTAINER_NAME=pkg_${{ inputs.system }}_agent_builder_${{ env.ARCH }}" >> $GITHUB_ENV
            echo "DOCKERFILE_PATH=packages/${{ inputs.system }}s/${{ env.ARCH}}/agent" >> $GITHUB_ENV
          fi


      - name: Set tag
        run: |
          VERSION=$(sed 's/.*\([0-9]\.[0-9]*\.[0-9]*\).*/\1/' $GITHUB_WORKSPACE/src/VERSION)
          if [ "${{ inputs.tag }}" == "auto" ]; then echo "TAG=$VERSION" >> $GITHUB_ENV;
          elif [ "${{ inputs.tag }}" == "developer" ]; then echo "TAG=$(sed 's|[/\]|--|g' <<< ${{ github.ref_name }})" >> $GITHUB_ENV;
          else echo "TAG=${{ inputs.tag }}" >> $GITHUB_ENV; fi

      - name: Copy build.sh and utils to Dockerfile path
        run: |
          cp $GITHUB_WORKSPACE/packages/build.sh $GITHUB_WORKSPACE/${{ env.DOCKERFILE_PATH }}
          cp $GITHUB_WORKSPACE/packages/${{ inputs.system }}s/utils/* $GITHUB_WORKSPACE/${{ env.DOCKERFILE_PATH }}

      - name: Copy centos-5-i386.tar.gz to Dockerfile legacy path
        if: ${{ inputs.legacy == true }}
        run: |
          cd $GITHUB_WORKSPACE/${{ env.DOCKERFILE_PATH }}
          curl -sO "https://packages-dev.wazuh.com/utils/centos-5-i386-build/centos-5-i386.tar.gz"

      - name: Build and push image ${{ env.CONTAINER_NAME }} with tag ${{ env.TAG }} to Github Container Registry
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/build_and_push_image_to_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} ${{env.CONTAINER_NAME}} ${{ env.DOCKERFILE_PATH }} ${{ env.TAG }}
