# Security Configuration Assessment
# CIS Checks for Debian Linux 10
# Copyright (C) 2015, Wazuh Inc.
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation
#
# Based on:
# Center for Internet Security Debian Linux 10 Benchmark v1.0.0 - 02-13-2020

policy:
  id: "cis_debian11"
  file: "cis_debian11.yml"
  name: "CIS Benchmark for Debian/Linux 11"
  description: "This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 11."
  references:
    - https://www.cisecurity.org/cis-benchmarks/

requirements:
  title: "Check Debian version"
  description: "Requirements for running the SCA scan against Debian/Ubuntu."
  condition: all
  rules:
    - "f:/etc/debian_version"
    - "f:/proc/sys/kernel/ostype -> Linux"

checks:

  ############################################################
  # 3 Network Configuration
  ############################################################

  ############################################################
  # 3.1 Disable unused network protocols and devices
  ############################################################
 
  # 3.1.1 Ensure system is checked to determine if IPv6 is enabled (Manual) - Not Implemented

  # 3.1.2 Ensure wireless interfaces are disabled (Automated) - Not Implemented

  # 3.1.3 Ensure DCCP is disabled (Automated) - Not Implemented

  # 3.1.4 Ensure SCTP is disabled (Automated) - Not Implemented

  # 3.1.5 Ensure RDS is disabled (Automated) - Not Implemented

  # 3.1.6 Ensure TIPC is disabled (Automated) - Not Implemented

  ############################################################
  # 3.2 Network Parameters (Host Only)
  ############################################################   

  # 3.2.1 Ensure packet redirect sending is disabled (Automated) - Not Implemented

  # 3.2.2 Ensure IP forwarding is disabled (Automated) - Not Implemented

  # 3.3.1 Ensure source routed packets are not accepted (Automated) - Not Implemented

  # 3.3.2 Ensure ICMP redirects are not accepted (Automated) - Not Implemented

  # 3.3.3 Ensure secure ICMP redirects are not accepted (Automated) - Not Implemented

  # 3.3.4 Ensure suspicious packets are logged (Automated) - Not Implemented

  # 3.3.5 Ensure broadcast ICMP requests are ignored (Automated) - Not Implemented

  # 3.3.6 Ensure bogus ICMP responses are ignored (Automated) - Not Implemented
 
  # 3.3.7 Ensure Reverse Path Filtering is enabled (Automated) - Not Implemented

  # 3.3.8 Ensure TCP SYN Cookies is enabled (Automated) - Not Implemented

  # 3.3.9 Ensure IPv6 router advertisements are not accepted (Automated) - Not Implemented

  ############################################################
  # 3.5 Firewall Configuration
  ############################################################   

  ############################################################
  # 3.5.1 Configure UncomplicatedFirewall
  ############################################################   

  # 3.5.1.1.Ensure ufw is installed (Automated) 
  - id: 3078
    title: "Ensure ufw is installed"
    description: "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall."
    rationale: "A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end. The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host. Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package."
    remediation: "Run the following command to install Uncomplicated Firewall (UFW): apt install ufw" 
    compliance:
      - cis: ["3.5.1.1"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:dpkg-query -W -f='${binary:Package}\t${Status}\t${db:Status-Status}\n' ufw -> r:install ok installed"

  # 3.5.1.2 Ensure iptables-persistent is not installed with ufw (Automated)
  - id: 3079
    title: "Ensure iptables-persistent is not installed with ufw"
    description: "The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin"
    rationale: "Running both ufw and the services included in the iptables-persistent package may lead to conflict"
    remediation: "Run the following command to remove the iptables-persistent package: # apt purge iptables-persistent" 
    compliance:
      - cis: ["3.5.1.2"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0005"]
    condition: all
    rules:
      - "c:dpkg-query -s iptables-persistent -> r:package 'iptables-persistent' is not installed"

  # 3.5.1.3 Ensure ufw service is enabled (Automated)
  - id: 3080
    title: "Ensure ufw service is enabled"
    description: "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall. Notes: When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall. Run the following command before running ufw enable. # ufw allow proto tcp from any to any port 22 .The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy) By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable"
    rationale: "The ufw service must be enabled and running in order for ufw to protect the system"
    remediation: "Run the following command to unmask the ufw daemon: # systemctl unmask ufw.service .Run the following command to enable and start the ufw daemon: # systemctl --now enable ufw.service active Run the following command to enable ufw: # ufw enable" 
    impact: "Changing firewall settings while connected over network can result in being locked out of the system."
    referencces:
      - http://manpages.ubuntu.com/manpages/precise/en/man8/ufw.8.html
    compliance:
      - cis: ["3.5.1.3"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0005"]
    condition: all
    rules:
      - "c:systemctl is-enabled ufw.service -> r:enabled"
      - "c:systemctl is-active ufw -> r:^active"
      - "c:ufw status -> r:active"

  # 3.5.1.4 Ensure ufw loopback traffic is configured (Automated)
  - id: 3081
    title: "Ensure ufw loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6)."
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # ufw allow in on lo # ufw allow out on lo # ufw deny in from 127.0.0.0/8 # ufw deny in from ::1" 
    compliance:
      - cis: ["3.5.1.4"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:ufw status verbose -> r:Anywhere on lo\s*\t*ALLOW IN\s*\t*Anywhere'
      - 'c:ufw status verbose -> r:Anywhere\s*\t*DENY IN\s*\t*127.0.0.0/8'
      - 'c:ufw status verbose -> r:Anywhere \(v6\) on lo\s*\t*ALLOW IN\s*\t*Anywhere \(v6\)'
      - 'c:ufw status verbose -> r:Anywhere \(v6\)\s*\t*DENY IN\s*\t*::1'
      - 'c:ufw status verbose -> r:Anywhere\s*\t*ALLOW OUT\s*\t*Anywhere on lo'
      - 'c:ufw status verbose -> r:Anywhere \(v6\)\s*\t*ALLOW OUT\s*\t*Anywhere \(v6\) on lo'

  # 3.5.1.5 Ensure ufw outbound connections are configured (Manual) - Not Implemented

  # 3.5.1.6 Ensure ufw firewall rules exist for all open ports (Automated) - Not Implemented

  # 3.5.1.7 Ensure ufw default deny firewall policy (Automated)
  - id: 3082
    title: "Ensure ufw default deny firewall policy"
    description: "A default deny policy on connections ensures that any unconfigured network usage will be rejected. Note: Any port or protocol without a explicit allow before the default deny will be blocked"
    rationale: "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following commands to implement a default deny policy: # ufw default deny incoming # ufw default deny outgoing # ufw default deny routed" 
    impact: "Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny. ufw allow git, ufw allow in http, ufw allow out http <- required for apt to connect to repository, ufw allow in https, ufw allow out https ,ufw allow out 53 ,ufw logging on"
    compliance:
      - cis: ["3.5.1.7"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:ufw status verbose -> r:^Default && r:deny\W+(incoming)|reject\W+(incoming)'
      - 'c:ufw status verbose -> r:^Default && r:deny\W+(outgoing)|reject\W+(outgoing)'
      - 'c:ufw status verbose -> r:^Default && r:deny\W+(routed)|reject\W+(routed)'

  ############################################################
  # 3.5.2 Configure nftables
  ############################################################  

  # 3.5.2.1 Ensure nftables is installed (Automated)
  - id: 3083
    title: "Ensure nftables is installed"
    description: "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem. Notes: nftables is available in Linux kernel 3.13 and newer .Only one firewall utility should be installed and configured .Changing firewall settings while connected over the network can result in being locked out of the system"
    rationale: "nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host."
    remediation: "Run the following command to install nftables: # apt install nftables" 
    compliance:
      - cis: ["3.5.2.1"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:dpkg-query -s nftables -> r:install ok installed"

  # 3.5.2.2 Ensure ufw is uninstalled or disabled with nftables (Automated)
  - id: 3084
    title: "Ensure ufw is uninstalled or disabled with nftables"
    description: "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use."
    rationale: "Running both the nftables service and ufw may lead to conflict and unexpected results."
    remediation: "Run one of the following commands to either remove ufw or disable ufw .Run the following command to remove ufw: # apt purge ufw .Run the following command to disable ufw: # ufw disable" 
    compliance:
      - cis: ["3.5.2.2"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0005"]
    condition: any
    rules:
      - "c:dpkg-query -s ufw -> r:package 'ufw' is not installed"
      - "c:ufw status -> r:inactive"

  # 3.5.2.3 Ensure iptables are flushed with nftables (Manual) - Not Implemented

  # 3.5.2.4 Ensure a nftables table exists (Automated)
  - id: 3085
    title: "Ensure a nftables table exists"
    description: "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families."
    rationale: "nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic."
    remediation: "Run the following command to create a table in nftables # nft create table inet <table name> Example: # nft create table inet filter" 
    impact: "Adding rules to a running nftables can cause loss of connectivity to the system"
    compliance:
      - cis: ["3.5.2.4"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:nft list tables -> r:\w+'

  # 3.5.2.5 Ensure nftables base chains exist (Automated)
  - id: 3086
    title: "Ensure nftables base chains exist"
    description: "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization."
    rationale: "If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
    remediation: "Run the following command to create the base chains: # nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0  } Example: # nft create chain inet filter input { type filter hook input priority 0  } # nft create chain inet filter forward { type filter hook forward priority 0  } # nft create chain inet filter output { type filter hook output priority 0  }"
    impact: "If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity. Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chains policy to drop"
    compliance:
      - cis: ["3.5.2.5"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0005"]
    condition: all
    rules:
      - "c:nft list ruleset -> r:hook input"
      - "c:nft list ruleset -> r:hook forward"
      - "c:nft list ruleset -> r:hook output"

  # 3.5.2.6 Ensure nftables loopback traffic is configured (Automated)
  - id: 3087
    title: "Ensure nftables loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network"
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # nft add rule inet filter input iif lo accept # nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop IF IPv6 is enabled on the system: Run the following command to implement the IPv6 loopback rule: # nft add rule inet filter input ip6 saddr ::1 counter drop" 
    compliance:
      - cis: ["3.5.2.6"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0005"]
    condition: all
    rules:
      - 'c:iptables -L INPUT -v -n -> r:\.*ACCEPT\.*all\.*lo\.**\.*0.0.0.0/0\.*0.0.0.0/0'
      - 'c:iptables -L INPUT -v -n -> r:\.*DROP\.*all\.**\.**\.*127.0.0.0/8\.*0.0.0.0/0'
      - 'c:iptables -L OUTPUT -v -n -> r:\.*ACCEPT\.*all\.**\.*lo\.*0.0.0.0/0\.*0.0.0.0/0'

  # 3.5.2.7 Ensure nftables outbound and established connections are configured (Manual) - Not Implemented"

  # 3.5.2.8 Ensure nftables default deny firewall policy (Automated)
  - id: 3088
    title: "Ensure nftables default deny firewall policy"
    description: "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain."
    rationale: "There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack. It is easier to white list acceptable usage than to black list unacceptable usage. Note: Changing firewall settings while connected over network can result in being locked out of the system."
    remediation: "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy: # nft chain <table family> <table name> <chain name> { policy drop \ } Example: # nft chain inet filter input { policy drop \ } # nft chain inet filter forward { policy drop \ } # nft chain inet filter output { policy drop \ }" 
    impact: "If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity. Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
    default value: "accept"
    references: 
      - Manual Page nft
    compliance:
      - cis: ["3.5.2.8"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:nft list ruleset -> r:hook input && r:policy drop"
      - "c:nft list ruleset -> r:hook forward && r:policy drop"
      - "c:nft list ruleset -> r:hook output && r:policy drop"

  # 3.5.2.9 Ensure nftables service is enabled (Automated)
  - id: 3089
    title: "Ensure nftables service is enabled"
    description: "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service."
    rationale: "The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service."
    remediation: "Run the following command to enable the nftables service: # systemctl enable nftables" 
    compliance:
      - cis: ["3.5.2.9"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:systemctl is-enabled nftables -> r:enabled"

  # 3.5.2.10 Ensure nftables rules are permanent (Automated)
  - id: 3090
    title: "Ensure nftables rules are permanent"
    description: "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames. The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset. A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered."
    rationale: "Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot"
    remediation: "Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot .Example: # vi /etc/nftables.conf .Add the line: include '/etc/nftables.rules'" 
    compliance:
      - cis: ["3.5.2.10"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031"]
    condition: all
    rules:
      - "f:/etc/nftables.conf -> r:include *"

  ############################################################
  # 3.5.3 Configure iptables
  ############################################################  

  ############################################################
  # 3.5.3.1 Configure iptables software
  ############################################################  

  # 3.5.3.1.1 Ensure iptables packages are installed (Automated)
  - id: 3091
    title: "Ensure iptables packages are installed"
    description: "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames."
    rationale: "A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
    remediation: "Run the following command to install iptables and iptables-persistent # apt install iptables iptables-persistent" 
    compliance:
      - cis: ["3.5.3.1.1"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:apt list iptables iptables-persistent -> r:installed,automatic"

  # 3.5.3.1.2 Ensure nftables is not installed with iptables (Automated)
  - id: 3092
    title: "Ensure nftables is not installed with iptables"
    description: "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables."
    rationale: "Running both iptables and nftables may lead to conflict."
    remediation: "Run the following command to remove nftables: # apt purge nftables" 
    compliance:
      - cis: ["3.5.3.1.2"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
    condition: all
    rules:
      - "c:dpkg-query -W -f='${binary:Package}\t${Status}\t${db:Status-Status}\n' nftables -> r:unknown ok not-installed"

  # 3.5.3.1.3 Ensure ufw is uninstalled or disabled with iptables (Automated)
  - id: 3093
    title: "Ensure ufw is uninstalled or disabled with iptables"
    description: "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use. Uses a command-line interface consisting of a small number of simple commands .Uses iptables for configuration"
    rationale: "Running iptables.persistent with ufw enabled may lead to conflict and unexpected results."
    remediation: "Run one of the following commands to either remove ufw or stop and mask ufw Run the following command to remove ufw: # apt purge ufw OR Run the following commands to disable ufw: # ufw disable # systemctl stop ufw # systemctl mask ufw" 
    compliance:
      - cis: ["3.5.3.1.3"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
    condition: any
    rules:
      - "c:dpkg-query -W -f='${binary:Package}\t${Status}\t${db:Status-Status}\n' ufw -> r:unknown ok not-installed"
      - "c:ufw status -> r:inactive"
      - "c:systemctl is-enabled ufw -> r:masked"

  ############################################################
  # 3.5.3.2 Configure IPv4 iptables
  ############################################################  

  # 3.5.3.2.1 Ensure iptables default deny firewall policy (Automated)
  - id: 3094
    title: "Ensure iptables default deny firewall policy"
    description: "A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Notes: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well"
    rationale: "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP # iptables -P OUTPUT DROP # iptables -P FORWARD DROP" 
    compliance:
      - cis: ["3.5.3.2.1"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:iptables -L -> r:Chain INPUT \(policy DROP\)|Chain INPUT \(policy REJECT\)'
      - 'c:iptables -L -> r:Chain FORWARD \(policy DROP\)|Chain FORWARD \(policy REJECT\)'
      - 'c:iptables -L -> r:Chain OUTPUT \(policy DROP\)|Chain OUTPUT \(policy REJECT\)'

  # 3.5.3.2.2 Ensure iptables loopback traffic is configured (Automated)
  - id: 3095
    title: "Ensure iptables loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8). Notes: Changing firewall settings while connected over network can result in being locked out of the system .Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well"
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP" 
    compliance:
      - cis: ["3.5.3.2.2"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:iptables -L INPUT -v -n -> r:\.*ACCEPT\.*all\.*lo\.**\.*0.0.0.0/0\.*0.0.0.0/0'
      - 'c:iptables -L INPUT -v -n -> r:\.*DROP\.*all\.**\.**\.*127.0.0.0/8\.*0.0.0.0/0'
      - 'c:iptables -L OUTPUT -v -n -> r:\.*ACCEPT\.*all\.**\.*lo\.*0.0.0.0/0\.*0.0.0.0/0'

  # 3.5.3.2.3 Ensure iptables outbound and established connections are configured (Manual) - Not Implemented

  # 3.5.3.2.4 Ensure iptables firewall rules exist for all open ports (Automated) - Not Implemented

  ############################################################
  # 3.5.3.3 Configure IPv6 ip6tables
  ############################################################  

  # 3.5.3.3.1 Ensure ip6tables default deny firewall policy (Automated)
  - id: 3096
    title: "Ensure ip6tables default deny firewall policy"
    description: "A default deny all policy on connections ensures that any unconfigured network usage will be rejected. Note: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
    rationale: "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP # ip6tables -P OUTPUT DROP # ip6tables -P FORWARD DROP" 
    compliance:
      - cis: ["3.5.3.3.1"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - soc_2: ["CC6.6"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - "c:ip6tables -L -> r:^Chain INPUT && r:policy DROP"
      - "c:ip6tables -L -> r:^Chain FORWARD && r:policy DROP"
      - "c:ip6tables -L -> r:^Chain OUTPUT && r:policy DROP"

  # 3.5.3.3.2 Ensure ip6tables loopback traffic is configured (Automated)
  - id: 3097
    title: "Ensure ip6tables loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1). Note: Changing firewall settings while connected over network can result in being locked out of the system. Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well."
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s ::1 -j DROP" 
    compliance:
      - cis: ["3.5.3.3.2"]
      - cis_csc_v8: ["4.4","4.5"]
      - cis_csc_v7: ["9.4"]
      - cmmc_v2.0: ["AC.L1-3.1.20","CM.L2-3.4.7","SC.L1-3.13.1","SC.L2-3.13.6"]
      - pci_dss_3.2.1: ["1.1.4","1.3.1","1.4"]
      - pci_dss_4.0: ["1.2.1","1.4.1"]
      - nist_sp_800-53: ["SC-7(5)"]
      - iso_27001-2013: ["A.13.1.1"]
      - mitre_techniques: ["T1562","T1562.004"]
      - mitre_tactics: ["TA0011"]
      - mitre_mitigations: ["M1031","M1037"]
    condition: all
    rules:
      - 'c:ip6tables -L INPUT -v -n -> r:\.*ACCEPT\.*all\.*lo\.**\.*::/0\.*::/0'
      - 'c:ip6tables -L INPUT -v -n -> r:\.*DROP\.*all\.**\.**\.*::1\.*::/0'
      - 'c:ip6tables -L OUTPUT -v -n -> r:\.*ACCEPT\.*all\.**\.*lo\.*::/0\.*::/0'

  # 3.5.3.3.3 Ensure ip6tables outbound and established connections are configured (Manual)

  # 3.5.3.3.4 Ensure ip6tables firewall rules exist for all open ports (Automated) - Not Implemented
